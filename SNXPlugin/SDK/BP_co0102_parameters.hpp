#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_co0102

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ECableType_structs.hpp"


namespace SDK::Params
{

// Function BP_co0102.BP_co0102_C.ExecuteUbergraph_BP_co0102
// 0x0038 (0x0038 - 0x0000)
struct BP_co0102_C_ExecuteUbergraph_BP_co0102 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_New_Visibility;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84FD[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Rate;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84FE[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_co0102_C*                          K2Node_DynamicCast_AsABP_Co_0102;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERSCableGravityType                           K2Node_Event_Type_1;                               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERSCableGravityType                           K2Node_Event_Type;                                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EndOverrideGravity_ReturnValue;           // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BeginOverrideGravity_ReturnValue;         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84FF[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Dissolve;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ParentDissolve;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_co0102_C_ExecuteUbergraph_BP_co0102) == 0x000008, "Wrong alignment on BP_co0102_C_ExecuteUbergraph_BP_co0102");
static_assert(sizeof(BP_co0102_C_ExecuteUbergraph_BP_co0102) == 0x000038, "Wrong size on BP_co0102_C_ExecuteUbergraph_BP_co0102");
static_assert(offsetof(BP_co0102_C_ExecuteUbergraph_BP_co0102, EntryPoint) == 0x000000, "Member 'BP_co0102_C_ExecuteUbergraph_BP_co0102::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_ExecuteUbergraph_BP_co0102, K2Node_Event_New_Visibility) == 0x000004, "Member 'BP_co0102_C_ExecuteUbergraph_BP_co0102::K2Node_Event_New_Visibility' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_ExecuteUbergraph_BP_co0102, K2Node_Event_Rate) == 0x000008, "Member 'BP_co0102_C_ExecuteUbergraph_BP_co0102::K2Node_Event_Rate' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_ExecuteUbergraph_BP_co0102, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_co0102_C_ExecuteUbergraph_BP_co0102::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_ExecuteUbergraph_BP_co0102, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'BP_co0102_C_ExecuteUbergraph_BP_co0102::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_ExecuteUbergraph_BP_co0102, K2Node_DynamicCast_AsABP_Co_0102) == 0x000018, "Member 'BP_co0102_C_ExecuteUbergraph_BP_co0102::K2Node_DynamicCast_AsABP_Co_0102' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_ExecuteUbergraph_BP_co0102, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_co0102_C_ExecuteUbergraph_BP_co0102::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_ExecuteUbergraph_BP_co0102, K2Node_Event_Type_1) == 0x000021, "Member 'BP_co0102_C_ExecuteUbergraph_BP_co0102::K2Node_Event_Type_1' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_ExecuteUbergraph_BP_co0102, K2Node_Event_Type) == 0x000022, "Member 'BP_co0102_C_ExecuteUbergraph_BP_co0102::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_ExecuteUbergraph_BP_co0102, CallFunc_EndOverrideGravity_ReturnValue) == 0x000023, "Member 'BP_co0102_C_ExecuteUbergraph_BP_co0102::CallFunc_EndOverrideGravity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_ExecuteUbergraph_BP_co0102, CallFunc_BeginOverrideGravity_ReturnValue) == 0x000024, "Member 'BP_co0102_C_ExecuteUbergraph_BP_co0102::CallFunc_BeginOverrideGravity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_ExecuteUbergraph_BP_co0102, K2Node_Event_Dissolve) == 0x000028, "Member 'BP_co0102_C_ExecuteUbergraph_BP_co0102::K2Node_Event_Dissolve' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_ExecuteUbergraph_BP_co0102, K2Node_Event_ParentDissolve) == 0x00002C, "Member 'BP_co0102_C_ExecuteUbergraph_BP_co0102::K2Node_Event_ParentDissolve' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_ExecuteUbergraph_BP_co0102, K2Node_Event_DeltaSeconds) == 0x000030, "Member 'BP_co0102_C_ExecuteUbergraph_BP_co0102::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_ExecuteUbergraph_BP_co0102, K2Node_Event_EndPlayReason) == 0x000034, "Member 'BP_co0102_C_ExecuteUbergraph_BP_co0102::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BP_co0102.BP_co0102_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_co0102_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_co0102_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_co0102_C_ReceiveEndPlay");
static_assert(sizeof(BP_co0102_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_co0102_C_ReceiveEndPlay");
static_assert(offsetof(BP_co0102_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_co0102_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_co0102.BP_co0102_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_co0102_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_co0102_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_co0102_C_ReceiveTick");
static_assert(sizeof(BP_co0102_C_ReceiveTick) == 0x000004, "Wrong size on BP_co0102_C_ReceiveTick");
static_assert(offsetof(BP_co0102_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_co0102_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_co0102.BP_co0102_C.SetEnegyCableDissolve
// 0x0008 (0x0008 - 0x0000)
struct BP_co0102_C_SetEnegyCableDissolve final
{
public:
	float                                         Dissolve;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParentDissolve;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_co0102_C_SetEnegyCableDissolve) == 0x000004, "Wrong alignment on BP_co0102_C_SetEnegyCableDissolve");
static_assert(sizeof(BP_co0102_C_SetEnegyCableDissolve) == 0x000008, "Wrong size on BP_co0102_C_SetEnegyCableDissolve");
static_assert(offsetof(BP_co0102_C_SetEnegyCableDissolve, Dissolve) == 0x000000, "Member 'BP_co0102_C_SetEnegyCableDissolve::Dissolve' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_SetEnegyCableDissolve, ParentDissolve) == 0x000004, "Member 'BP_co0102_C_SetEnegyCableDissolve::ParentDissolve' has a wrong offset!");

// Function BP_co0102.BP_co0102_C.EndOverrideGravity
// 0x0001 (0x0001 - 0x0000)
struct BP_co0102_C_EndOverrideGravity final
{
public:
	ERSCableGravityType                           Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_co0102_C_EndOverrideGravity) == 0x000001, "Wrong alignment on BP_co0102_C_EndOverrideGravity");
static_assert(sizeof(BP_co0102_C_EndOverrideGravity) == 0x000001, "Wrong size on BP_co0102_C_EndOverrideGravity");
static_assert(offsetof(BP_co0102_C_EndOverrideGravity, Type) == 0x000000, "Member 'BP_co0102_C_EndOverrideGravity::Type' has a wrong offset!");

// Function BP_co0102.BP_co0102_C.BeginOverrideGravity
// 0x0001 (0x0001 - 0x0000)
struct BP_co0102_C_BeginOverrideGravity final
{
public:
	ERSCableGravityType                           Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_co0102_C_BeginOverrideGravity) == 0x000001, "Wrong alignment on BP_co0102_C_BeginOverrideGravity");
static_assert(sizeof(BP_co0102_C_BeginOverrideGravity) == 0x000001, "Wrong size on BP_co0102_C_BeginOverrideGravity");
static_assert(offsetof(BP_co0102_C_BeginOverrideGravity, Type) == 0x000000, "Member 'BP_co0102_C_BeginOverrideGravity::Type' has a wrong offset!");

// Function BP_co0102.BP_co0102_C.SetCodePower
// 0x0004 (0x0004 - 0x0000)
struct BP_co0102_C_SetCodePower final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_co0102_C_SetCodePower) == 0x000004, "Wrong alignment on BP_co0102_C_SetCodePower");
static_assert(sizeof(BP_co0102_C_SetCodePower) == 0x000004, "Wrong size on BP_co0102_C_SetCodePower");
static_assert(offsetof(BP_co0102_C_SetCodePower, Rate) == 0x000000, "Member 'BP_co0102_C_SetCodePower::Rate' has a wrong offset!");

// Function BP_co0102.BP_co0102_C.SetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_co0102_C_SetVisibility final
{
public:
	bool                                          New_Visibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_co0102_C_SetVisibility) == 0x000001, "Wrong alignment on BP_co0102_C_SetVisibility");
static_assert(sizeof(BP_co0102_C_SetVisibility) == 0x000001, "Wrong size on BP_co0102_C_SetVisibility");
static_assert(offsetof(BP_co0102_C_SetVisibility, New_Visibility) == 0x000000, "Member 'BP_co0102_C_SetVisibility::New_Visibility' has a wrong offset!");

// Function BP_co0102.BP_co0102_C.UpdateDither
// 0x0014 (0x0014 - 0x0000)
struct BP_co0102_C_UpdateDither final
{
public:
	bool                                          CallFunc_IsCableMode_bResult;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8500[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8501[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_co0102_C_UpdateDither) == 0x000004, "Wrong alignment on BP_co0102_C_UpdateDither");
static_assert(sizeof(BP_co0102_C_UpdateDither) == 0x000014, "Wrong size on BP_co0102_C_UpdateDither");
static_assert(offsetof(BP_co0102_C_UpdateDither, CallFunc_IsCableMode_bResult) == 0x000000, "Member 'BP_co0102_C_UpdateDither::CallFunc_IsCableMode_bResult' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_UpdateDither, CallFunc_GetRate_ReturnValue) == 0x000004, "Member 'BP_co0102_C_UpdateDither::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_UpdateDither, CallFunc_IsOver_ReturnValue) == 0x000008, "Member 'BP_co0102_C_UpdateDither::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_UpdateDither, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_co0102_C_UpdateDither::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_UpdateDither, CallFunc_IsEnable_ReturnValue) == 0x000010, "Member 'BP_co0102_C_UpdateDither::CallFunc_IsEnable_ReturnValue' has a wrong offset!");

// Function BP_co0102.BP_co0102_C.DoCodeStart
// 0x0010 (0x0010 - 0x0000)
struct BP_co0102_C_DoCodeStart final
{
public:
	ECableType                                    Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOptionNoCutin;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bNexusDrive;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bExColor;                                          // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8502[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_co0102_C_DoCodeStart) == 0x000004, "Wrong alignment on BP_co0102_C_DoCodeStart");
static_assert(sizeof(BP_co0102_C_DoCodeStart) == 0x000010, "Wrong size on BP_co0102_C_DoCodeStart");
static_assert(offsetof(BP_co0102_C_DoCodeStart, Type) == 0x000000, "Member 'BP_co0102_C_DoCodeStart::Type' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_DoCodeStart, bOptionNoCutin) == 0x000001, "Member 'BP_co0102_C_DoCodeStart::bOptionNoCutin' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_DoCodeStart, bNexusDrive) == 0x000002, "Member 'BP_co0102_C_DoCodeStart::bNexusDrive' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_DoCodeStart, bExColor) == 0x000003, "Member 'BP_co0102_C_DoCodeStart::bExColor' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_DoCodeStart, bDummy) == 0x000004, "Member 'BP_co0102_C_DoCodeStart::bDummy' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_DoCodeStart, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_co0102_C_DoCodeStart::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_DoCodeStart, CallFunc_Conv_IntToByte_ReturnValue) == 0x00000C, "Member 'BP_co0102_C_DoCodeStart::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_DoCodeStart, CallFunc_GetValidValue_ReturnValue) == 0x00000D, "Member 'BP_co0102_C_DoCodeStart::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function BP_co0102.BP_co0102_C.DoCodeEnd
// 0x0004 (0x0004 - 0x0000)
struct BP_co0102_C_DoCodeEnd final
{
public:
	ECableType                                    Ttype;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnd;                                              // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LEnd;                                              // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_co0102_C_DoCodeEnd) == 0x000001, "Wrong alignment on BP_co0102_C_DoCodeEnd");
static_assert(sizeof(BP_co0102_C_DoCodeEnd) == 0x000004, "Wrong size on BP_co0102_C_DoCodeEnd");
static_assert(offsetof(BP_co0102_C_DoCodeEnd, Ttype) == 0x000000, "Member 'BP_co0102_C_DoCodeEnd::Ttype' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_DoCodeEnd, bEnd) == 0x000001, "Member 'BP_co0102_C_DoCodeEnd::bEnd' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_DoCodeEnd, LEnd) == 0x000002, "Member 'BP_co0102_C_DoCodeEnd::LEnd' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_DoCodeEnd, CallFunc_IsEnable_ReturnValue) == 0x000003, "Member 'BP_co0102_C_DoCodeEnd::CallFunc_IsEnable_ReturnValue' has a wrong offset!");

// Function BP_co0102.BP_co0102_C.InitializeEnergyCable
// 0x0050 (0x0050 - 0x0000)
struct BP_co0102_C_InitializeEnergyCable final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8503[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SASCableEnergyMesh_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_co0102_C_InitializeEnergyCable) == 0x000010, "Wrong alignment on BP_co0102_C_InitializeEnergyCable");
static_assert(sizeof(BP_co0102_C_InitializeEnergyCable) == 0x000050, "Wrong size on BP_co0102_C_InitializeEnergyCable");
static_assert(offsetof(BP_co0102_C_InitializeEnergyCable, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'BP_co0102_C_InitializeEnergyCable::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_InitializeEnergyCable, CallFunc_MakeLiteralByte_ReturnValue) == 0x000030, "Member 'BP_co0102_C_InitializeEnergyCable::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_InitializeEnergyCable, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000038, "Member 'BP_co0102_C_InitializeEnergyCable::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_InitializeEnergyCable, CallFunc_FinishSpawningActor_ReturnValue) == 0x000040, "Member 'BP_co0102_C_InitializeEnergyCable::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_InitializeEnergyCable, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_co0102_C_InitializeEnergyCable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_co0102.BP_co0102_C.FinalizeEnergyCable
// 0x0002 (0x0002 - 0x0000)
struct BP_co0102_C_FinalizeEnergyCable final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_co0102_C_FinalizeEnergyCable) == 0x000001, "Wrong alignment on BP_co0102_C_FinalizeEnergyCable");
static_assert(sizeof(BP_co0102_C_FinalizeEnergyCable) == 0x000002, "Wrong size on BP_co0102_C_FinalizeEnergyCable");
static_assert(offsetof(BP_co0102_C_FinalizeEnergyCable, EndPlayReason) == 0x000000, "Member 'BP_co0102_C_FinalizeEnergyCable::EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_FinalizeEnergyCable, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_co0102_C_FinalizeEnergyCable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_co0102.BP_co0102_C.GetEnergyCable
// 0x0008 (0x0008 - 0x0000)
struct BP_co0102_C_GetEnergyCable final
{
public:
	class ABP_SASCableEnergyMesh_C*               Param_EnergyMesh;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_co0102_C_GetEnergyCable) == 0x000008, "Wrong alignment on BP_co0102_C_GetEnergyCable");
static_assert(sizeof(BP_co0102_C_GetEnergyCable) == 0x000008, "Wrong size on BP_co0102_C_GetEnergyCable");
static_assert(offsetof(BP_co0102_C_GetEnergyCable, Param_EnergyMesh) == 0x000000, "Member 'BP_co0102_C_GetEnergyCable::Param_EnergyMesh' has a wrong offset!");

// Function BP_co0102.BP_co0102_C.StartEnergyCable
// 0x0010 (0x0010 - 0x0000)
struct BP_co0102_C_StartEnergyCable final
{
public:
	class ABP_SASCableEnergyMesh_C*               CallFunc_GetEnergyCable_EnergyMesh;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_co0102_C_StartEnergyCable) == 0x000008, "Wrong alignment on BP_co0102_C_StartEnergyCable");
static_assert(sizeof(BP_co0102_C_StartEnergyCable) == 0x000010, "Wrong size on BP_co0102_C_StartEnergyCable");
static_assert(offsetof(BP_co0102_C_StartEnergyCable, CallFunc_GetEnergyCable_EnergyMesh) == 0x000000, "Member 'BP_co0102_C_StartEnergyCable::CallFunc_GetEnergyCable_EnergyMesh' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_StartEnergyCable, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_co0102_C_StartEnergyCable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_co0102.BP_co0102_C.EndEnergyCable
// 0x0010 (0x0010 - 0x0000)
struct BP_co0102_C_EndEnergyCable final
{
public:
	class ABP_SASCableEnergyMesh_C*               CallFunc_GetEnergyCable_EnergyMesh;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_co0102_C_EndEnergyCable) == 0x000008, "Wrong alignment on BP_co0102_C_EndEnergyCable");
static_assert(sizeof(BP_co0102_C_EndEnergyCable) == 0x000010, "Wrong size on BP_co0102_C_EndEnergyCable");
static_assert(offsetof(BP_co0102_C_EndEnergyCable, CallFunc_GetEnergyCable_EnergyMesh) == 0x000000, "Member 'BP_co0102_C_EndEnergyCable::CallFunc_GetEnergyCable_EnergyMesh' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_EndEnergyCable, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_co0102_C_EndEnergyCable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_co0102.BP_co0102_C.SetEnergyCableDissolveInternal
// 0x0018 (0x0018 - 0x0000)
struct BP_co0102_C_SetEnergyCableDissolveInternal final
{
public:
	float                                         Dissolve;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParentDissolve;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SASCableEnergyMesh_C*               CallFunc_GetEnergyCable_EnergyMesh;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_co0102_C_SetEnergyCableDissolveInternal) == 0x000008, "Wrong alignment on BP_co0102_C_SetEnergyCableDissolveInternal");
static_assert(sizeof(BP_co0102_C_SetEnergyCableDissolveInternal) == 0x000018, "Wrong size on BP_co0102_C_SetEnergyCableDissolveInternal");
static_assert(offsetof(BP_co0102_C_SetEnergyCableDissolveInternal, Dissolve) == 0x000000, "Member 'BP_co0102_C_SetEnergyCableDissolveInternal::Dissolve' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_SetEnergyCableDissolveInternal, ParentDissolve) == 0x000004, "Member 'BP_co0102_C_SetEnergyCableDissolveInternal::ParentDissolve' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_SetEnergyCableDissolveInternal, CallFunc_GetEnergyCable_EnergyMesh) == 0x000008, "Member 'BP_co0102_C_SetEnergyCableDissolveInternal::CallFunc_GetEnergyCable_EnergyMesh' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_SetEnergyCableDissolveInternal, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_co0102_C_SetEnergyCableDissolveInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_co0102.BP_co0102_C.GetCableIndex
// 0x0004 (0x0004 - 0x0000)
struct BP_co0102_C_GetCableIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_co0102_C_GetCableIndex) == 0x000004, "Wrong alignment on BP_co0102_C_GetCableIndex");
static_assert(sizeof(BP_co0102_C_GetCableIndex) == 0x000004, "Wrong size on BP_co0102_C_GetCableIndex");
static_assert(offsetof(BP_co0102_C_GetCableIndex, Param_Index) == 0x000000, "Member 'BP_co0102_C_GetCableIndex::Param_Index' has a wrong offset!");

// Function BP_co0102.BP_co0102_C.GetMaterialLocationParamName
// 0x00A8 (0x00A8 - 0x0000)
struct BP_co0102_C_GetMaterialLocationParamName final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCableIndex_Index;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8504[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_co0102_C_GetMaterialLocationParamName) == 0x000008, "Wrong alignment on BP_co0102_C_GetMaterialLocationParamName");
static_assert(sizeof(BP_co0102_C_GetMaterialLocationParamName) == 0x0000A8, "Wrong size on BP_co0102_C_GetMaterialLocationParamName");
static_assert(offsetof(BP_co0102_C_GetMaterialLocationParamName, ParamName) == 0x000000, "Member 'BP_co0102_C_GetMaterialLocationParamName::ParamName' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_GetMaterialLocationParamName, CallFunc_GetCableIndex_Index) == 0x000008, "Member 'BP_co0102_C_GetMaterialLocationParamName::CallFunc_GetCableIndex_Index' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_GetMaterialLocationParamName, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'BP_co0102_C_GetMaterialLocationParamName::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_GetMaterialLocationParamName, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_co0102_C_GetMaterialLocationParamName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_GetMaterialLocationParamName, K2Node_MakeArray_Array) == 0x000068, "Member 'BP_co0102_C_GetMaterialLocationParamName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_GetMaterialLocationParamName, CallFunc_Format_ReturnValue) == 0x000078, "Member 'BP_co0102_C_GetMaterialLocationParamName::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_GetMaterialLocationParamName, CallFunc_Conv_TextToString_ReturnValue) == 0x000090, "Member 'BP_co0102_C_GetMaterialLocationParamName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co0102_C_GetMaterialLocationParamName, CallFunc_Conv_StringToName_ReturnValue) == 0x0000A0, "Member 'BP_co0102_C_GetMaterialLocationParamName::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

}

