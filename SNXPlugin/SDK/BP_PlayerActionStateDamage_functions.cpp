#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerActionStateDamage

#include "Basic.hpp"

#include "BP_PlayerActionStateDamage_classes.hpp"
#include "BP_PlayerActionStateDamage_parameters.hpp"


namespace SDK
{

// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.Enter
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_PlayerActionStateDamage_C::Enter(int32 Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerActionStateDamage_C", "Enter");

	Params::BP_PlayerActionStateDamage_C_Enter Parms{};

	Parms.Param = Param;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.Update
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_PlayerActionStateDamage_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerActionStateDamage_C", "Update");

	Params::BP_PlayerActionStateDamage_C_Update Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.Transition
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_PlayerActionStateDamage_C::Transition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerActionStateDamage_C", "Transition");

	Params::BP_PlayerActionStateDamage_C_Transition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.Exit
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NextStateIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_PlayerActionStateDamage_C::Exit(int32 NextStateIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerActionStateDamage_C", "Exit");

	Params::BP_PlayerActionStateDamage_C_Exit Parms{};

	Parms.NextStateIndex = NextStateIndex;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.RequestHologramAnim
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHologram                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerActionStateDamage_C::RequestHologramAnim(bool* bHologram)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerActionStateDamage_C", "RequestHologramAnim");

	Params::BP_PlayerActionStateDamage_C_RequestHologramAnim Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bHologram != nullptr)
		*bHologram = Parms.bHologram;
}


// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.IsDeadReaction
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDead                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerActionStateDamage_C::IsDeadReaction(bool* bDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerActionStateDamage_C", "IsDeadReaction");

	Params::BP_PlayerActionStateDamage_C_IsDeadReaction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDead != nullptr)
		*bDead = Parms.bDead;
}


// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.CheckHologramAttack
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerDamageKind                       Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerActionStateDamage_C::CheckHologramAttack(EPlayerDamageKind Kind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerActionStateDamage_C", "CheckHologramAttack");

	Params::BP_PlayerActionStateDamage_C_CheckHologramAttack Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.VibrationUI
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerDamageKind                       Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerActionStateDamage_C::VibrationUI(EPlayerDamageKind Kind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerActionStateDamage_C", "VibrationUI");

	Params::BP_PlayerActionStateDamage_C_VibrationUI Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.GetDownType
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerDownType                         DownType                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerActionStateDamage_C::GetDownType(EPlayerDownType* DownType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerActionStateDamage_C", "GetDownType");

	Params::BP_PlayerActionStateDamage_C_GetDownType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DownType != nullptr)
		*DownType = Parms.DownType;
}


// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.IsTransitionDown
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EPlayerDamageKind                       Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bTransition                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerActionStateDamage_C::IsTransitionDown(EPlayerDamageKind Kind, bool* bTransition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerActionStateDamage_C", "IsTransitionDown");

	Params::BP_PlayerActionStateDamage_C_IsTransitionDown Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);

	if (bTransition != nullptr)
		*bTransition = Parms.bTransition;
}

}

