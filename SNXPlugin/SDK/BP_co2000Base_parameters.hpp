#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_co2000Base

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_co2000Base.BP_co2000Base_C.ExecuteUbergraph_BP_co2000Base
// 0x0008 (0x0008 - 0x0000)
struct BP_co2000Base_C_ExecuteUbergraph_BP_co2000Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_co2000Base_C_ExecuteUbergraph_BP_co2000Base) == 0x000004, "Wrong alignment on BP_co2000Base_C_ExecuteUbergraph_BP_co2000Base");
static_assert(sizeof(BP_co2000Base_C_ExecuteUbergraph_BP_co2000Base) == 0x000008, "Wrong size on BP_co2000Base_C_ExecuteUbergraph_BP_co2000Base");
static_assert(offsetof(BP_co2000Base_C_ExecuteUbergraph_BP_co2000Base, EntryPoint) == 0x000000, "Member 'BP_co2000Base_C_ExecuteUbergraph_BP_co2000Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_co2000Base_C_ExecuteUbergraph_BP_co2000Base, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_co2000Base_C_ExecuteUbergraph_BP_co2000Base::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_co2000Base.BP_co2000Base_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_co2000Base_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_co2000Base_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_co2000Base_C_ReceiveTick");
static_assert(sizeof(BP_co2000Base_C_ReceiveTick) == 0x000004, "Wrong size on BP_co2000Base_C_ReceiveTick");
static_assert(offsetof(BP_co2000Base_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_co2000Base_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_co2000Base.BP_co2000Base_C.SetWeakEffectParam
// 0x000C (0x000C - 0x0000)
struct BP_co2000Base_C_SetWeakEffectParam final
{
public:
	float                                         CommonRate;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttachRate;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_co2000Base_C_SetWeakEffectParam) == 0x000004, "Wrong alignment on BP_co2000Base_C_SetWeakEffectParam");
static_assert(sizeof(BP_co2000Base_C_SetWeakEffectParam) == 0x00000C, "Wrong size on BP_co2000Base_C_SetWeakEffectParam");
static_assert(offsetof(BP_co2000Base_C_SetWeakEffectParam, CommonRate) == 0x000000, "Member 'BP_co2000Base_C_SetWeakEffectParam::CommonRate' has a wrong offset!");
static_assert(offsetof(BP_co2000Base_C_SetWeakEffectParam, AttachRate) == 0x000004, "Member 'BP_co2000Base_C_SetWeakEffectParam::AttachRate' has a wrong offset!");
static_assert(offsetof(BP_co2000Base_C_SetWeakEffectParam, Dummy) == 0x000008, "Member 'BP_co2000Base_C_SetWeakEffectParam::Dummy' has a wrong offset!");

// Function BP_co2000Base.BP_co2000Base_C.StartWeakEffect
// 0x0001 (0x0001 - 0x0000)
struct BP_co2000Base_C_StartWeakEffect final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_co2000Base_C_StartWeakEffect) == 0x000001, "Wrong alignment on BP_co2000Base_C_StartWeakEffect");
static_assert(sizeof(BP_co2000Base_C_StartWeakEffect) == 0x000001, "Wrong size on BP_co2000Base_C_StartWeakEffect");
static_assert(offsetof(BP_co2000Base_C_StartWeakEffect, Success) == 0x000000, "Member 'BP_co2000Base_C_StartWeakEffect::Success' has a wrong offset!");

// Function BP_co2000Base.BP_co2000Base_C.EndWeakEffect
// 0x0001 (0x0001 - 0x0000)
struct BP_co2000Base_C_EndWeakEffect final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_co2000Base_C_EndWeakEffect) == 0x000001, "Wrong alignment on BP_co2000Base_C_EndWeakEffect");
static_assert(sizeof(BP_co2000Base_C_EndWeakEffect) == 0x000001, "Wrong size on BP_co2000Base_C_EndWeakEffect");
static_assert(offsetof(BP_co2000Base_C_EndWeakEffect, Dummy) == 0x000000, "Member 'BP_co2000Base_C_EndWeakEffect::Dummy' has a wrong offset!");

// Function BP_co2000Base.BP_co2000Base_C.StartAnim
// 0x0002 (0x0002 - 0x0000)
struct BP_co2000Base_C_StartAnim final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_co2000Base_C_StartAnim) == 0x000001, "Wrong alignment on BP_co2000Base_C_StartAnim");
static_assert(sizeof(BP_co2000Base_C_StartAnim) == 0x000002, "Wrong size on BP_co2000Base_C_StartAnim");
static_assert(offsetof(BP_co2000Base_C_StartAnim, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_co2000Base_C_StartAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co2000Base_C_StartAnim, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_co2000Base_C_StartAnim::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_co2000Base.BP_co2000Base_C.EndAnim
// 0x0002 (0x0002 - 0x0000)
struct BP_co2000Base_C_EndAnim final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_co2000Base_C_EndAnim) == 0x000001, "Wrong alignment on BP_co2000Base_C_EndAnim");
static_assert(sizeof(BP_co2000Base_C_EndAnim) == 0x000002, "Wrong size on BP_co2000Base_C_EndAnim");
static_assert(offsetof(BP_co2000Base_C_EndAnim, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_co2000Base_C_EndAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co2000Base_C_EndAnim, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_co2000Base_C_EndAnim::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_co2000Base.BP_co2000Base_C.UpdateAnim
// 0x0006 (0x0006 - 0x0000)
struct BP_co2000Base_C_UpdateAnim final
{
public:
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue_2;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue_3;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_co2000Base_C_UpdateAnim) == 0x000001, "Wrong alignment on BP_co2000Base_C_UpdateAnim");
static_assert(sizeof(BP_co2000Base_C_UpdateAnim) == 0x000006, "Wrong size on BP_co2000Base_C_UpdateAnim");
static_assert(offsetof(BP_co2000Base_C_UpdateAnim, CallFunc_IsPlaying_ReturnValue) == 0x000000, "Member 'BP_co2000Base_C_UpdateAnim::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co2000Base_C_UpdateAnim, CallFunc_IsPlaying_ReturnValue_1) == 0x000001, "Member 'BP_co2000Base_C_UpdateAnim::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_co2000Base_C_UpdateAnim, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_co2000Base_C_UpdateAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co2000Base_C_UpdateAnim, K2Node_SwitchInteger_CmpSuccess) == 0x000003, "Member 'BP_co2000Base_C_UpdateAnim::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_co2000Base_C_UpdateAnim, CallFunc_IsPlaying_ReturnValue_2) == 0x000004, "Member 'BP_co2000Base_C_UpdateAnim::CallFunc_IsPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_co2000Base_C_UpdateAnim, CallFunc_IsPlaying_ReturnValue_3) == 0x000005, "Member 'BP_co2000Base_C_UpdateAnim::CallFunc_IsPlaying_ReturnValue_3' has a wrong offset!");

// Function BP_co2000Base.BP_co2000Base_C.IsExistAnim
// 0x0004 (0x0004 - 0x0000)
struct BP_co2000Base_C_IsExistAnim final
{
public:
	bool                                          IsExist;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_co2000Base_C_IsExistAnim) == 0x000001, "Wrong alignment on BP_co2000Base_C_IsExistAnim");
static_assert(sizeof(BP_co2000Base_C_IsExistAnim) == 0x000004, "Wrong size on BP_co2000Base_C_IsExistAnim");
static_assert(offsetof(BP_co2000Base_C_IsExistAnim, IsExist) == 0x000000, "Member 'BP_co2000Base_C_IsExistAnim::IsExist' has a wrong offset!");
static_assert(offsetof(BP_co2000Base_C_IsExistAnim, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_co2000Base_C_IsExistAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co2000Base_C_IsExistAnim, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_co2000Base_C_IsExistAnim::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_co2000Base_C_IsExistAnim, CallFunc_IsValid_ReturnValue_2) == 0x000003, "Member 'BP_co2000Base_C_IsExistAnim::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_co2000Base.BP_co2000Base_C.SetBaseAnim
// 0x0002 (0x0002 - 0x0000)
struct BP_co2000Base_C_SetBaseAnim final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_co2000Base_C_SetBaseAnim) == 0x000001, "Wrong alignment on BP_co2000Base_C_SetBaseAnim");
static_assert(sizeof(BP_co2000Base_C_SetBaseAnim) == 0x000002, "Wrong size on BP_co2000Base_C_SetBaseAnim");
static_assert(offsetof(BP_co2000Base_C_SetBaseAnim, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_co2000Base_C_SetBaseAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_co2000Base_C_SetBaseAnim, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_co2000Base_C_SetBaseAnim::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_co2000Base.BP_co2000Base_C.ResetAnim
// 0x0002 (0x0002 - 0x0000)
struct BP_co2000Base_C_ResetAnim final
{
public:
	bool                                          CallFunc_IsExistAnim_IsExist;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_co2000Base_C_ResetAnim) == 0x000001, "Wrong alignment on BP_co2000Base_C_ResetAnim");
static_assert(sizeof(BP_co2000Base_C_ResetAnim) == 0x000002, "Wrong size on BP_co2000Base_C_ResetAnim");
static_assert(offsetof(BP_co2000Base_C_ResetAnim, CallFunc_IsExistAnim_IsExist) == 0x000000, "Member 'BP_co2000Base_C_ResetAnim::CallFunc_IsExistAnim_IsExist' has a wrong offset!");
static_assert(offsetof(BP_co2000Base_C_ResetAnim, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_co2000Base_C_ResetAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

