#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_PK_psychic_timer_1

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function WB_ui_PK_psychic_timer_1.WB_ui_PK_psychic_timer_1_C.ExecuteUbergraph_WB_ui_PK_psychic_timer_1
// 0x0068 (0x0068 - 0x0000)
struct WB_ui_PK_psychic_timer_1_C_ExecuteUbergraph_WB_ui_PK_psychic_timer_1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5754[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FPsychicDroneGuageDataCell> CallFunc_LoadDroneGaugeTableDatas_return;          // 0x0008(0x0050)()
	int32                                         K2Node_Event_State;                                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SubState;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_PK_psychic_timer_1_C_ExecuteUbergraph_WB_ui_PK_psychic_timer_1) == 0x000008, "Wrong alignment on WB_ui_PK_psychic_timer_1_C_ExecuteUbergraph_WB_ui_PK_psychic_timer_1");
static_assert(sizeof(WB_ui_PK_psychic_timer_1_C_ExecuteUbergraph_WB_ui_PK_psychic_timer_1) == 0x000068, "Wrong size on WB_ui_PK_psychic_timer_1_C_ExecuteUbergraph_WB_ui_PK_psychic_timer_1");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_ExecuteUbergraph_WB_ui_PK_psychic_timer_1, EntryPoint) == 0x000000, "Member 'WB_ui_PK_psychic_timer_1_C_ExecuteUbergraph_WB_ui_PK_psychic_timer_1::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_ExecuteUbergraph_WB_ui_PK_psychic_timer_1, CallFunc_LoadDroneGaugeTableDatas_return) == 0x000008, "Member 'WB_ui_PK_psychic_timer_1_C_ExecuteUbergraph_WB_ui_PK_psychic_timer_1::CallFunc_LoadDroneGaugeTableDatas_return' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_ExecuteUbergraph_WB_ui_PK_psychic_timer_1, K2Node_Event_State) == 0x000058, "Member 'WB_ui_PK_psychic_timer_1_C_ExecuteUbergraph_WB_ui_PK_psychic_timer_1::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_ExecuteUbergraph_WB_ui_PK_psychic_timer_1, K2Node_Event_SubState) == 0x00005C, "Member 'WB_ui_PK_psychic_timer_1_C_ExecuteUbergraph_WB_ui_PK_psychic_timer_1::K2Node_Event_SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_ExecuteUbergraph_WB_ui_PK_psychic_timer_1, K2Node_Event_DeltaSeconds) == 0x000060, "Member 'WB_ui_PK_psychic_timer_1_C_ExecuteUbergraph_WB_ui_PK_psychic_timer_1::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_ExecuteUbergraph_WB_ui_PK_psychic_timer_1, K2Node_SwitchInteger_CmpSuccess) == 0x000064, "Member 'WB_ui_PK_psychic_timer_1_C_ExecuteUbergraph_WB_ui_PK_psychic_timer_1::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_ui_PK_psychic_timer_1.WB_ui_PK_psychic_timer_1_C.UpdateState
// 0x000C (0x000C - 0x0000)
struct WB_ui_PK_psychic_timer_1_C_UpdateState final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubState;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_PK_psychic_timer_1_C_UpdateState) == 0x000004, "Wrong alignment on WB_ui_PK_psychic_timer_1_C_UpdateState");
static_assert(sizeof(WB_ui_PK_psychic_timer_1_C_UpdateState) == 0x00000C, "Wrong size on WB_ui_PK_psychic_timer_1_C_UpdateState");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_UpdateState, State) == 0x000000, "Member 'WB_ui_PK_psychic_timer_1_C_UpdateState::State' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_UpdateState, SubState) == 0x000004, "Member 'WB_ui_PK_psychic_timer_1_C_UpdateState::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_UpdateState, DeltaSeconds) == 0x000008, "Member 'WB_ui_PK_psychic_timer_1_C_UpdateState::DeltaSeconds' has a wrong offset!");

// Function WB_ui_PK_psychic_timer_1.WB_ui_PK_psychic_timer_1_C.StateNone
// 0x0008 (0x0008 - 0x0000)
struct WB_ui_PK_psychic_timer_1_C_StateNone final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_PK_psychic_timer_1_C_StateNone) == 0x000004, "Wrong alignment on WB_ui_PK_psychic_timer_1_C_StateNone");
static_assert(sizeof(WB_ui_PK_psychic_timer_1_C_StateNone) == 0x000008, "Wrong size on WB_ui_PK_psychic_timer_1_C_StateNone");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_StateNone, SubState) == 0x000000, "Member 'WB_ui_PK_psychic_timer_1_C_StateNone::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_StateNone, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'WB_ui_PK_psychic_timer_1_C_StateNone::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_ui_PK_psychic_timer_1.WB_ui_PK_psychic_timer_1_C.StateOpen
// 0x0008 (0x0008 - 0x0000)
struct WB_ui_PK_psychic_timer_1_C_StateOpen final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_PK_psychic_timer_1_C_StateOpen) == 0x000004, "Wrong alignment on WB_ui_PK_psychic_timer_1_C_StateOpen");
static_assert(sizeof(WB_ui_PK_psychic_timer_1_C_StateOpen) == 0x000008, "Wrong size on WB_ui_PK_psychic_timer_1_C_StateOpen");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_StateOpen, SubState) == 0x000000, "Member 'WB_ui_PK_psychic_timer_1_C_StateOpen::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_StateOpen, CallFunc_IsPlayUICurrentAnimation_isPlay) == 0x000004, "Member 'WB_ui_PK_psychic_timer_1_C_StateOpen::CallFunc_IsPlayUICurrentAnimation_isPlay' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_StateOpen, K2Node_SwitchInteger_CmpSuccess) == 0x000005, "Member 'WB_ui_PK_psychic_timer_1_C_StateOpen::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_ui_PK_psychic_timer_1.WB_ui_PK_psychic_timer_1_C.StateLoop
// 0x0008 (0x0008 - 0x0000)
struct WB_ui_PK_psychic_timer_1_C_StateLoop final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_PK_psychic_timer_1_C_StateLoop) == 0x000004, "Wrong alignment on WB_ui_PK_psychic_timer_1_C_StateLoop");
static_assert(sizeof(WB_ui_PK_psychic_timer_1_C_StateLoop) == 0x000008, "Wrong size on WB_ui_PK_psychic_timer_1_C_StateLoop");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_StateLoop, SubState) == 0x000000, "Member 'WB_ui_PK_psychic_timer_1_C_StateLoop::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_StateLoop, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'WB_ui_PK_psychic_timer_1_C_StateLoop::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_ui_PK_psychic_timer_1.WB_ui_PK_psychic_timer_1_C.StateClose
// 0x0008 (0x0008 - 0x0000)
struct WB_ui_PK_psychic_timer_1_C_StateClose final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_PK_psychic_timer_1_C_StateClose) == 0x000004, "Wrong alignment on WB_ui_PK_psychic_timer_1_C_StateClose");
static_assert(sizeof(WB_ui_PK_psychic_timer_1_C_StateClose) == 0x000008, "Wrong size on WB_ui_PK_psychic_timer_1_C_StateClose");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_StateClose, SubState) == 0x000000, "Member 'WB_ui_PK_psychic_timer_1_C_StateClose::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_StateClose, CallFunc_IsPlayUICurrentAnimation_isPlay) == 0x000004, "Member 'WB_ui_PK_psychic_timer_1_C_StateClose::CallFunc_IsPlayUICurrentAnimation_isPlay' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_StateClose, K2Node_SwitchInteger_CmpSuccess) == 0x000005, "Member 'WB_ui_PK_psychic_timer_1_C_StateClose::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_ui_PK_psychic_timer_1.WB_ui_PK_psychic_timer_1_C.SetGaugePercent
// 0x0018 (0x0018 - 0x0000)
struct WB_ui_PK_psychic_timer_1_C_SetGaugePercent final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_PK_psychic_timer_1_C_SetGaugePercent) == 0x000008, "Wrong alignment on WB_ui_PK_psychic_timer_1_C_SetGaugePercent");
static_assert(sizeof(WB_ui_PK_psychic_timer_1_C_SetGaugePercent) == 0x000018, "Wrong size on WB_ui_PK_psychic_timer_1_C_SetGaugePercent");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_SetGaugePercent, Percent) == 0x000000, "Member 'WB_ui_PK_psychic_timer_1_C_SetGaugePercent::Percent' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_SetGaugePercent, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'WB_ui_PK_psychic_timer_1_C_SetGaugePercent::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_SetGaugePercent, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WB_ui_PK_psychic_timer_1_C_SetGaugePercent::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_SetGaugePercent, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000010, "Member 'WB_ui_PK_psychic_timer_1_C_SetGaugePercent::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");

// Function WB_ui_PK_psychic_timer_1.WB_ui_PK_psychic_timer_1_C.SetActiveFlag
// 0x0001 (0x0001 - 0x0000)
struct WB_ui_PK_psychic_timer_1_C_SetActiveFlag final
{
public:
	bool                                          Param_IsActive;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_PK_psychic_timer_1_C_SetActiveFlag) == 0x000001, "Wrong alignment on WB_ui_PK_psychic_timer_1_C_SetActiveFlag");
static_assert(sizeof(WB_ui_PK_psychic_timer_1_C_SetActiveFlag) == 0x000001, "Wrong size on WB_ui_PK_psychic_timer_1_C_SetActiveFlag");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_SetActiveFlag, Param_IsActive) == 0x000000, "Member 'WB_ui_PK_psychic_timer_1_C_SetActiveFlag::Param_IsActive' has a wrong offset!");

// Function WB_ui_PK_psychic_timer_1.WB_ui_PK_psychic_timer_1_C.SetState
// 0x0038 (0x0038 - 0x0000)
struct WB_ui_PK_psychic_timer_1_C_SetState final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5755[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPsychicDroneGuageDataCell             CallFunc_Map_Find_Value;                           // 0x0020(0x0010)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_PK_psychic_timer_1_C_SetState) == 0x000008, "Wrong alignment on WB_ui_PK_psychic_timer_1_C_SetState");
static_assert(sizeof(WB_ui_PK_psychic_timer_1_C_SetState) == 0x000038, "Wrong size on WB_ui_PK_psychic_timer_1_C_SetState");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_SetState, Param_Index) == 0x000000, "Member 'WB_ui_PK_psychic_timer_1_C_SetState::Param_Index' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_SetState, CallFunc_Map_Keys_Keys) == 0x000008, "Member 'WB_ui_PK_psychic_timer_1_C_SetState::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_SetState, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'WB_ui_PK_psychic_timer_1_C_SetState::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_SetState, CallFunc_Map_Find_Value) == 0x000020, "Member 'WB_ui_PK_psychic_timer_1_C_SetState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_timer_1_C_SetState, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'WB_ui_PK_psychic_timer_1_C_SetState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

}

