#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AttackEmitter

#include "Basic.hpp"

#include "BP_AttackEmitter_classes.hpp"
#include "BP_AttackEmitter_parameters.hpp"


namespace SDK
{

// Function BP_AttackEmitter.BP_AttackEmitter_C.ExecuteUbergraph_BP_AttackEmitter
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttackEmitter_C::ExecuteUbergraph_BP_AttackEmitter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttackEmitter_C", "ExecuteUbergraph_BP_AttackEmitter");

	Params::BP_AttackEmitter_C_ExecuteUbergraph_BP_AttackEmitter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttackEmitter.BP_AttackEmitter_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttackEmitter_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttackEmitter_C", "ReceiveTick");

	Params::BP_AttackEmitter_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttackEmitter.BP_AttackEmitter_C.Start
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Param_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFAttackEmitterInfo>      AttackInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// float                                   Param_Interval                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAttackEmitterMode                      Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttackEmitter_C::Start(class UClass* Param_Class, TArray<struct FFAttackEmitterInfo>& AttackInfo, float Param_Interval, EAttackEmitterMode Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttackEmitter_C", "Start");

	Params::BP_AttackEmitter_C_Start Parms{};

	Parms.Param_Class = Param_Class;
	Parms.AttackInfo = std::move(AttackInfo);
	Parms.Param_Interval = Param_Interval;
	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);

	AttackInfo = std::move(Parms.AttackInfo);
}


// Function BP_AttackEmitter.BP_AttackEmitter_C.Update
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_AttackEmitter_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttackEmitter_C", "Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AttackEmitter.BP_AttackEmitter_C.SetAttack
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttackEmitter_C::SetAttack(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttackEmitter_C", "SetAttack");

	Params::BP_AttackEmitter_C_SetAttack Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttackEmitter.BP_AttackEmitter_C.End
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_AttackEmitter_C::End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttackEmitter_C", "End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AttackEmitter.BP_AttackEmitter_C.SetAttackSearchEnemy
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Attack_index_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttackEmitter_C::SetAttackSearchEnemy(int32 Attack_index_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttackEmitter_C", "SetAttackSearchEnemy");

	Params::BP_AttackEmitter_C_SetAttackSearchEnemy Parms{};

	Parms.Attack_index_in = Attack_index_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttackEmitter.BP_AttackEmitter_C.SetAttackLockonTarget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttackEmitter_C::SetAttackLockonTarget(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttackEmitter_C", "SetAttackLockonTarget");

	Params::BP_AttackEmitter_C_SetAttackLockonTarget Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttackEmitter.BP_AttackEmitter_C.SetAttackCrashVisionShockWave
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttackEmitter_C::SetAttackCrashVisionShockWave(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttackEmitter_C", "SetAttackCrashVisionShockWave");

	Params::BP_AttackEmitter_C_SetAttackCrashVisionShockWave Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}

}

