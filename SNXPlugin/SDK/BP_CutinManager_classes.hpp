#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CutinManager

#include "Basic.hpp"

#include "E_SASKind_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ECutinType_structs.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CutinManager.BP_CutinManager_C
// 0x01B0 (0x03E0 - 0x0230)
class ABP_CutinManager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_PlayerMaterialAccessorComponent_C*  BP_PlayerMaterialAccessorComponent;                // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWB_CutinBase_C*                        CutinWidget;                                       // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSLevelSequenceActor*>          SequenceList;                                      // 0x0250(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  NullLevelSequenceActor;                            // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CurrentSequencer;                                  // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACineCameraActor*                       CurrentCaptureCameraBP;                            // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CurrentSequencePlayer;                             // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayingFlag;                                     // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D73[0x7];                                     // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         SequencerInActorArray;                             // 0x0288(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         SkillDelayTime;                                    // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkilTimer;                                         // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      FadePPMaterial;                                    // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               FadePPMID;                                         // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PostProcess;                                       // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeMax;                                           // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FadeParamName;                                     // 0x02BC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECutinType                                    Type;                                              // 0x02C4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_7D74[0x3];                                     // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             SequenceDataTable;                                 // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      DamageNoisePPMaterial;                             // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DamageNoisePPMID;                                  // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     CurrentSASType;                                    // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D75[0x7];                                     // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class AActor*>            BindingList;                                       // 0x02E8(0x0050)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             ED_EndCutin;                                       // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UClass*                                 WidgetClass;                                       // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInstance>       DamageNoisePPMaterialAsset;                        // 0x0350(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInstance>       FadePPMaterialAsset;                               // 0x0378(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UClass*                                 BP_CaptureCineCameraClass;                         // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             ED_CoverScreen;                                    // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          DebugSASCutin;                                     // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D76[0x7];                                     // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             ED_BCPlaySequence;                                 // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class ULevelSequence*>                 LevelSequenceAssetList;                            // 0x03D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ED_EndCutin__DelegateSignature();
	void ED_CoverScreen__DelegateSignature();
	void ED_BCPlaySequence__DelegateSignature();
	void ExecuteUbergraph_BP_CutinManager(int32 EntryPoint);
	void TipsSAS();
	void OnVisibleSeeThroughJustDodgeBorder();
	void PlayVoice(const class FString& VoiceFileName);
	void BC_PlaySequence();
	void StopCutin();
	void ParticleSASEnergy();
	void DrawMessage(int32 WindowType, const class FString& MessageLabel, bool Skipable, float DrawSecond, bool IsVoiceOnlyMessage, bool IsSkipVoiceEnd);
	void UnloadMessage(const class FString& MessageTableName);
	void LoadMessage(const TSoftObjectPtr<class UDataTable>& DataTable);
	void VisibleCableEnergy();
	void DetachSASEnergy();
	void StartSASEnergy();
	void StopSASStop();
	void StartSASStop();
	void CoverScreen();
	void DebugPause();
	void StartSASCable();
	void SetSASShot();
	void StopCutinSlow();
	void StartCutinSlow();
	void StartSASCableReaction();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void RequestHelpParticle();
	void RequestHelpBrainTalk();
	void StartCutin(class FName RowName, E_SASKind ESASKindType);
	void EndCutin();
	void SetCaptureCameraBP(class ACineCameraActor* CaptureCameraBP);
	void GetCaptureCameraBP(class ACineCameraActor** CaptureCameraBP);
	void IsPlayingCurrentSequence(bool* IsPlaying);
	void GetCurrentSequencePlayer(class ULevelSequencePlayer** Param_CurrentSequencePlayer);
	void SetCustomTimeDilationActorArray(float Custom_Dilation);
	void SetSequenceShowActor();
	void SetCustomTimeDilationSequence(float Param_CustomTimeDilation);
	void SetCutinFadeForce(float Fade);
	void Initialize();
	class ULevelSequence* GetCharaSequencerForESASKind(E_SASKind Param_Index);
	void ClearAddSequencerShot(class ARSLevelSequenceActor* CurrentSequence);
	void BindDummyCharacter(class ARSLevelSequenceActor* SequenceActor);
	void GetCutinWidget(class UUserWidget** Widget);
	void BindCutinManager(class ARSLevelSequenceActor* SequenceActor);
	void AddBindingList(const class FString& Param_BindingList, class AActor* Actor);
	void ClearBindingList();
	void UpdateCapture();
	void UpdateMaterial();
	void LoadAsset();
	void InitializePostProcess();
	void OnRequestHelpBrainTalk();
	void SetupSASExtraShotActive(class ARSLevelSequenceActor* Sequencer, int32 ExtraID);
	void OnRequestHelpParticle();
	void PauseSequencer(bool IsPause);

	void GetCurrentSASType(E_SASKind* SasKind) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CutinManager_C">();
	}
	static class ABP_CutinManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CutinManager_C>();
	}
};
static_assert(alignof(ABP_CutinManager_C) == 0x000008, "Wrong alignment on ABP_CutinManager_C");
static_assert(sizeof(ABP_CutinManager_C) == 0x0003E0, "Wrong size on ABP_CutinManager_C");
static_assert(offsetof(ABP_CutinManager_C, UberGraphFrame) == 0x000230, "Member 'ABP_CutinManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, BP_PlayerMaterialAccessorComponent) == 0x000238, "Member 'ABP_CutinManager_C::BP_PlayerMaterialAccessorComponent' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, DefaultSceneRoot) == 0x000240, "Member 'ABP_CutinManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, CutinWidget) == 0x000248, "Member 'ABP_CutinManager_C::CutinWidget' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, SequenceList) == 0x000250, "Member 'ABP_CutinManager_C::SequenceList' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, NullLevelSequenceActor) == 0x000260, "Member 'ABP_CutinManager_C::NullLevelSequenceActor' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, CurrentSequencer) == 0x000268, "Member 'ABP_CutinManager_C::CurrentSequencer' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, CurrentCaptureCameraBP) == 0x000270, "Member 'ABP_CutinManager_C::CurrentCaptureCameraBP' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, CurrentSequencePlayer) == 0x000278, "Member 'ABP_CutinManager_C::CurrentSequencePlayer' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, IsPlayingFlag) == 0x000280, "Member 'ABP_CutinManager_C::IsPlayingFlag' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, SequencerInActorArray) == 0x000288, "Member 'ABP_CutinManager_C::SequencerInActorArray' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, SkillDelayTime) == 0x000298, "Member 'ABP_CutinManager_C::SkillDelayTime' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, SkilTimer) == 0x00029C, "Member 'ABP_CutinManager_C::SkilTimer' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, FadePPMaterial) == 0x0002A0, "Member 'ABP_CutinManager_C::FadePPMaterial' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, FadePPMID) == 0x0002A8, "Member 'ABP_CutinManager_C::FadePPMID' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, PostProcess) == 0x0002B0, "Member 'ABP_CutinManager_C::PostProcess' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, FadeMax) == 0x0002B8, "Member 'ABP_CutinManager_C::FadeMax' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, FadeParamName) == 0x0002BC, "Member 'ABP_CutinManager_C::FadeParamName' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, Type) == 0x0002C4, "Member 'ABP_CutinManager_C::Type' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, SequenceDataTable) == 0x0002C8, "Member 'ABP_CutinManager_C::SequenceDataTable' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, DamageNoisePPMaterial) == 0x0002D0, "Member 'ABP_CutinManager_C::DamageNoisePPMaterial' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, DamageNoisePPMID) == 0x0002D8, "Member 'ABP_CutinManager_C::DamageNoisePPMID' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, CurrentSASType) == 0x0002E0, "Member 'ABP_CutinManager_C::CurrentSASType' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, BindingList) == 0x0002E8, "Member 'ABP_CutinManager_C::BindingList' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, ED_EndCutin) == 0x000338, "Member 'ABP_CutinManager_C::ED_EndCutin' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, WidgetClass) == 0x000348, "Member 'ABP_CutinManager_C::WidgetClass' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, DamageNoisePPMaterialAsset) == 0x000350, "Member 'ABP_CutinManager_C::DamageNoisePPMaterialAsset' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, FadePPMaterialAsset) == 0x000378, "Member 'ABP_CutinManager_C::FadePPMaterialAsset' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, BP_CaptureCineCameraClass) == 0x0003A0, "Member 'ABP_CutinManager_C::BP_CaptureCineCameraClass' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, ED_CoverScreen) == 0x0003A8, "Member 'ABP_CutinManager_C::ED_CoverScreen' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, DebugSASCutin) == 0x0003B8, "Member 'ABP_CutinManager_C::DebugSASCutin' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, ED_BCPlaySequence) == 0x0003C0, "Member 'ABP_CutinManager_C::ED_BCPlaySequence' has a wrong offset!");
static_assert(offsetof(ABP_CutinManager_C, LevelSequenceAssetList) == 0x0003D0, "Member 'ABP_CutinManager_C::LevelSequenceAssetList' has a wrong offset!");

}

