#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BonusGhostBridgeComponent

#include "Basic.hpp"

#include "EBonusGhostType_structs.hpp"
#include "FBonusGhostTime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BonusGhostBridgeComponent.BP_BonusGhostBridgeComponent_C.ExecuteUbergraph_BP_BonusGhostBridgeComponent
// 0x0090 (0x0090 - 0x0000)
struct BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E63[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E64[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E65[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E66[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UActorComponent*>                CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E67[0x1];                                     // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BonusGhostTrailComponent_C*         K2Node_DynamicCast_AsBP_Bonus_Ghost_Trail_Component; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E68[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDynamicMaterialControllerComponent*    K2Node_DynamicCast_AsDynamic_Material_Controller_Component; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetTrailActive_Active;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E69[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E6A[0x2];                                     // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent) == 0x000008, "Wrong alignment on BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent");
static_assert(sizeof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent) == 0x000090, "Wrong size on BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, EntryPoint) == 0x000000, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_GetSoundManager_SoundManager) == 0x000008, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, Temp_bool_IsClosed_Variable) == 0x00001C, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, Temp_bool_Has_Been_Initd_Variable) == 0x00001D, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, K2Node_Event_DeltaSeconds) == 0x000020, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000030, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_IsValid_ReturnValue_1) == 0x000044, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, Temp_bool_True_if_break_was_hit_Variable) == 0x000046, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_IsValid_ReturnValue_2) == 0x000047, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_BooleanAND_ReturnValue) == 0x000048, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_BooleanAND_ReturnValue_1) == 0x00004A, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, K2Node_DynamicCast_AsBP_Bonus_Ghost_Trail_Component) == 0x000058, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::K2Node_DynamicCast_AsBP_Bonus_Ghost_Trail_Component' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, K2Node_DynamicCast_AsDynamic_Material_Controller_Component) == 0x000068, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::K2Node_DynamicCast_AsDynamic_Material_Controller_Component' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_GetTrailActive_Active) == 0x000071, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_GetTrailActive_Active' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000072, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000073, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000074, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000078, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_BooleanAND_ReturnValue_2) == 0x00007C, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00007D, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_FClamp_ReturnValue) == 0x000080, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000084, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000088, "Member 'BP_BonusGhostBridgeComponent_C_ExecuteUbergraph_BP_BonusGhostBridgeComponent::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_BonusGhostBridgeComponent.BP_BonusGhostBridgeComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BonusGhostBridgeComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BonusGhostBridgeComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BonusGhostBridgeComponent_C_ReceiveTick");
static_assert(sizeof(BP_BonusGhostBridgeComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_BonusGhostBridgeComponent_C_ReceiveTick");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BonusGhostBridgeComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BonusGhostBridgeComponent.BP_BonusGhostBridgeComponent_C.StartBonusGhostInternal
// 0x0030 (0x0030 - 0x0000)
struct BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal final
{
public:
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E6B[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveSAS_ForKind_IsActive;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal) == 0x000008, "Wrong alignment on BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal");
static_assert(sizeof(BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal) == 0x000030, "Wrong size on BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal, CallFunc_GetSoundManager_SoundManager) == 0x000000, "Member 'BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal, CallFunc_GetPlayer_ReturnValue) == 0x000018, "Member 'BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000020, "Member 'BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal, CallFunc_IsActiveSAS_ForKind_IsActive) == 0x000029, "Member 'BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal::CallFunc_IsActiveSAS_ForKind_IsActive' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal, CallFunc_IsValid_ReturnValue_1) == 0x00002A, "Member 'BP_BonusGhostBridgeComponent_C_StartBonusGhostInternal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_BonusGhostBridgeComponent.BP_BonusGhostBridgeComponent_C.SetTimerFromDT
// 0x0058 (0x0058 - 0x0000)
struct BP_BonusGhostBridgeComponent_C_SetTimerFromDT final
{
public:
	EBonusGhostType                               Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E6C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBonusGhostTime                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0034)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BonusGhostBridgeComponent_C_SetTimerFromDT) == 0x000008, "Wrong alignment on BP_BonusGhostBridgeComponent_C_SetTimerFromDT");
static_assert(sizeof(BP_BonusGhostBridgeComponent_C_SetTimerFromDT) == 0x000058, "Wrong size on BP_BonusGhostBridgeComponent_C_SetTimerFromDT");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_SetTimerFromDT, Type) == 0x000000, "Member 'BP_BonusGhostBridgeComponent_C_SetTimerFromDT::Type' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_SetTimerFromDT, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_BonusGhostBridgeComponent_C_SetTimerFromDT::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_SetTimerFromDT, CallFunc_Conv_StringToName_ReturnValue) == 0x000018, "Member 'BP_BonusGhostBridgeComponent_C_SetTimerFromDT::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_SetTimerFromDT, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'BP_BonusGhostBridgeComponent_C_SetTimerFromDT::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_SetTimerFromDT, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000054, "Member 'BP_BonusGhostBridgeComponent_C_SetTimerFromDT::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_BonusGhostBridgeComponent.BP_BonusGhostBridgeComponent_C.StartBonusGhostFromDT
// 0x0001 (0x0001 - 0x0000)
struct BP_BonusGhostBridgeComponent_C_StartBonusGhostFromDT final
{
public:
	EBonusGhostType                               Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BonusGhostBridgeComponent_C_StartBonusGhostFromDT) == 0x000001, "Wrong alignment on BP_BonusGhostBridgeComponent_C_StartBonusGhostFromDT");
static_assert(sizeof(BP_BonusGhostBridgeComponent_C_StartBonusGhostFromDT) == 0x000001, "Wrong size on BP_BonusGhostBridgeComponent_C_StartBonusGhostFromDT");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_StartBonusGhostFromDT, Type) == 0x000000, "Member 'BP_BonusGhostBridgeComponent_C_StartBonusGhostFromDT::Type' has a wrong offset!");

// Function BP_BonusGhostBridgeComponent.BP_BonusGhostBridgeComponent_C.SetTimer
// 0x0034 (0x0034 - 0x0000)
struct BP_BonusGhostBridgeComponent_C_SetTimer final
{
public:
	struct FFBonusGhostTime                       Param;                                             // 0x0000(0x0034)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BonusGhostBridgeComponent_C_SetTimer) == 0x000004, "Wrong alignment on BP_BonusGhostBridgeComponent_C_SetTimer");
static_assert(sizeof(BP_BonusGhostBridgeComponent_C_SetTimer) == 0x000034, "Wrong size on BP_BonusGhostBridgeComponent_C_SetTimer");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_SetTimer, Param) == 0x000000, "Member 'BP_BonusGhostBridgeComponent_C_SetTimer::Param' has a wrong offset!");

// Function BP_BonusGhostBridgeComponent.BP_BonusGhostBridgeComponent_C.StartBonusGhost
// 0x0040 (0x0040 - 0x0000)
struct BP_BonusGhostBridgeComponent_C_StartBonusGhost final
{
public:
	float                                         GhostTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RimTIme;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RimFade;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBonusGhostTime                       K2Node_MakeStruct_FBonusGhostTime;                 // 0x000C(0x0034)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BonusGhostBridgeComponent_C_StartBonusGhost) == 0x000004, "Wrong alignment on BP_BonusGhostBridgeComponent_C_StartBonusGhost");
static_assert(sizeof(BP_BonusGhostBridgeComponent_C_StartBonusGhost) == 0x000040, "Wrong size on BP_BonusGhostBridgeComponent_C_StartBonusGhost");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_StartBonusGhost, GhostTime) == 0x000000, "Member 'BP_BonusGhostBridgeComponent_C_StartBonusGhost::GhostTime' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_StartBonusGhost, RimTIme) == 0x000004, "Member 'BP_BonusGhostBridgeComponent_C_StartBonusGhost::RimTIme' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_StartBonusGhost, RimFade) == 0x000008, "Member 'BP_BonusGhostBridgeComponent_C_StartBonusGhost::RimFade' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_StartBonusGhost, K2Node_MakeStruct_FBonusGhostTime) == 0x00000C, "Member 'BP_BonusGhostBridgeComponent_C_StartBonusGhost::K2Node_MakeStruct_FBonusGhostTime' has a wrong offset!");

// Function BP_BonusGhostBridgeComponent.BP_BonusGhostBridgeComponent_C.SetRemMaterial
// 0x0080 (0x0080 - 0x0000)
struct BP_BonusGhostBridgeComponent_C_SetRemMaterial final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBonusGhostTime                       GhostTime;                                         // 0x0004(0x0034)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerMaterialManageComponent_C*    MaterialManageComp;                                // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E6D[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BonusGhostBridgeComponent_C_SetRemMaterial) == 0x000008, "Wrong alignment on BP_BonusGhostBridgeComponent_C_SetRemMaterial");
static_assert(sizeof(BP_BonusGhostBridgeComponent_C_SetRemMaterial) == 0x000080, "Wrong size on BP_BonusGhostBridgeComponent_C_SetRemMaterial");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_SetRemMaterial, Rate) == 0x000000, "Member 'BP_BonusGhostBridgeComponent_C_SetRemMaterial::Rate' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_SetRemMaterial, GhostTime) == 0x000004, "Member 'BP_BonusGhostBridgeComponent_C_SetRemMaterial::GhostTime' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_SetRemMaterial, MaterialManageComp) == 0x000038, "Member 'BP_BonusGhostBridgeComponent_C_SetRemMaterial::MaterialManageComp' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_SetRemMaterial, CallFunc_BreakColor_R) == 0x000040, "Member 'BP_BonusGhostBridgeComponent_C_SetRemMaterial::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_SetRemMaterial, CallFunc_BreakColor_G) == 0x000044, "Member 'BP_BonusGhostBridgeComponent_C_SetRemMaterial::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_SetRemMaterial, CallFunc_BreakColor_B) == 0x000048, "Member 'BP_BonusGhostBridgeComponent_C_SetRemMaterial::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_SetRemMaterial, CallFunc_BreakColor_A) == 0x00004C, "Member 'BP_BonusGhostBridgeComponent_C_SetRemMaterial::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_SetRemMaterial, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_BonusGhostBridgeComponent_C_SetRemMaterial::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_SetRemMaterial, K2Node_MakeStruct_LinearColor) == 0x000054, "Member 'BP_BonusGhostBridgeComponent_C_SetRemMaterial::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_SetRemMaterial, CallFunc_GetOwner_ReturnValue) == 0x000068, "Member 'BP_BonusGhostBridgeComponent_C_SetRemMaterial::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_SetRemMaterial, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000070, "Member 'BP_BonusGhostBridgeComponent_C_SetRemMaterial::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(BP_BonusGhostBridgeComponent_C_SetRemMaterial, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_BonusGhostBridgeComponent_C_SetRemMaterial::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

