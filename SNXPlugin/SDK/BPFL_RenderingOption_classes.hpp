#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_RenderingOption

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPFL_RenderingOption.BPFL_RenderingOption_C
// 0x0000 (0x0028 - 0x0028)
class UBPFL_RenderingOption_C final : public UBlueprintFunctionLibrary
{
public:
	static void SetOptionDisplayBrightness(int32 Brightness, class UObject* __WorldContext);
	static void GetScreenResolutionList(bool IgnoreRefreshRate, class UObject* __WorldContext, bool* Success, TArray<struct FScreenResolutionSetting>* Resolutions);
	static void SetScreenResolution(int32 Width, int32 Height, class UObject* __WorldContext);
	static void SetWindowMode(EWindowMode WindowMode, class UObject* __WorldContext);
	static void UseRenderingOptionPPMSoftFocus(class UObject* __WorldContext, EGradualQuality* Quality);
	static void UseRenderingOptionPPMLuminousSmudge_(class UObject* __WorldContext, EGradualQuality* Quality);
	static void UseRenderingOptionPPMGradScreenMask(class UObject* __WorldContext, EGradualQuality* Quality);
	static void UseRenderingOptionPPMBothSideRim(class UObject* __WorldContext, EGradualQuality* Quality);
	static void UseRenderingOptionPPMLightUp(class UObject* __WorldContext, EGradualQuality* Quality);
	static void UseRenderingOptionPPMFieldBlur(class UObject* __WorldContext, EGradualQuality* Quality);
	static void UseRenderingOptionPPMLightShaft(class UObject* __WorldContext, EGradualQuality* Quality);
	static void UseRenderingOptionPPMDrivePlane(class UObject* __WorldContext, EGradualQuality* Quality);
	static void UseRenderingOptionPPMSAS(class UObject* __WorldContext, EGradualQuality* Quality);
	static void PrivateGetOptionPostQuality(class UObject* __WorldContext, EGradualQuality* Quality);
	static void UseRenderingOptionPPMBrainCrash(class UObject* __WorldContext, EGradualQuality* Quality);
	static void PrivateGetDebugQualityPPManager(class UObject* __WorldContext, bool* UseDebugQuality, class ABP_PostProcessManager_C** PPManager);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPFL_RenderingOption_C">();
	}
	static class UBPFL_RenderingOption_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPFL_RenderingOption_C>();
	}
};
static_assert(alignof(UBPFL_RenderingOption_C) == 0x000008, "Wrong alignment on UBPFL_RenderingOption_C");
static_assert(sizeof(UBPFL_RenderingOption_C) == 0x000028, "Wrong size on UBPFL_RenderingOption_C");

}

