#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_WeaponCh0200

#include "Basic.hpp"

#include "BPI_WeaponCh0200_classes.hpp"
#include "BPI_WeaponCh0200_parameters.hpp"


namespace SDK
{

// Function BPI_WeaponCh0200.BPI_WeaponCh0200_C.BeginRangeParticle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_WeaponCh0200_C::BeginRangeParticle(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_WeaponCh0200_C", "BeginRangeParticle");

	Params::BPI_WeaponCh0200_C_BeginRangeParticle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_WeaponCh0200.BPI_WeaponCh0200_C.EndRangeParticle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_WeaponCh0200_C::EndRangeParticle(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_WeaponCh0200_C", "EndRangeParticle");

	Params::BPI_WeaponCh0200_C_EndRangeParticle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_WeaponCh0200.BPI_WeaponCh0200_C.SetRangeParticleType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerComboPattern                     ComboPattern                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_WeaponCh0200_C::SetRangeParticleType(EPlayerComboPattern ComboPattern, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_WeaponCh0200_C", "SetRangeParticleType");

	Params::BPI_WeaponCh0200_C_SetRangeParticleType Parms{};

	Parms.ComboPattern = ComboPattern;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_WeaponCh0200.BPI_WeaponCh0200_C.SetTargetInRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInRange                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_WeaponCh0200_C::SetTargetInRange(bool bInRange, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_WeaponCh0200_C", "SetTargetInRange");

	Params::BPI_WeaponCh0200_C_SetTargetInRange Parms{};

	Parms.bInRange = bInRange;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_WeaponCh0200.BPI_WeaponCh0200_C.SetWeaponScaleWp0200
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InScale                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_WeaponCh0200_C::SetWeaponScaleWp0200(const struct FVector& InScale, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_WeaponCh0200_C", "SetWeaponScaleWp0200");

	Params::BPI_WeaponCh0200_C_SetWeaponScaleWp0200 Parms{};

	Parms.InScale = std::move(InScale);

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}

}

