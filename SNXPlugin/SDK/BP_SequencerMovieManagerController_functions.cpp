#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SequencerMovieManagerController

#include "Basic.hpp"

#include "BP_SequencerMovieManagerController_classes.hpp"
#include "BP_SequencerMovieManagerController_parameters.hpp"


namespace SDK
{

// Function BP_SequencerMovieManagerController.BP_SequencerMovieManagerController_C.ExecuteUbergraph_BP_SequencerMovieManagerController
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SequencerMovieManagerController_C::ExecuteUbergraph_BP_SequencerMovieManagerController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SequencerMovieManagerController_C", "ExecuteUbergraph_BP_SequencerMovieManagerController");

	Params::BP_SequencerMovieManagerController_C_ExecuteUbergraph_BP_SequencerMovieManagerController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SequencerMovieManagerController.BP_SequencerMovieManagerController_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SequencerMovieManagerController_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SequencerMovieManagerController_C", "ReceiveTick");

	Params::BP_SequencerMovieManagerController_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SequencerMovieManagerController.BP_SequencerMovieManagerController_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SequencerMovieManagerController_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SequencerMovieManagerController_C", "ReceiveEndPlay");

	Params::BP_SequencerMovieManagerController_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SequencerMovieManagerController.BP_SequencerMovieManagerController_C.EventStopMovie
// (BlueprintCallable, BlueprintEvent)

void ABP_SequencerMovieManagerController_C::EventStopMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SequencerMovieManagerController_C", "EventStopMovie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SequencerMovieManagerController.BP_SequencerMovieManagerController_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SequencerMovieManagerController_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SequencerMovieManagerController_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SequencerMovieManagerController.BP_SequencerMovieManagerController_C.EventPlayMovie
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MovieTextureIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SequencerMovieManagerController_C::EventPlayMovie(int32 MovieTextureIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SequencerMovieManagerController_C", "EventPlayMovie");

	Params::BP_SequencerMovieManagerController_C_EventPlayMovie Parms{};

	Parms.MovieTextureIndex = MovieTextureIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SequencerMovieManagerController.BP_SequencerMovieManagerController_C.GetMovieTexture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   MovieTextureIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UManaTexture*                     MovieTexture                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SequencerMovieManagerController_C::GetMovieTexture(int32 MovieTextureIndex, class UManaTexture** MovieTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SequencerMovieManagerController_C", "GetMovieTexture");

	Params::BP_SequencerMovieManagerController_C_GetMovieTexture Parms{};

	Parms.MovieTextureIndex = MovieTextureIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (MovieTexture != nullptr)
		*MovieTexture = Parms.MovieTexture;
}

}

