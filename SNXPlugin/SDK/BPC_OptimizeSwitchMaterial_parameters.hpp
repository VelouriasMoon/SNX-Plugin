#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_OptimizeSwitchMaterial

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPC_OptimizeSwitchMaterial.BPC_OptimizeSwitchMaterial_C.ExecuteUbergraph_BPC_OptimizeSwitchMaterial
// 0x0004 (0x0004 - 0x0000)
struct BPC_OptimizeSwitchMaterial_C_ExecuteUbergraph_BPC_OptimizeSwitchMaterial final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_OptimizeSwitchMaterial_C_ExecuteUbergraph_BPC_OptimizeSwitchMaterial) == 0x000004, "Wrong alignment on BPC_OptimizeSwitchMaterial_C_ExecuteUbergraph_BPC_OptimizeSwitchMaterial");
static_assert(sizeof(BPC_OptimizeSwitchMaterial_C_ExecuteUbergraph_BPC_OptimizeSwitchMaterial) == 0x000004, "Wrong size on BPC_OptimizeSwitchMaterial_C_ExecuteUbergraph_BPC_OptimizeSwitchMaterial");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ExecuteUbergraph_BPC_OptimizeSwitchMaterial, EntryPoint) == 0x000000, "Member 'BPC_OptimizeSwitchMaterial_C_ExecuteUbergraph_BPC_OptimizeSwitchMaterial::EntryPoint' has a wrong offset!");

// Function BPC_OptimizeSwitchMaterial.BPC_OptimizeSwitchMaterial_C.Initialize
// 0x0010 (0x0010 - 0x0000)
struct BPC_OptimizeSwitchMaterial_C_Initialize final
{
public:
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddMesh_ReturnValue;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_OptimizeSwitchMaterial_C_Initialize) == 0x000008, "Wrong alignment on BPC_OptimizeSwitchMaterial_C_Initialize");
static_assert(sizeof(BPC_OptimizeSwitchMaterial_C_Initialize) == 0x000010, "Wrong size on BPC_OptimizeSwitchMaterial_C_Initialize");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_Initialize, SkelMeshComp) == 0x000000, "Member 'BPC_OptimizeSwitchMaterial_C_Initialize::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_Initialize, CallFunc_AddMesh_ReturnValue) == 0x000008, "Member 'BPC_OptimizeSwitchMaterial_C_Initialize::CallFunc_AddMesh_ReturnValue' has a wrong offset!");

// Function BPC_OptimizeSwitchMaterial.BPC_OptimizeSwitchMaterial_C.InitializePlayer
// 0x0028 (0x0028 - 0x0000)
struct BPC_OptimizeSwitchMaterial_C_InitializePlayer final
{
public:
	class ARSBattlePlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Length;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_380D[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       Weapon;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_380E[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddMesh_ReturnValue;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_OptimizeSwitchMaterial_C_InitializePlayer) == 0x000008, "Wrong alignment on BPC_OptimizeSwitchMaterial_C_InitializePlayer");
static_assert(sizeof(BPC_OptimizeSwitchMaterial_C_InitializePlayer) == 0x000028, "Wrong size on BPC_OptimizeSwitchMaterial_C_InitializePlayer");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_InitializePlayer, Player) == 0x000000, "Member 'BPC_OptimizeSwitchMaterial_C_InitializePlayer::Player' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_InitializePlayer, Length) == 0x000008, "Member 'BPC_OptimizeSwitchMaterial_C_InitializePlayer::Length' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_InitializePlayer, SkelMeshComp) == 0x000010, "Member 'BPC_OptimizeSwitchMaterial_C_InitializePlayer::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_InitializePlayer, Weapon) == 0x000018, "Member 'BPC_OptimizeSwitchMaterial_C_InitializePlayer::Weapon' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_InitializePlayer, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BPC_OptimizeSwitchMaterial_C_InitializePlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_InitializePlayer, CallFunc_AddMesh_ReturnValue) == 0x000024, "Member 'BPC_OptimizeSwitchMaterial_C_InitializePlayer::CallFunc_AddMesh_ReturnValue' has a wrong offset!");

// Function BPC_OptimizeSwitchMaterial.BPC_OptimizeSwitchMaterial_C.Initialize Menu Player
// 0x0060 (0x0060 - 0x0000)
struct BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player final
{
public:
	class ABP_MenuPlayerBase_C*                   MenuPlayer;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_380F[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_GetMeshes_MeshComps;                      // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3810[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetWeaponMeshes_Meshes;                   // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetOptionalMeshes_Meshes;                 // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_AddMesh_ReturnValue;                      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddMesh_ReturnValue_1;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player) == 0x000008, "Wrong alignment on BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player");
static_assert(sizeof(BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player) == 0x000060, "Wrong size on BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player, MenuPlayer) == 0x000000, "Member 'BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player::MenuPlayer' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player, CallFunc_GetMeshes_MeshComps) == 0x000018, "Member 'BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player::CallFunc_GetMeshes_MeshComps' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player, CallFunc_GetWeaponMeshes_Meshes) == 0x000030, "Member 'BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player::CallFunc_GetWeaponMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player, CallFunc_GetOptionalMeshes_Meshes) == 0x000040, "Member 'BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player::CallFunc_GetOptionalMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player, CallFunc_AddMesh_ReturnValue) == 0x000050, "Member 'BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player::CallFunc_AddMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player, CallFunc_AddMesh_ReturnValue_1) == 0x000054, "Member 'BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player::CallFunc_AddMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BPC_OptimizeSwitchMaterial_C_Initialize_Menu_Player::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BPC_OptimizeSwitchMaterial.BPC_OptimizeSwitchMaterial_C.SetScalarParameter
// 0x0018 (0x0018 - 0x0000)
struct BPC_OptimizeSwitchMaterial_C_SetScalarParameter final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParameterValue;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3811[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckScalarParameter_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_OptimizeSwitchMaterial_C_SetScalarParameter) == 0x000004, "Wrong alignment on BPC_OptimizeSwitchMaterial_C_SetScalarParameter");
static_assert(sizeof(BPC_OptimizeSwitchMaterial_C_SetScalarParameter) == 0x000018, "Wrong size on BPC_OptimizeSwitchMaterial_C_SetScalarParameter");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SetScalarParameter, ParameterName) == 0x000000, "Member 'BPC_OptimizeSwitchMaterial_C_SetScalarParameter::ParameterName' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SetScalarParameter, ParameterValue) == 0x000008, "Member 'BPC_OptimizeSwitchMaterial_C_SetScalarParameter::ParameterValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SetScalarParameter, Temp_int_Variable) == 0x00000C, "Member 'BPC_OptimizeSwitchMaterial_C_SetScalarParameter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SetScalarParameter, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000010, "Member 'BPC_OptimizeSwitchMaterial_C_SetScalarParameter::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SetScalarParameter, CallFunc_CheckScalarParameter_ReturnValue) == 0x000014, "Member 'BPC_OptimizeSwitchMaterial_C_SetScalarParameter::CallFunc_CheckScalarParameter_ReturnValue' has a wrong offset!");

// Function BPC_OptimizeSwitchMaterial.BPC_OptimizeSwitchMaterial_C.SetScalarArrayParameter
// 0x0030 (0x0030 - 0x0000)
struct BPC_OptimizeSwitchMaterial_C_SetScalarArrayParameter final
{
public:
	TArray<class FName>                           ParameterName;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<float>                                 ParameterValue;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3812[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckScalarArrayParameter_ReturnValue;    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_OptimizeSwitchMaterial_C_SetScalarArrayParameter) == 0x000008, "Wrong alignment on BPC_OptimizeSwitchMaterial_C_SetScalarArrayParameter");
static_assert(sizeof(BPC_OptimizeSwitchMaterial_C_SetScalarArrayParameter) == 0x000030, "Wrong size on BPC_OptimizeSwitchMaterial_C_SetScalarArrayParameter");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SetScalarArrayParameter, ParameterName) == 0x000000, "Member 'BPC_OptimizeSwitchMaterial_C_SetScalarArrayParameter::ParameterName' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SetScalarArrayParameter, ParameterValue) == 0x000010, "Member 'BPC_OptimizeSwitchMaterial_C_SetScalarArrayParameter::ParameterValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SetScalarArrayParameter, Temp_int_Variable) == 0x000020, "Member 'BPC_OptimizeSwitchMaterial_C_SetScalarArrayParameter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SetScalarArrayParameter, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000024, "Member 'BPC_OptimizeSwitchMaterial_C_SetScalarArrayParameter::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SetScalarArrayParameter, CallFunc_CheckScalarArrayParameter_ReturnValue) == 0x000028, "Member 'BPC_OptimizeSwitchMaterial_C_SetScalarArrayParameter::CallFunc_CheckScalarArrayParameter_ReturnValue' has a wrong offset!");

// Function BPC_OptimizeSwitchMaterial.BPC_OptimizeSwitchMaterial_C.SetActivateSwitch
// 0x0001 (0x0001 - 0x0000)
struct BPC_OptimizeSwitchMaterial_C_SetActivateSwitch final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_OptimizeSwitchMaterial_C_SetActivateSwitch) == 0x000001, "Wrong alignment on BPC_OptimizeSwitchMaterial_C_SetActivateSwitch");
static_assert(sizeof(BPC_OptimizeSwitchMaterial_C_SetActivateSwitch) == 0x000001, "Wrong size on BPC_OptimizeSwitchMaterial_C_SetActivateSwitch");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SetActivateSwitch, Active) == 0x000000, "Member 'BPC_OptimizeSwitchMaterial_C_SetActivateSwitch::Active' has a wrong offset!");

// Function BPC_OptimizeSwitchMaterial.BPC_OptimizeSwitchMaterial_C.CheckSwitch
// 0x000C (0x000C - 0x0000)
struct BPC_OptimizeSwitchMaterial_C_CheckSwitch final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3813[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckNowParameters_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_OptimizeSwitchMaterial_C_CheckSwitch) == 0x000004, "Wrong alignment on BPC_OptimizeSwitchMaterial_C_CheckSwitch");
static_assert(sizeof(BPC_OptimizeSwitchMaterial_C_CheckSwitch) == 0x00000C, "Wrong size on BPC_OptimizeSwitchMaterial_C_CheckSwitch");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_CheckSwitch, Temp_int_Variable) == 0x000000, "Member 'BPC_OptimizeSwitchMaterial_C_CheckSwitch::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_CheckSwitch, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000004, "Member 'BPC_OptimizeSwitchMaterial_C_CheckSwitch::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_CheckSwitch, CallFunc_CheckNowParameters_ReturnValue) == 0x000008, "Member 'BPC_OptimizeSwitchMaterial_C_CheckSwitch::CallFunc_CheckNowParameters_ReturnValue' has a wrong offset!");

// Function BPC_OptimizeSwitchMaterial.BPC_OptimizeSwitchMaterial_C.RevertSwitch
// 0x0008 (0x0008 - 0x0000)
struct BPC_OptimizeSwitchMaterial_C_RevertSwitch final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_OptimizeSwitchMaterial_C_RevertSwitch) == 0x000004, "Wrong alignment on BPC_OptimizeSwitchMaterial_C_RevertSwitch");
static_assert(sizeof(BPC_OptimizeSwitchMaterial_C_RevertSwitch) == 0x000008, "Wrong size on BPC_OptimizeSwitchMaterial_C_RevertSwitch");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_RevertSwitch, Temp_int_Variable) == 0x000000, "Member 'BPC_OptimizeSwitchMaterial_C_RevertSwitch::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_RevertSwitch, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000004, "Member 'BPC_OptimizeSwitchMaterial_C_RevertSwitch::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BPC_OptimizeSwitchMaterial.BPC_OptimizeSwitchMaterial_C.IsActiveSwitch
// 0x0002 (0x0002 - 0x0000)
struct BPC_OptimizeSwitchMaterial_C_IsActiveSwitch final
{
public:
	bool                                          Param_IsActive;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSwitchActivate_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_OptimizeSwitchMaterial_C_IsActiveSwitch) == 0x000001, "Wrong alignment on BPC_OptimizeSwitchMaterial_C_IsActiveSwitch");
static_assert(sizeof(BPC_OptimizeSwitchMaterial_C_IsActiveSwitch) == 0x000002, "Wrong size on BPC_OptimizeSwitchMaterial_C_IsActiveSwitch");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_IsActiveSwitch, Param_IsActive) == 0x000000, "Member 'BPC_OptimizeSwitchMaterial_C_IsActiveSwitch::Param_IsActive' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_IsActiveSwitch, CallFunc_IsSwitchActivate_ReturnValue) == 0x000001, "Member 'BPC_OptimizeSwitchMaterial_C_IsActiveSwitch::CallFunc_IsSwitchActivate_ReturnValue' has a wrong offset!");

// Function BPC_OptimizeSwitchMaterial.BPC_OptimizeSwitchMaterial_C.DestroyComponentMe
// 0x0001 (0x0001 - 0x0000)
struct BPC_OptimizeSwitchMaterial_C_DestroyComponentMe final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_OptimizeSwitchMaterial_C_DestroyComponentMe) == 0x000001, "Wrong alignment on BPC_OptimizeSwitchMaterial_C_DestroyComponentMe");
static_assert(sizeof(BPC_OptimizeSwitchMaterial_C_DestroyComponentMe) == 0x000001, "Wrong size on BPC_OptimizeSwitchMaterial_C_DestroyComponentMe");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_DestroyComponentMe, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BPC_OptimizeSwitchMaterial_C_DestroyComponentMe::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPC_OptimizeSwitchMaterial.BPC_OptimizeSwitchMaterial_C.GetNowSettingNo
// 0x0004 (0x0004 - 0x0000)
struct BPC_OptimizeSwitchMaterial_C_GetNowSettingNo final
{
public:
	int32                                         SettingNo;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_OptimizeSwitchMaterial_C_GetNowSettingNo) == 0x000004, "Wrong alignment on BPC_OptimizeSwitchMaterial_C_GetNowSettingNo");
static_assert(sizeof(BPC_OptimizeSwitchMaterial_C_GetNowSettingNo) == 0x000004, "Wrong size on BPC_OptimizeSwitchMaterial_C_GetNowSettingNo");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_GetNowSettingNo, SettingNo) == 0x000000, "Member 'BPC_OptimizeSwitchMaterial_C_GetNowSettingNo::SettingNo' has a wrong offset!");

// Function BPC_OptimizeSwitchMaterial.BPC_OptimizeSwitchMaterial_C.ChangePlayerAttachment
// 0x0028 (0x0028 - 0x0000)
struct BPC_OptimizeSwitchMaterial_C_ChangePlayerAttachment final
{
public:
	class ARSBattlePlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 MeshComps;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CallFunc_GetMeshes_MeshComps;                      // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BPC_OptimizeSwitchMaterial_C_ChangePlayerAttachment) == 0x000008, "Wrong alignment on BPC_OptimizeSwitchMaterial_C_ChangePlayerAttachment");
static_assert(sizeof(BPC_OptimizeSwitchMaterial_C_ChangePlayerAttachment) == 0x000028, "Wrong size on BPC_OptimizeSwitchMaterial_C_ChangePlayerAttachment");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerAttachment, Player) == 0x000000, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerAttachment::Player' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerAttachment, MeshComps) == 0x000008, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerAttachment::MeshComps' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerAttachment, CallFunc_GetMeshes_MeshComps) == 0x000018, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerAttachment::CallFunc_GetMeshes_MeshComps' has a wrong offset!");

// Function BPC_OptimizeSwitchMaterial.BPC_OptimizeSwitchMaterial_C.ChangePlayerWeapon
// 0x0080 (0x0080 - 0x0000)
struct BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon final
{
public:
	class ARSBattlePlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         SkelMeshComps;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       Weapon;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3814[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeaponList_WeaponList;                 // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetExtraMesh_ExtraMesh;                   // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3815[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3816[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon) == 0x000008, "Wrong alignment on BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon");
static_assert(sizeof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon) == 0x000080, "Wrong size on BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, Player) == 0x000000, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::Player' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, SkelMeshComps) == 0x000008, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::SkelMeshComps' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, Weapon) == 0x000018, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::Weapon' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, Temp_int_Loop_Num_Variable) == 0x000030, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, CallFunc_GetWeaponList_WeaponList) == 0x000038, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::CallFunc_GetWeaponList_WeaponList' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, Temp_int_Loop_Counter_Variable_1) == 0x00004C, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, Temp_int_Loop_Num_Variable_1) == 0x000054, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, CallFunc_GetExtraMesh_ExtraMesh) == 0x000058, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::CallFunc_GetExtraMesh_ExtraMesh' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, CallFunc_IsValid_ReturnValue_1) == 0x000074, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon, CallFunc_Array_Add_ReturnValue_1) == 0x000078, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerWeapon::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BPC_OptimizeSwitchMaterial.BPC_OptimizeSwitchMaterial_C.ChangeMeshLayers
// 0x0068 (0x0068 - 0x0000)
struct BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers final
{
public:
	TArray<class UMeshComponent*>                 MeshComps;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<int32>                                 MeshLayers;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UMeshComponent*                         MeshComp;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastIndex;                                         // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FirstIndex;                                        // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3817[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddMesh_ReturnValue;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3818[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers) == 0x000008, "Wrong alignment on BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers");
static_assert(sizeof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers) == 0x000068, "Wrong size on BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers, MeshComps) == 0x000000, "Member 'BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers::MeshComps' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers, MeshLayers) == 0x000010, "Member 'BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers::MeshLayers' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers, MeshComp) == 0x000020, "Member 'BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers::MeshComp' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers, LastIndex) == 0x000028, "Member 'BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers::LastIndex' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers, FirstIndex) == 0x00002C, "Member 'BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers::FirstIndex' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers, Temp_int_Loop_Num_Variable) == 0x00003C, "Member 'BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers, CallFunc_AddMesh_ReturnValue) == 0x000044, "Member 'BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers::CallFunc_AddMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers, CallFunc_Array_LastIndex_ReturnValue) == 0x000054, "Member 'BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000058, "Member 'BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers, Temp_int_Variable) == 0x00005C, "Member 'BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000064, "Member 'BPC_OptimizeSwitchMaterial_C_ChangeMeshLayers::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BPC_OptimizeSwitchMaterial.BPC_OptimizeSwitchMaterial_C.SwitchSetting
// 0x0030 (0x0030 - 0x0000)
struct BPC_OptimizeSwitchMaterial_C_SwitchSetting final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3819[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381A[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeaponList_WeaponList;                 // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_OptimizeSwitchMaterial_C_SwitchSetting) == 0x000008, "Wrong alignment on BPC_OptimizeSwitchMaterial_C_SwitchSetting");
static_assert(sizeof(BPC_OptimizeSwitchMaterial_C_SwitchSetting) == 0x000030, "Wrong size on BPC_OptimizeSwitchMaterial_C_SwitchSetting");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SwitchSetting, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BPC_OptimizeSwitchMaterial_C_SwitchSetting::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SwitchSetting, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BPC_OptimizeSwitchMaterial_C_SwitchSetting::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SwitchSetting, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BPC_OptimizeSwitchMaterial_C_SwitchSetting::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SwitchSetting, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BPC_OptimizeSwitchMaterial_C_SwitchSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SwitchSetting, CallFunc_Less_IntInt_ReturnValue) == 0x00000D, "Member 'BPC_OptimizeSwitchMaterial_C_SwitchSetting::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SwitchSetting, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BPC_OptimizeSwitchMaterial_C_SwitchSetting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SwitchSetting, CallFunc_IsValid_ReturnValue_1) == 0x000014, "Member 'BPC_OptimizeSwitchMaterial_C_SwitchSetting::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SwitchSetting, CallFunc_GetWeaponList_WeaponList) == 0x000018, "Member 'BPC_OptimizeSwitchMaterial_C_SwitchSetting::CallFunc_GetWeaponList_WeaponList' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SwitchSetting, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BPC_OptimizeSwitchMaterial_C_SwitchSetting::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_SwitchSetting, CallFunc_IsValid_ReturnValue_2) == 0x00002C, "Member 'BPC_OptimizeSwitchMaterial_C_SwitchSetting::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BPC_OptimizeSwitchMaterial.BPC_OptimizeSwitchMaterial_C.ChangePlayerBody
// 0x0038 (0x0038 - 0x0000)
struct BPC_OptimizeSwitchMaterial_C_ChangePlayerBody final
{
public:
	class ARSBattlePlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         SkelMeshComps;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       Weapon;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381B[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BPC_OptimizeSwitchMaterial_C_ChangePlayerBody) == 0x000008, "Wrong alignment on BPC_OptimizeSwitchMaterial_C_ChangePlayerBody");
static_assert(sizeof(BPC_OptimizeSwitchMaterial_C_ChangePlayerBody) == 0x000038, "Wrong size on BPC_OptimizeSwitchMaterial_C_ChangePlayerBody");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerBody, Player) == 0x000000, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerBody::Player' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerBody, SkelMeshComps) == 0x000008, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerBody::SkelMeshComps' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerBody, Weapon) == 0x000018, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerBody::Weapon' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerBody, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerBody::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_ChangePlayerBody, K2Node_MakeArray_Array) == 0x000028, "Member 'BPC_OptimizeSwitchMaterial_C_ChangePlayerBody::K2Node_MakeArray_Array' has a wrong offset!");

// Function BPC_OptimizeSwitchMaterial.BPC_OptimizeSwitchMaterial_C.PushDisable
// 0x0001 (0x0001 - 0x0000)
struct BPC_OptimizeSwitchMaterial_C_PushDisable final
{
public:
	bool                                          CallFunc_IsActiveSwitch_IsActive;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_OptimizeSwitchMaterial_C_PushDisable) == 0x000001, "Wrong alignment on BPC_OptimizeSwitchMaterial_C_PushDisable");
static_assert(sizeof(BPC_OptimizeSwitchMaterial_C_PushDisable) == 0x000001, "Wrong size on BPC_OptimizeSwitchMaterial_C_PushDisable");
static_assert(offsetof(BPC_OptimizeSwitchMaterial_C_PushDisable, CallFunc_IsActiveSwitch_IsActive) == 0x000000, "Member 'BPC_OptimizeSwitchMaterial_C_PushDisable::CallFunc_IsActiveSwitch_IsActive' has a wrong offset!");

}

