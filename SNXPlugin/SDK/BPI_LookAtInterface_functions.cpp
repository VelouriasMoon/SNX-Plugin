#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_LookAtInterface

#include "Basic.hpp"

#include "BPI_LookAtInterface_classes.hpp"
#include "BPI_LookAtInterface_parameters.hpp"


namespace SDK
{

// Function BPI_LookAtInterface.BPI_LookAtInterface_C.SetLookAtEnable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_LookAtInterface_C::SetLookAtEnable(bool bEnable, bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_LookAtInterface_C", "SetLookAtEnable");

	Params::BPI_LookAtInterface_C_SetLookAtEnable Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BPI_LookAtInterface.BPI_LookAtInterface_C.SetEventLookAtLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          LookAtLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_LookAtInterface_C::SetEventLookAtLocation(bool bEnable, const struct FVector& LookAtLocation, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_LookAtInterface_C", "SetEventLookAtLocation");

	Params::BPI_LookAtInterface_C_SetEventLookAtLocation Parms{};

	Parms.bEnable = bEnable;
	Parms.LookAtLocation = std::move(LookAtLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_LookAtInterface.BPI_LookAtInterface_C.SetEventLookAtActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           LookAtActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_LookAtInterface_C::SetEventLookAtActor(bool bEnable, class AActor* LookAtActor, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_LookAtInterface_C", "SetEventLookAtActor");

	Params::BPI_LookAtInterface_C_SetEventLookAtActor Parms{};

	Parms.bEnable = bEnable;
	Parms.LookAtActor = LookAtActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_LookAtInterface.BPI_LookAtInterface_C.IsLookAtEnable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_LookAtInterface_C::IsLookAtEnable(bool* bEnable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_LookAtInterface_C", "IsLookAtEnable");

	Params::BPI_LookAtInterface_C_IsLookAtEnable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;
}

}

