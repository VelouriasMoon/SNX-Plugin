#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_PlayerFunctionLibrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "EPlayerAIBattleThinkType_structs.hpp"
#include "EPlayerAIBattleThinkTransition_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "FPlayerWeaponLoadData_structs.hpp"
#include "EPlayerAIMoveMode_structs.hpp"
#include "EPlayerAIThinkTableType_structs.hpp"
#include "EPlayerAIBattleThinkParam_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.CalcArrowRainLocation
// 0x04C0 (0x04C0 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation final
{
public:
	class AActor*                                 PlayerActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CheckUnderHeight;                                  // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CHeckUpperHeight;                                  // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LPoint;                                            // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LTargetLocation;                                   // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397F[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0048(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3980[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3981[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3982[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3983[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0108(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0118(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0140(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3984[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x01D0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3985[0x2];                                     // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3986[0x4];                                     // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x026C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x02F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x02F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3987[0x1];                                     // 0x02F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0340(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_2;                          // 0x0370(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_2;       // 0x038C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_2;  // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3988[0x3];                                     // 0x0415(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0418(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0425(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3989[0x2];                                     // 0x0426(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0430(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x043C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0448(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0454(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0470(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x0488(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0494(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x04AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation) == 0x0004C0, "Wrong size on BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, PlayerActor) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::PlayerActor' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, TargetActor) == 0x000008, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::TargetActor' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CheckUnderHeight) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CheckUnderHeight' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CHeckUpperHeight) == 0x000014, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CHeckUpperHeight' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, __WorldContext) == 0x000018, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, Location) == 0x000020, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::Location' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, LPoint) == 0x00002C, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::LPoint' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, LTargetLocation) == 0x000038, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::LTargetLocation' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, Temp_object_Variable) == 0x000048, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_MakeVector_ReturnValue) == 0x00005C, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_MakeVector_ReturnValue_1) == 0x000074, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_MakeVector_ReturnValue_2) == 0x000080, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_MakeVector_ReturnValue_3) == 0x00008C, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000098, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A4, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000B0, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000BC, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000C8, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, K2Node_MakeArray_Array) == 0x0000D8, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000E8, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_IsValid_ReturnValue_1) == 0x0000F4, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakVector_X) == 0x0000F8, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakVector_Y) == 0x0000FC, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakVector_Z) == 0x000100, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, K2Node_MakeArray_Array_1) == 0x000108, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, Temp_object_Variable_1) == 0x000118, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000128, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000134, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000140, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0001C8, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, Temp_object_Variable_2) == 0x0001D0, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x0001E0, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001E1, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_Time) == 0x0001E4, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_Distance) == 0x0001E8, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_Location) == 0x0001EC, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x0001F8, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_Normal) == 0x000204, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x000210, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_PhysMat) == 0x000220, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_HitActor) == 0x000228, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_HitComponent) == 0x000230, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_HitBoneName) == 0x000238, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_HitItem) == 0x000240, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_FaceIndex) == 0x000244, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_TraceStart) == 0x000248, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_TraceEnd) == 0x000254, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000260, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x00026C, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x0002F4, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0002F5, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0002F6, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_Time_1) == 0x0002F8, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_Distance_1) == 0x0002FC, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_Location_1) == 0x000300, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_ImpactPoint_1) == 0x00030C, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_Normal_1) == 0x000318, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000324, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_PhysMat_1) == 0x000330, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_HitActor_1) == 0x000338, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_HitComponent_1) == 0x000340, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_HitBoneName_1) == 0x000348, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_HitItem_1) == 0x000350, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_FaceIndex_1) == 0x000354, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_TraceStart_1) == 0x000358, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_TraceEnd_1) == 0x000364, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, K2Node_MakeArray_Array_2) == 0x000370, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000380, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_LineTraceSingleForObjects_OutHit_2) == 0x00038C, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_LineTraceSingleForObjects_OutHit_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_LineTraceSingleForObjects_ReturnValue_2) == 0x000414, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_LineTraceSingleForObjects_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000418, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000424, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000425, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_Time_2) == 0x000428, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_Distance_2) == 0x00042C, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_Location_2) == 0x000430, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_ImpactPoint_2) == 0x00043C, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_Normal_2) == 0x000448, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000454, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_PhysMat_2) == 0x000460, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_HitActor_2) == 0x000468, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_HitComponent_2) == 0x000470, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_HitBoneName_2) == 0x000478, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_HitItem_2) == 0x000480, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_FaceIndex_2) == 0x000484, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_TraceStart_2) == 0x000488, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakHitResult_TraceEnd_2) == 0x000494, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakVector_X_1) == 0x0004A0, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakVector_Y_1) == 0x0004A4, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_BreakVector_Z_1) == 0x0004A8, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_Add_VectorVector_ReturnValue_5) == 0x0004AC, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0004B8, "Member 'BPFL_PlayerFunctionLibrary_C_CalcArrowRainLocation::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.Change Player Materials from Slot
// 0x01A8 (0x01A8 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot final
{
public:
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialBody;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialEye;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialHair;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialSkin;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialOutline;                                   // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialWire0;                                     // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialWire1;                                     // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialMask;                                      // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialOther;                                     // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HitIndex;                                          // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398A[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     ChangeBaseMaterial;                                // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaterialIndex;                                     // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398B[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SlotName;                                          // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           SlotNames;                                         // 0x0088(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             ChangeSlotMaterials;                               // 0x0098(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FString>                         ChangeSlotStrings;                                 // 0x00A8(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_398C[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_398D[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_398E[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array_1;                          // 0x00E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398F[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3990[0x2];                                     // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3991[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3992[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetMaterialSlotNames_ReturnValue;         // 0x0138(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3993[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3994[0x3];                                     // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3995[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMaterialOverrideParameters            CallFunc_GetMaterialOverrideParametersALLHierarchy_OutParam; // 0x0170(0x0030)()
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot) == 0x0001A8, "Wrong size on BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, SkelMeshComp) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, MaterialBody) == 0x000008, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::MaterialBody' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, MaterialEye) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::MaterialEye' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, MaterialHair) == 0x000018, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::MaterialHair' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, MaterialSkin) == 0x000020, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::MaterialSkin' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, MaterialOutline) == 0x000028, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::MaterialOutline' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, MaterialWire0) == 0x000030, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::MaterialWire0' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, MaterialWire1) == 0x000038, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::MaterialWire1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, MaterialMask) == 0x000040, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::MaterialMask' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, MaterialOther) == 0x000048, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::MaterialOther' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, __WorldContext) == 0x000050, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, HitIndex) == 0x000058, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::HitIndex' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, ChangeBaseMaterial) == 0x000060, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::ChangeBaseMaterial' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, Mid) == 0x000068, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::Mid' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, MaterialIndex) == 0x000070, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::MaterialIndex' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, SlotName) == 0x000078, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::SlotName' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, SlotNames) == 0x000088, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::SlotNames' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, ChangeSlotMaterials) == 0x000098, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::ChangeSlotMaterials' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, ChangeSlotStrings) == 0x0000A8, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::ChangeSlotStrings' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, Temp_bool_True_if_break_was_hit_Variable) == 0x0000B8, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, K2Node_MakeArray_Array) == 0x0000C0, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, CallFunc_Not_PreBool_ReturnValue) == 0x0000D0, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, Temp_int_Loop_Counter_Variable) == 0x0000D4, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, CallFunc_Add_IntInt_ReturnValue) == 0x0000D8, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, Temp_int_Array_Index_Variable) == 0x0000DC, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, Temp_int_Loop_Num_Variable) == 0x0000E0, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, CallFunc_Less_IntInt_ReturnValue) == 0x0000E4, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, K2Node_MakeArray_Array_1) == 0x0000E8, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, Temp_int_Array_Index_Variable_1) == 0x0000F8, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, CallFunc_Array_Get_Item) == 0x000100, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000108, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, CallFunc_IsValid_ReturnValue) == 0x000109, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, CallFunc_Array_Length_ReturnValue) == 0x00010C, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, CallFunc_Conv_NameToString_ReturnValue) == 0x000110, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, Temp_int_Loop_Num_Variable_1) == 0x000120, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000128, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, CallFunc_Array_Length_ReturnValue_1) == 0x000130, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, CallFunc_GetMaterialSlotNames_ReturnValue) == 0x000138, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::CallFunc_GetMaterialSlotNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, Temp_int_Loop_Counter_Variable_1) == 0x000148, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, CallFunc_Less_IntInt_ReturnValue_1) == 0x00014C, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, CallFunc_Add_IntInt_ReturnValue_1) == 0x000150, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, CallFunc_BooleanAND_ReturnValue) == 0x000154, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, CallFunc_GetMaterial_ReturnValue) == 0x000158, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, K2Node_DynamicCast_AsMaterial_Instance) == 0x000160, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::K2Node_DynamicCast_AsMaterial_Instance' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, CallFunc_GetMaterialOverrideParametersALLHierarchy_OutParam) == 0x000170, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::CallFunc_GetMaterialOverrideParametersALLHierarchy_OutParam' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, CallFunc_FindSubstring_ReturnValue) == 0x0001A0, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0001A4, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot, CallFunc_IsValid_ReturnValue_1) == 0x0001A5, "Member 'BPFL_PlayerFunctionLibrary_C_Change_Player_Materials_from_Slot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.ChangePlayerMaterialsHologram
// 0x0070 (0x0070 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram final
{
public:
	class UMeshComponent*                         MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWeapon;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseCustomStencil;                                  // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3996[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3997[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3998[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3999[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram) == 0x000070, "Wrong size on BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram, MeshComp) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram::MeshComp' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram, IsWeapon) == 0x000008, "Member 'BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram::IsWeapon' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram, UseCustomStencil) == 0x000009, "Member 'BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram::UseCustomStencil' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram, __WorldContext) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram, Temp_bool_Variable) == 0x000018, "Member 'BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram, Temp_object_Variable) == 0x000020, "Member 'BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram, Temp_object_Variable_1) == 0x000028, "Member 'BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram, Temp_bool_Variable_1) == 0x000030, "Member 'BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram, Temp_object_Variable_2) == 0x000038, "Member 'BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram, Temp_object_Variable_3) == 0x000040, "Member 'BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram, K2Node_MakeArray_Array) == 0x000048, "Member 'BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram, K2Node_Select_Default) == 0x000060, "Member 'BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram, K2Node_Select_Default_1) == 0x000068, "Member 'BPFL_PlayerFunctionLibrary_C_ChangePlayerMaterialsHologram::K2Node_Select_Default_1' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.SetMaterialParameterHologram
// 0x0070 (0x0070 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram final
{
public:
	class UMeshComponent*                         MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NoiseRate;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VisibleRate;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveRate;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseVisibleRate;                                    // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399A[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x0038(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399C[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array_2;                          // 0x0050(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array_3;                          // 0x0060(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram) == 0x000070, "Wrong size on BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram, MeshComp) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram::MeshComp' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram, NoiseRate) == 0x000008, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram::NoiseRate' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram, VisibleRate) == 0x00000C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram::VisibleRate' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram, EmissiveRate) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram::EmissiveRate' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram, UseVisibleRate) == 0x000014, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram::UseVisibleRate' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram, __WorldContext) == 0x000018, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram, K2Node_MakeArray_Array) == 0x000028, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram, K2Node_MakeArray_Array_1) == 0x000038, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram, K2Node_MakeArray_Array_2) == 0x000050, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram, K2Node_MakeArray_Array_3) == 0x000060, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologram::K2Node_MakeArray_Array_3' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.SetMaterialParameterHologramSASCurve
// 0x00A0 (0x00A0 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve final
{
public:
	class UCurveLinearColor*                      Curve;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultScanlineColor;                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKindNative                               SasKind;                                           // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399D[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CharacterMeshes;                                   // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         WeaponMeshes;                                      // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FMaterialSwitchCache                   InOutStealthSwitch;                                // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          InOutNowStealth;                                   // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399E[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 AttachmentMeshes;                                  // 0x0058(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Finish;                                            // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399F[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CurveValue;                                        // 0x0074(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve) == 0x0000A0, "Wrong size on BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve, Curve) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve::Curve' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve, DefaultScanlineColor) == 0x000008, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve::DefaultScanlineColor' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve, Time) == 0x000018, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve::Time' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve, SasKind) == 0x00001C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve::SasKind' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve, CharacterMeshes) == 0x000020, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve::CharacterMeshes' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve, WeaponMeshes) == 0x000030, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve::WeaponMeshes' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve, InOutStealthSwitch) == 0x000040, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve::InOutStealthSwitch' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve, InOutNowStealth) == 0x000050, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve::InOutNowStealth' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve, AttachmentMeshes) == 0x000058, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve::AttachmentMeshes' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve, __WorldContext) == 0x000068, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve, Finish) == 0x000070, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve::Finish' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve, CurveValue) == 0x000074, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve::CurveValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve, CallFunc_GetLinearColorValue_ReturnValue) == 0x000084, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve, CallFunc_GetTimeRange_MinTime) == 0x000094, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve, CallFunc_GetTimeRange_MaxTime) == 0x000098, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00009C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve, CallFunc_IsValid_ReturnValue) == 0x00009D, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCurve::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.SetMaterialParameterHologramSAS
// 0x0090 (0x0090 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS final
{
public:
	struct FLinearColor                           SettingValue;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultScanlineColor;                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKindNative                               SasKind;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A0[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CharacterMeshes;                                   // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         WeaponMeshes;                                      // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FMaterialSwitchCache                   InOutStealthSwitch;                                // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          InOutNowStealth;                                   // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A1[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 AttachmentMeshes;                                  // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   CopyColorValue;                                    // 0x0078(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS) == 0x000090, "Wrong size on BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS, SettingValue) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS::SettingValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS, DefaultScanlineColor) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS::DefaultScanlineColor' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS, SasKind) == 0x000020, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS::SasKind' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS, CharacterMeshes) == 0x000028, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS::CharacterMeshes' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS, WeaponMeshes) == 0x000038, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS::WeaponMeshes' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS, InOutStealthSwitch) == 0x000048, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS::InOutStealthSwitch' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS, InOutNowStealth) == 0x000058, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS::InOutNowStealth' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS, AttachmentMeshes) == 0x000060, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS::AttachmentMeshes' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS, __WorldContext) == 0x000070, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS, CopyColorValue) == 0x000078, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS::CopyColorValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS, K2Node_SwitchEnum_CmpSuccess) == 0x000088, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSAS::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.SetMaterialParameterHologramSASMetal
// 0x0090 (0x0090 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal final
{
public:
	struct FLinearColor                           SettingValue;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CharacterMeshes;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 WeaponMeshes;                                      // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 AttachmentMeshes;                                  // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A2[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A3[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A4[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal) == 0x000090, "Wrong size on BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, SettingValue) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::SettingValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, CharacterMeshes) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::CharacterMeshes' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, WeaponMeshes) == 0x000020, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::WeaponMeshes' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, AttachmentMeshes) == 0x000030, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::AttachmentMeshes' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, __WorldContext) == 0x000040, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, Temp_int_Loop_Num_Variable) == 0x000054, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, Temp_int_Loop_Num_Variable_1) == 0x00005C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, Temp_int_Array_Index_Variable_1) == 0x000060, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, Temp_int_Loop_Counter_Variable_1) == 0x000064, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, Temp_int_Array_Index_Variable_2) == 0x00006C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, Temp_int_Loop_Num_Variable_2) == 0x000070, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, CallFunc_Less_IntInt_ReturnValue_1) == 0x000074, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, Temp_int_Loop_Counter_Variable_2) == 0x00007C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, CallFunc_Less_IntInt_ReturnValue_2) == 0x000080, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, CallFunc_Add_IntInt_ReturnValue_2) == 0x000084, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal, CallFunc_Array_Length_ReturnValue_2) == 0x00008C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASMetal::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.SetMaterialParameterHologramSASTelepo
// 0x00D0 (0x00D0 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo final
{
public:
	struct FLinearColor                           SettingValue;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultColor;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CharacterMeshes;                                   // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 WeaponMeshes;                                      // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 AttachmentMeshes;                                  // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorValue;                                        // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A5[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A6[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A7[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_CInterpTo_ReturnValue;                    // 0x00BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo) == 0x0000D0, "Wrong size on BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, SettingValue) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::SettingValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, DefaultColor) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::DefaultColor' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, CharacterMeshes) == 0x000020, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::CharacterMeshes' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, WeaponMeshes) == 0x000030, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::WeaponMeshes' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, AttachmentMeshes) == 0x000040, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::AttachmentMeshes' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, __WorldContext) == 0x000050, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, ColorValue) == 0x000058, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::ColorValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, Temp_int_Loop_Num_Variable) == 0x000074, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, Temp_int_Loop_Num_Variable_1) == 0x00007C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, Temp_int_Array_Index_Variable_1) == 0x000080, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, Temp_int_Loop_Counter_Variable_1) == 0x000084, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, Temp_int_Array_Index_Variable_2) == 0x00008C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, Temp_int_Loop_Num_Variable_2) == 0x000090, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, CallFunc_Less_IntInt_ReturnValue_1) == 0x000094, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, Temp_int_Loop_Counter_Variable_2) == 0x00009C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000A0, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A4, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, CallFunc_MakeColor_ReturnValue) == 0x0000AC, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, CallFunc_CInterpTo_ReturnValue) == 0x0000BC, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::CallFunc_CInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo, CallFunc_Array_Length_ReturnValue_2) == 0x0000CC, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASTelepo::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.SetMaterialParameterHologramSASCopy
// 0x00F0 (0x00F0 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy final
{
public:
	struct FLinearColor                           CopyColorValue;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultColor;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CharacterMeshes;                                   // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 WeaponMeshes;                                      // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 AttachmentMeshes;                                  // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         TargetMeshComps;                                   // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CopyIndex;                                         // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Nowindex;                                          // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoopLastIndex;                                     // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorValue;                                        // 0x006C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A8[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A9[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39AA[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39AB[0x2];                                     // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_CInterpTo_ReturnValue;                    // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AC[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item_1;                         // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy) == 0x0000F0, "Wrong size on BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CopyColorValue) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CopyColorValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, DefaultColor) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::DefaultColor' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CharacterMeshes) == 0x000020, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CharacterMeshes' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, WeaponMeshes) == 0x000030, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::WeaponMeshes' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, AttachmentMeshes) == 0x000040, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::AttachmentMeshes' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, __WorldContext) == 0x000050, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, TargetMeshComps) == 0x000058, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::TargetMeshComps' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CopyIndex) == 0x000060, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CopyIndex' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, Nowindex) == 0x000064, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::Nowindex' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, LoopLastIndex) == 0x000068, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::LoopLastIndex' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, ColorValue) == 0x00006C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::ColorValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, Temp_int_Loop_Num_Variable) == 0x00007C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, Temp_int_Variable) == 0x000084, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000089, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CallFunc_IsValid_ReturnValue_2) == 0x000091, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CallFunc_Multiply_IntInt_ReturnValue) == 0x000098, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CallFunc_MakeColor_ReturnValue) == 0x0000A4, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B8, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x0000BC, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000C0, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000C4, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000D0, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0000D1, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CallFunc_CInterpTo_ReturnValue) == 0x0000D4, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CallFunc_CInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy, CallFunc_Array_Get_Item_1) == 0x0000E8, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASCopy::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.SetMaterialParameterHologramSASStealth
// 0x01C0 (0x01C0 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth final
{
public:
	struct FLinearColor                           SettingValue;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CharacterMeshes;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 WeaponMeshes;                                      // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FMaterialSwitchCache                   InOutStealthSwitch;                                // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          InOutNowStealth;                                   // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39AD[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 AttachmentMeshes;                                  // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NowSteatlh;                                        // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39AE[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         SkelMeshComp;                                      // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 ParameterValues;                                   // 0x0070(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           ParameterNames;                                    // 0x0080(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39AF[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39B0[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39B1[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39B2[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39B3[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39B4[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SwitchMaterialExclude_LayerID;            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B5[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x0120(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_4;                      // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39B6[0x2];                                     // 0x0136(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SwitchMaterialExclude_LayerID_1;          // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_2;                          // 0x0140(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39B7[0x3];                                     // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SwitchMaterialExclude_LayerID_2;          // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RestoreSwitchMaterial_ReturnValue;        // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39B8[0x3];                                     // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_5;                      // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39B9[0x2];                                     // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39BA[0x3];                                     // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array_3;                          // 0x0170(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39BB[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakColor_R;                             // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaterialStealthParam_StealthRate;      // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaterialStealthParam_BaseMatVanish;    // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMaterialStealthParam_IsStealthMat;     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39BC[0x3];                                     // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array_4;                          // 0x01A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth) == 0x0001C0, "Wrong size on BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, SettingValue) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::SettingValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CharacterMeshes) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CharacterMeshes' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, WeaponMeshes) == 0x000020, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::WeaponMeshes' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, InOutStealthSwitch) == 0x000030, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::InOutStealthSwitch' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, InOutNowStealth) == 0x000040, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::InOutNowStealth' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, AttachmentMeshes) == 0x000048, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::AttachmentMeshes' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, __WorldContext) == 0x000058, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, NowSteatlh) == 0x000060, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::NowSteatlh' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, SkelMeshComp) == 0x000068, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, ParameterValues) == 0x000070, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::ParameterValues' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, ParameterNames) == 0x000080, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::ParameterNames' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, Temp_int_Loop_Counter_Variable) == 0x000094, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, Temp_int_Loop_Counter_Variable_1) == 0x00009C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, Temp_int_Array_Index_Variable_1) == 0x0000A4, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, Temp_int_Loop_Num_Variable) == 0x0000A8, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, Temp_int_Loop_Num_Variable_1) == 0x0000AC, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, Temp_int_Array_Index_Variable_2) == 0x0000B0, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, Temp_int_Array_Index_Variable_3) == 0x0000B8, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, Temp_int_Loop_Counter_Variable_2) == 0x0000BC, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C0, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, Temp_int_Array_Index_Variable_4) == 0x0000C4, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, Temp_int_Loop_Num_Variable_2) == 0x0000C8, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000CC, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, Temp_int_Loop_Counter_Variable_3) == 0x0000D0, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000D4, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000D8, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, Temp_int_Loop_Counter_Variable_4) == 0x0000DC, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000E0, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, Temp_int_Array_Index_Variable_5) == 0x0000E4, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, Temp_int_Loop_Num_Variable_3) == 0x0000E8, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000EC, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_IsValid_ReturnValue) == 0x0000F4, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Array_Length_ReturnValue_1) == 0x0000F8, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_IsValid_ReturnValue_1) == 0x0000FC, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, K2Node_MakeArray_Array) == 0x000100, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, Temp_int_Loop_Counter_Variable_5) == 0x000110, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_SwitchMaterialExclude_LayerID) == 0x000114, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_SwitchMaterialExclude_LayerID' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Add_IntInt_ReturnValue_5) == 0x000118, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, K2Node_MakeArray_Array_1) == 0x000120, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, Temp_int_Loop_Num_Variable_4) == 0x000130, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::Temp_int_Loop_Num_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Less_IntInt_ReturnValue_4) == 0x000134, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_IsValid_ReturnValue_2) == 0x000135, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_SwitchMaterialExclude_LayerID_1) == 0x000138, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_SwitchMaterialExclude_LayerID_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Array_Length_ReturnValue_2) == 0x00013C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, K2Node_MakeArray_Array_2) == 0x000140, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Array_Length_ReturnValue_3) == 0x000150, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_IsValid_ReturnValue_3) == 0x000154, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_SwitchMaterialExclude_LayerID_2) == 0x000158, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_SwitchMaterialExclude_LayerID_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_RestoreSwitchMaterial_ReturnValue) == 0x00015C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_RestoreSwitchMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, Temp_int_Loop_Num_Variable_5) == 0x000160, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::Temp_int_Loop_Num_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Less_IntInt_ReturnValue_5) == 0x000164, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000165, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Array_Length_ReturnValue_4) == 0x000168, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_IsValid_ReturnValue_4) == 0x00016C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, K2Node_MakeArray_Array_3) == 0x000170, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Array_Length_ReturnValue_5) == 0x000180, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_IsValid_ReturnValue_5) == 0x000184, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_BreakColor_R) == 0x000188, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_BreakColor_G) == 0x00018C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_BreakColor_B) == 0x000190, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_BreakColor_A) == 0x000194, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_GetMaterialStealthParam_StealthRate) == 0x000198, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_GetMaterialStealthParam_StealthRate' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_GetMaterialStealthParam_BaseMatVanish) == 0x00019C, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_GetMaterialStealthParam_BaseMatVanish' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_GetMaterialStealthParam_IsStealthMat) == 0x0001A0, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_GetMaterialStealthParam_IsStealthMat' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001A4, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, K2Node_MakeArray_Array_4) == 0x0001A8, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0001B8, "Member 'BPFL_PlayerFunctionLibrary_C_SetMaterialParameterHologramSASStealth::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.GetMaterialParameterHologramDefaultLineColor
// 0x0038 (0x0038 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_GetMaterialParameterHologramDefaultLineColor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceConstant*              Material;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_GetMaterialParameterHologramDefaultLineColor) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_GetMaterialParameterHologramDefaultLineColor");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_GetMaterialParameterHologramDefaultLineColor) == 0x000038, "Wrong size on BPFL_PlayerFunctionLibrary_C_GetMaterialParameterHologramDefaultLineColor");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_GetMaterialParameterHologramDefaultLineColor, __WorldContext) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_GetMaterialParameterHologramDefaultLineColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_GetMaterialParameterHologramDefaultLineColor, Color) == 0x000008, "Member 'BPFL_PlayerFunctionLibrary_C_GetMaterialParameterHologramDefaultLineColor::Color' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_GetMaterialParameterHologramDefaultLineColor, Material) == 0x000018, "Member 'BPFL_PlayerFunctionLibrary_C_GetMaterialParameterHologramDefaultLineColor::Material' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_GetMaterialParameterHologramDefaultLineColor, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x000020, "Member 'BPFL_PlayerFunctionLibrary_C_GetMaterialParameterHologramDefaultLineColor::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_GetMaterialParameterHologramDefaultLineColor, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BPFL_PlayerFunctionLibrary_C_GetMaterialParameterHologramDefaultLineColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.ConvertEnumBPtoCPP_PlayerAIBattleThinkType
// 0x0048 (0x0048 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType final
{
public:
	EPlayerAIBattleThinkType                      BPEnum;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   CPPEnum;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_4;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_5;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_6;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_7;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_8;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_9;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_10;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_11;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_12;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_13;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_14;                             // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_15;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_16;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_17;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_18;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_19;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_20;                             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_21;                             // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_22;                             // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_23;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_24;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_25;                             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_26;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_27;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_28;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_29;                             // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_30;                             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_31;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_32;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_33;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_34;                             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_35;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_36;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_37;                             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_38;                             // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_39;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_40;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_41;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_42;                             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_43;                             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_44;                             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_45;                             // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_46;                             // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_47;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_48;                             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_49;                             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable_50;                             // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   K2Node_Select_Default;                             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType) == 0x000048, "Wrong size on BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, BPEnum) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::BPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, __WorldContext) == 0x000008, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, CPPEnum) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::CPPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable) == 0x000011, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_1) == 0x000012, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_2) == 0x000013, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_3) == 0x000014, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_4) == 0x000015, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_5) == 0x000016, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_6) == 0x000017, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_7) == 0x000018, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_8) == 0x000019, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_9) == 0x00001A, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_10) == 0x00001B, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_11) == 0x00001C, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_12) == 0x00001D, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_13) == 0x00001E, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_14) == 0x00001F, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_15) == 0x000020, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_16) == 0x000021, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_17) == 0x000022, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_18) == 0x000023, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_19) == 0x000024, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_20) == 0x000025, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_21) == 0x000026, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_22) == 0x000027, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_23) == 0x000028, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_24) == 0x000029, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_25) == 0x00002A, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_26) == 0x00002B, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_27) == 0x00002C, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_28) == 0x00002D, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_29) == 0x00002E, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_30) == 0x00002F, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_31) == 0x000030, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_32) == 0x000031, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_33) == 0x000032, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_34) == 0x000033, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_35) == 0x000034, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_36) == 0x000035, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_37) == 0x000036, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_37' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_38) == 0x000037, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_38' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_39) == 0x000038, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_39' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_40) == 0x000039, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_40' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_41) == 0x00003A, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_41' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_42) == 0x00003B, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_42' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_43) == 0x00003C, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_43' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_44) == 0x00003D, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_44' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_45) == 0x00003E, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_45' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_46) == 0x00003F, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_46' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_47) == 0x000040, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_47' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_48) == 0x000041, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_48' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_49) == 0x000042, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_49' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, Temp_byte_Variable_50) == 0x000043, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::Temp_byte_Variable_50' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType, K2Node_Select_Default) == 0x000044, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkType::K2Node_Select_Default' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.ConvertEnumCPPtoBP_PlayerAIBattleThinkType
// 0x0048 (0x0048 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType final
{
public:
	EPlayerAIBattleThinkTypeCPP                   CPPEnum;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      BPEnum;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTypeCPP                   Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_4;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_5;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_6;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_7;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_8;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_9;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_10;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_11;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_12;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_13;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_14;                             // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_15;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_16;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_17;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_18;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_19;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_20;                             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_21;                             // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_22;                             // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_23;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_24;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_25;                             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_26;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_27;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_28;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_29;                             // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_30;                             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_31;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_32;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_33;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_34;                             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_35;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_36;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_37;                             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_38;                             // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_39;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_40;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_41;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_42;                             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_43;                             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_44;                             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_45;                             // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_46;                             // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_47;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_48;                             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_49;                             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      Temp_byte_Variable_50;                             // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      K2Node_Select_Default;                             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType) == 0x000048, "Wrong size on BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, CPPEnum) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::CPPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, __WorldContext) == 0x000008, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, BPEnum) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::BPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable) == 0x000011, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_1) == 0x000012, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_2) == 0x000013, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_3) == 0x000014, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_4) == 0x000015, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_5) == 0x000016, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_6) == 0x000017, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_7) == 0x000018, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_8) == 0x000019, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_9) == 0x00001A, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_10) == 0x00001B, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_11) == 0x00001C, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_12) == 0x00001D, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_13) == 0x00001E, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_14) == 0x00001F, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_15) == 0x000020, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_16) == 0x000021, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_17) == 0x000022, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_18) == 0x000023, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_19) == 0x000024, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_20) == 0x000025, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_21) == 0x000026, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_22) == 0x000027, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_23) == 0x000028, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_24) == 0x000029, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_25) == 0x00002A, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_26) == 0x00002B, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_27) == 0x00002C, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_28) == 0x00002D, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_29) == 0x00002E, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_30) == 0x00002F, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_31) == 0x000030, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_32) == 0x000031, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_33) == 0x000032, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_34) == 0x000033, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_35) == 0x000034, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_36) == 0x000035, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_37) == 0x000036, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_37' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_38) == 0x000037, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_38' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_39) == 0x000038, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_39' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_40) == 0x000039, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_40' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_41) == 0x00003A, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_41' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_42) == 0x00003B, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_42' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_43) == 0x00003C, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_43' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_44) == 0x00003D, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_44' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_45) == 0x00003E, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_45' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_46) == 0x00003F, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_46' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_47) == 0x000040, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_47' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_48) == 0x000041, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_48' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_49) == 0x000042, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_49' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, Temp_byte_Variable_50) == 0x000043, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::Temp_byte_Variable_50' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType, K2Node_Select_Default) == 0x000044, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkType::K2Node_Select_Default' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.ConvertEnumBPtoCPP_PlayerAIBattleThinkParam
// 0x0020 (0x0020 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam final
{
public:
	EPlayerAIBattleThinkParam                     BPEnum;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkParamCPP                  CPPEnum;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkParam                     Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkParamCPP                  Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkParamCPP                  Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkParamCPP                  Temp_byte_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkParamCPP                  Temp_byte_Variable_4;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkParamCPP                  Temp_byte_Variable_5;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkParamCPP                  Temp_byte_Variable_6;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkParamCPP                  K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam) == 0x000020, "Wrong size on BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam, BPEnum) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam::BPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam, __WorldContext) == 0x000008, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam, CPPEnum) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam::CPPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam, Temp_byte_Variable) == 0x000011, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam, Temp_byte_Variable_1) == 0x000012, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam, Temp_byte_Variable_2) == 0x000013, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam, Temp_byte_Variable_3) == 0x000014, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam, Temp_byte_Variable_4) == 0x000015, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam, Temp_byte_Variable_5) == 0x000016, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam, Temp_byte_Variable_6) == 0x000017, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam, K2Node_Select_Default) == 0x000018, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkParam::K2Node_Select_Default' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.ConvertEnumCPPtoBP_PlayerAIBattleThinkParam
// 0x0020 (0x0020 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam final
{
public:
	EPlayerAIBattleThinkParamCPP                  CPPEnum;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkParam                     BPEnum;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkParamCPP                  Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkParam                     Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkParam                     Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkParam                     Temp_byte_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkParam                     Temp_byte_Variable_4;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkParam                     Temp_byte_Variable_5;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkParam                     Temp_byte_Variable_6;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkParam                     K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam) == 0x000020, "Wrong size on BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam, CPPEnum) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam::CPPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam, __WorldContext) == 0x000008, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam, BPEnum) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam::BPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam, Temp_byte_Variable) == 0x000011, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam, Temp_byte_Variable_1) == 0x000012, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam, Temp_byte_Variable_2) == 0x000013, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam, Temp_byte_Variable_3) == 0x000014, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam, Temp_byte_Variable_4) == 0x000015, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam, Temp_byte_Variable_5) == 0x000016, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam, Temp_byte_Variable_6) == 0x000017, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam, K2Node_Select_Default) == 0x000018, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkParam::K2Node_Select_Default' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.ConvertEnumBPtoCPP_PlayerAIThinkTableType
// 0x0020 (0x0020 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType final
{
public:
	EPlayerAIThinkTableType                       BPEnum;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableTypeCPP                    CPPEnum;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableType                       Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableTypeCPP                    Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableTypeCPP                    Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableTypeCPP                    Temp_byte_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableTypeCPP                    Temp_byte_Variable_4;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableTypeCPP                    Temp_byte_Variable_5;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableTypeCPP                    Temp_byte_Variable_6;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableTypeCPP                    Temp_byte_Variable_7;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableTypeCPP                    Temp_byte_Variable_8;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableTypeCPP                    K2Node_Select_Default;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType) == 0x000020, "Wrong size on BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType, BPEnum) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType::BPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType, __WorldContext) == 0x000008, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType, CPPEnum) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType::CPPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType, Temp_byte_Variable) == 0x000011, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType, Temp_byte_Variable_1) == 0x000012, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType, Temp_byte_Variable_2) == 0x000013, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType, Temp_byte_Variable_3) == 0x000014, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType, Temp_byte_Variable_4) == 0x000015, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType, Temp_byte_Variable_5) == 0x000016, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType, Temp_byte_Variable_6) == 0x000017, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType, Temp_byte_Variable_7) == 0x000018, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType, Temp_byte_Variable_8) == 0x000019, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType, K2Node_Select_Default) == 0x00001A, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIThinkTableType::K2Node_Select_Default' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.ConvertEnumCPPtoBP_PlayerAIThinkTableType
// 0x0020 (0x0020 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType final
{
public:
	EPlayerAIThinkTableTypeCPP                    CPPEnum;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableType                       BPEnum;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableTypeCPP                    Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableType                       Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableType                       Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableType                       Temp_byte_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableType                       Temp_byte_Variable_4;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableType                       Temp_byte_Variable_5;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableType                       Temp_byte_Variable_6;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableType                       Temp_byte_Variable_7;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableType                       Temp_byte_Variable_8;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIThinkTableType                       K2Node_Select_Default;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType) == 0x000020, "Wrong size on BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType, CPPEnum) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType::CPPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType, __WorldContext) == 0x000008, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType, BPEnum) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType::BPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType, Temp_byte_Variable) == 0x000011, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType, Temp_byte_Variable_1) == 0x000012, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType, Temp_byte_Variable_2) == 0x000013, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType, Temp_byte_Variable_3) == 0x000014, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType, Temp_byte_Variable_4) == 0x000015, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType, Temp_byte_Variable_5) == 0x000016, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType, Temp_byte_Variable_6) == 0x000017, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType, Temp_byte_Variable_7) == 0x000018, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType, Temp_byte_Variable_8) == 0x000019, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType, K2Node_Select_Default) == 0x00001A, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIThinkTableType::K2Node_Select_Default' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition
// 0x0050 (0x0050 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition final
{
public:
	EPlayerAIBattleThinkTransition                BPEnum;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             CPPEnum;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_4;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_5;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_6;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_7;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_8;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_9;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_10;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_11;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_12;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_13;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_14;                             // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_15;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_16;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_17;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_18;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_19;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_20;                             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_21;                             // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_22;                             // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_23;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_24;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_25;                             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_26;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_27;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_28;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_29;                             // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_30;                             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_31;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_32;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_33;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_34;                             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_35;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_36;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_37;                             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_38;                             // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_39;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_40;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_41;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_42;                             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_43;                             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_44;                             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_45;                             // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_46;                             // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_47;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_48;                             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_49;                             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_50;                             // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_51;                             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_52;                             // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_53;                             // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_54;                             // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable_55;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             K2Node_Select_Default;                             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition) == 0x000050, "Wrong size on BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, BPEnum) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::BPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, __WorldContext) == 0x000008, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, CPPEnum) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::CPPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable) == 0x000011, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_1) == 0x000012, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_2) == 0x000013, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_3) == 0x000014, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_4) == 0x000015, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_5) == 0x000016, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_6) == 0x000017, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_7) == 0x000018, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_8) == 0x000019, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_9) == 0x00001A, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_10) == 0x00001B, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_11) == 0x00001C, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_12) == 0x00001D, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_13) == 0x00001E, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_14) == 0x00001F, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_15) == 0x000020, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_16) == 0x000021, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_17) == 0x000022, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_18) == 0x000023, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_19) == 0x000024, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_20) == 0x000025, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_21) == 0x000026, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_22) == 0x000027, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_23) == 0x000028, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_24) == 0x000029, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_25) == 0x00002A, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_26) == 0x00002B, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_27) == 0x00002C, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_28) == 0x00002D, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_29) == 0x00002E, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_30) == 0x00002F, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_31) == 0x000030, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_32) == 0x000031, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_33) == 0x000032, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_34) == 0x000033, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_35) == 0x000034, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_36) == 0x000035, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_37) == 0x000036, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_37' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_38) == 0x000037, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_38' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_39) == 0x000038, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_39' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_40) == 0x000039, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_40' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_41) == 0x00003A, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_41' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_42) == 0x00003B, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_42' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_43) == 0x00003C, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_43' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_44) == 0x00003D, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_44' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_45) == 0x00003E, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_45' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_46) == 0x00003F, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_46' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_47) == 0x000040, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_47' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_48) == 0x000041, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_48' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_49) == 0x000042, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_49' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_50) == 0x000043, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_50' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_51) == 0x000044, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_51' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_52) == 0x000045, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_52' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_53) == 0x000046, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_53' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_54) == 0x000047, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_54' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, Temp_byte_Variable_55) == 0x000048, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::Temp_byte_Variable_55' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition, K2Node_Select_Default) == 0x000049, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIBattleThinkTransition::K2Node_Select_Default' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition
// 0x0050 (0x0050 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition final
{
public:
	EPlayerAIBattleThinkTransitionCPP             CPPEnum;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                BPEnum;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransitionCPP             Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_4;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_5;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_6;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_7;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_8;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_9;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_10;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_11;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_12;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_13;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_14;                             // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_15;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_16;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_17;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_18;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_19;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_20;                             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_21;                             // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_22;                             // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_23;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_24;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_25;                             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_26;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_27;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_28;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_29;                             // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_30;                             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_31;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_32;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_33;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_34;                             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_35;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_36;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_37;                             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_38;                             // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_39;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_40;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_41;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_42;                             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_43;                             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_44;                             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_45;                             // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_46;                             // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_47;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_48;                             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_49;                             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_50;                             // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_51;                             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_52;                             // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_53;                             // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                Temp_byte_Variable_54;                             // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkTransition                K2Node_Select_Default;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition) == 0x000050, "Wrong size on BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, CPPEnum) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::CPPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, __WorldContext) == 0x000008, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, BPEnum) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::BPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable) == 0x000011, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_1) == 0x000012, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_2) == 0x000013, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_3) == 0x000014, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_4) == 0x000015, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_5) == 0x000016, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_6) == 0x000017, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_7) == 0x000018, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_8) == 0x000019, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_9) == 0x00001A, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_10) == 0x00001B, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_11) == 0x00001C, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_12) == 0x00001D, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_13) == 0x00001E, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_14) == 0x00001F, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_15) == 0x000020, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_16) == 0x000021, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_17) == 0x000022, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_18) == 0x000023, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_19) == 0x000024, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_20) == 0x000025, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_21) == 0x000026, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_22) == 0x000027, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_23) == 0x000028, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_24) == 0x000029, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_25) == 0x00002A, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_26) == 0x00002B, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_27) == 0x00002C, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_28) == 0x00002D, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_29) == 0x00002E, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_30) == 0x00002F, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_31) == 0x000030, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_32) == 0x000031, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_33) == 0x000032, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_34) == 0x000033, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_35) == 0x000034, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_36) == 0x000035, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_37) == 0x000036, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_37' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_38) == 0x000037, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_38' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_39) == 0x000038, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_39' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_40) == 0x000039, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_40' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_41) == 0x00003A, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_41' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_42) == 0x00003B, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_42' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_43) == 0x00003C, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_43' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_44) == 0x00003D, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_44' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_45) == 0x00003E, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_45' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_46) == 0x00003F, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_46' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_47) == 0x000040, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_47' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_48) == 0x000041, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_48' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_49) == 0x000042, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_49' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_50) == 0x000043, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_50' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_51) == 0x000044, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_51' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_52) == 0x000045, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_52' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_53) == 0x000046, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_53' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, Temp_byte_Variable_54) == 0x000047, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::Temp_byte_Variable_54' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition, K2Node_Select_Default) == 0x000048, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIBattleThinkTransition::K2Node_Select_Default' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.ConvertEnumBPtoCPP_PlayerAIMoveMode
// 0x0020 (0x0020 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode final
{
public:
	EPlayerAIMoveMode                             BPEnum;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveModeCPP                          CPPEnum;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveMode                             Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveModeCPP                          Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveModeCPP                          Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveModeCPP                          Temp_byte_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveModeCPP                          Temp_byte_Variable_4;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveModeCPP                          Temp_byte_Variable_5;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveModeCPP                          Temp_byte_Variable_6;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveModeCPP                          Temp_byte_Variable_7;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveModeCPP                          Temp_byte_Variable_8;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveModeCPP                          Temp_byte_Variable_9;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveModeCPP                          Temp_byte_Variable_10;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveModeCPP                          Temp_byte_Variable_11;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveModeCPP                          K2Node_Select_Default;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode) == 0x000020, "Wrong size on BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode, BPEnum) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode::BPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode, __WorldContext) == 0x000008, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode, CPPEnum) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode::CPPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode, Temp_byte_Variable) == 0x000011, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode, Temp_byte_Variable_1) == 0x000012, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode, Temp_byte_Variable_2) == 0x000013, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode, Temp_byte_Variable_3) == 0x000014, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode, Temp_byte_Variable_4) == 0x000015, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode, Temp_byte_Variable_5) == 0x000016, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode, Temp_byte_Variable_6) == 0x000017, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode, Temp_byte_Variable_7) == 0x000018, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode, Temp_byte_Variable_8) == 0x000019, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode, Temp_byte_Variable_9) == 0x00001A, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode, Temp_byte_Variable_10) == 0x00001B, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode, Temp_byte_Variable_11) == 0x00001C, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode, K2Node_Select_Default) == 0x00001D, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumBPtoCPP_PlayerAIMoveMode::K2Node_Select_Default' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.ConvertEnumCPPtoBP_PlayerAIMoveMode
// 0x0020 (0x0020 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode final
{
public:
	EPlayerAIMoveModeCPP                          CPPEnum;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveMode                             BPEnum;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveModeCPP                          Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveMode                             Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveMode                             Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveMode                             Temp_byte_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveMode                             Temp_byte_Variable_4;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveMode                             Temp_byte_Variable_5;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveMode                             Temp_byte_Variable_6;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveMode                             Temp_byte_Variable_7;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveMode                             Temp_byte_Variable_8;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveMode                             Temp_byte_Variable_9;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveMode                             Temp_byte_Variable_10;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveMode                             Temp_byte_Variable_11;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveMode                             K2Node_Select_Default;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode) == 0x000020, "Wrong size on BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode, CPPEnum) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode::CPPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode, __WorldContext) == 0x000008, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode, BPEnum) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode::BPEnum' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode, Temp_byte_Variable) == 0x000011, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode, Temp_byte_Variable_1) == 0x000012, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode, Temp_byte_Variable_2) == 0x000013, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode, Temp_byte_Variable_3) == 0x000014, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode, Temp_byte_Variable_4) == 0x000015, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode, Temp_byte_Variable_5) == 0x000016, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode, Temp_byte_Variable_6) == 0x000017, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode, Temp_byte_Variable_7) == 0x000018, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode, Temp_byte_Variable_8) == 0x000019, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode, Temp_byte_Variable_9) == 0x00001A, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode, Temp_byte_Variable_10) == 0x00001B, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode, Temp_byte_Variable_11) == 0x00001C, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode, K2Node_Select_Default) == 0x00001D, "Member 'BPFL_PlayerFunctionLibrary_C_ConvertEnumCPPtoBP_PlayerAIMoveMode::K2Node_Select_Default' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.CheckTelepoAbleTarget
// 0x0048 (0x0048 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBattleFieldEnemy;                                 // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bResult;                                           // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39C7[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattlefieldManager_C*               CallFunc_GetBattlefieldManager_BP_BattlefieldManager; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyFenceEnabled_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39C8[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGroupIDInterface_bSuccess;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39C9[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGroupIDInterface_GroupID;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGroupIDInterface_SubGroupID;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStartBattlefield_ReturnValue;           // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget) == 0x000048, "Wrong size on BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget, Target) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget::Target' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget, __WorldContext) == 0x000008, "Member 'BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget, bBattleFieldEnemy) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget::bBattleFieldEnemy' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget, bResult) == 0x000011, "Member 'BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget::bResult' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget, CallFunc_GetBattlefieldManager_BP_BattlefieldManager) == 0x000018, "Member 'BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget::CallFunc_GetBattlefieldManager_BP_BattlefieldManager' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget, CallFunc_IsAnyFenceEnabled_ReturnValue) == 0x000020, "Member 'BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget::CallFunc_IsAnyFenceEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget, K2Node_DynamicCast_AsBPI_Battle_Character_Interface) == 0x000028, "Member 'BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget::K2Node_DynamicCast_AsBPI_Battle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget, CallFunc_GetGroupIDInterface_bSuccess) == 0x000039, "Member 'BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget::CallFunc_GetGroupIDInterface_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget, CallFunc_GetGroupIDInterface_GroupID) == 0x00003C, "Member 'BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget::CallFunc_GetGroupIDInterface_GroupID' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget, CallFunc_GetGroupIDInterface_SubGroupID) == 0x000040, "Member 'BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget::CallFunc_GetGroupIDInterface_SubGroupID' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget, CallFunc_IsStartBattlefield_ReturnValue) == 0x000045, "Member 'BPFL_PlayerFunctionLibrary_C_CheckTelepoAbleTarget::CallFunc_IsStartBattlefield_ReturnValue' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.SetHologramCustomStencil
// 0x0018 (0x0018 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_SetHologramCustomStencil final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_SetHologramCustomStencil) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_SetHologramCustomStencil");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_SetHologramCustomStencil) == 0x000018, "Wrong size on BPFL_PlayerFunctionLibrary_C_SetHologramCustomStencil");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetHologramCustomStencil, Mesh) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_SetHologramCustomStencil::Mesh' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetHologramCustomStencil, __WorldContext) == 0x000008, "Member 'BPFL_PlayerFunctionLibrary_C_SetHologramCustomStencil::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_SetHologramCustomStencil, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_SetHologramCustomStencil::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPFL_PlayerFunctionLibrary.BPFL_PlayerFunctionLibrary_C.IsExistGenmaWeaponMesh
// 0x0098 (0x0098 - 0x0000)
struct BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh final
{
public:
	int32                                         WeaponId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bExist;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbExist;                                           // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39CB[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemCategoryID_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPlayerWeaponLoadData                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh) == 0x000008, "Wrong alignment on BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh");
static_assert(sizeof(BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh) == 0x000098, "Wrong size on BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh, WeaponId) == 0x000000, "Member 'BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh::WeaponId' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh, __WorldContext) == 0x000008, "Member 'BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh, bExist) == 0x000010, "Member 'BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh::bExist' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh, LbExist) == 0x000011, "Member 'BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh::LbExist' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh, CallFunc_GetItemCategoryID_ReturnValue) == 0x000014, "Member 'BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh::CallFunc_GetItemCategoryID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh, CallFunc_Conv_StringToName_ReturnValue) == 0x000028, "Member 'BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000090, "Member 'BPFL_PlayerFunctionLibrary_C_IsExistGenmaWeaponMesh::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

}

