#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_ch_Base_MoveTo

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C.ExecuteUbergraph_BTT_ch_Base_MoveTo
// 0x0148 (0x0148 - 0x0000)
struct BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E30[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController_4;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_4;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E31[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       K2Node_DynamicCast_AsRSCharacter_Base;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E32[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_3;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_3;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController_2;                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       K2Node_DynamicCast_AsRSCharacter_Base_1;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E33[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_CustomEvent_OwnerController;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_CustomEvent_Player;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerAIInterface_C> CallFunc_SetAIMoveStick_self_CastInput;            // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetAIMoveStick_bDummy;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E34[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBattling_ReturnValue;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E35[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> CallFunc_GetMovePosActor_self_CastInput;           // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetMovePosActor_MovePosActor;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRestriction_ReturnValue;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E36[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBattling_ReturnValue_1;                 // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E37[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckDistance_bResult;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDistance_bResult_1;                  // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDistanceAndHeight_bNearly;           // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDistanceAndHeight_bNearly_1;         // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x00FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_1;                           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E38[0x5];                                     // 0x0103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E39[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0124(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E3A[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0138(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo) == 0x000008, "Wrong alignment on BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo");
static_assert(sizeof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo) == 0x000148, "Wrong size on BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, EntryPoint) == 0x000000, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_Event_OwnerController) == 0x000008, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_Event_OwnerController_4) == 0x000018, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_Event_OwnerController_4' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_Event_ControlledPawn_4) == 0x000020, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_Event_ControlledPawn_4' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_DynamicCast_AsRSCharacter_Base) == 0x000030, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_DynamicCast_AsRSCharacter_Base' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_Event_OwnerController_3) == 0x000040, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_Event_OwnerController_3' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_Event_ControlledPawn_3) == 0x000048, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_Event_ControlledPawn_3' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_Event_OwnerController_2) == 0x000050, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_Event_OwnerController_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_Event_ControlledPawn_2) == 0x000058, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_DynamicCast_AsRSCharacter_Base_1) == 0x000060, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_DynamicCast_AsRSCharacter_Base_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_CustomEvent_OwnerController) == 0x000070, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_CustomEvent_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_CustomEvent_Player) == 0x000078, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, CallFunc_SetAIMoveStick_self_CastInput) == 0x000080, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::CallFunc_SetAIMoveStick_self_CastInput' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, CallFunc_SetAIMoveStick_bDummy) == 0x000090, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::CallFunc_SetAIMoveStick_bDummy' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000094, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, CallFunc_IsBattling_ReturnValue) == 0x0000A0, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::CallFunc_IsBattling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, CallFunc_GetMovePosActor_self_CastInput) == 0x0000A8, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::CallFunc_GetMovePosActor_self_CastInput' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, CallFunc_GetMovePosActor_MovePosActor) == 0x0000B8, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::CallFunc_GetMovePosActor_MovePosActor' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, CallFunc_IsRestriction_ReturnValue) == 0x0000C0, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::CallFunc_IsRestriction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000C4, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000D0, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0000DC, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, CallFunc_IsBattling_ReturnValue_1) == 0x0000E8, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::CallFunc_IsBattling_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x0000F0, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, CallFunc_CheckDistance_bResult) == 0x0000F8, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::CallFunc_CheckDistance_bResult' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, CallFunc_IsValid_ReturnValue) == 0x0000F9, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, Temp_bool_Variable) == 0x0000FA, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, CallFunc_CheckDistance_bResult_1) == 0x0000FB, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::CallFunc_CheckDistance_bResult_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, Temp_bool_Variable_1) == 0x0000FC, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, CallFunc_CheckDistanceAndHeight_bNearly) == 0x0000FD, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::CallFunc_CheckDistanceAndHeight_bNearly' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, CallFunc_CheckDistanceAndHeight_bNearly_1) == 0x0000FE, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::CallFunc_CheckDistanceAndHeight_bNearly_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_Select_Default) == 0x0000FF, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_Select_Default_1) == 0x000100, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, Temp_byte_Variable) == 0x000101, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_CustomEvent_MovementResult) == 0x000102, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_Event_OwnerController_1) == 0x000108, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_Event_ControlledPawn_1) == 0x000110, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_DynamicCast_AsRSBattle_Player) == 0x000118, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_DynamicCast_bSuccess_2) == 0x000120, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_CreateDelegate_OutputDelegate) == 0x000124, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_CustomEvent_MovementResult_1) == 0x000134, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo, K2Node_CreateDelegate_OutputDelegate_1) == 0x000138, "Member 'BTT_ch_Base_MoveTo_C_ExecuteUbergraph_BTT_ch_Base_MoveTo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C.Exit_CallFromCPP
// 0x0010 (0x0010 - 0x0000)
struct BTT_ch_Base_MoveTo_C_Exit_CallFromCPP final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_Base_MoveTo_C_Exit_CallFromCPP) == 0x000008, "Wrong alignment on BTT_ch_Base_MoveTo_C_Exit_CallFromCPP");
static_assert(sizeof(BTT_ch_Base_MoveTo_C_Exit_CallFromCPP) == 0x000010, "Wrong size on BTT_ch_Base_MoveTo_C_Exit_CallFromCPP");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Exit_CallFromCPP, OwnerController) == 0x000000, "Member 'BTT_ch_Base_MoveTo_C_Exit_CallFromCPP::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Exit_CallFromCPP, ControlledPawn) == 0x000008, "Member 'BTT_ch_Base_MoveTo_C_Exit_CallFromCPP::ControlledPawn' has a wrong offset!");

// Function BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C.SetAIMoveTo_CallFromCPP
// 0x0010 (0x0010 - 0x0000)
struct BTT_ch_Base_MoveTo_C_SetAIMoveTo_CallFromCPP final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_Base_MoveTo_C_SetAIMoveTo_CallFromCPP) == 0x000008, "Wrong alignment on BTT_ch_Base_MoveTo_C_SetAIMoveTo_CallFromCPP");
static_assert(sizeof(BTT_ch_Base_MoveTo_C_SetAIMoveTo_CallFromCPP) == 0x000010, "Wrong size on BTT_ch_Base_MoveTo_C_SetAIMoveTo_CallFromCPP");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_SetAIMoveTo_CallFromCPP, OwnerController) == 0x000000, "Member 'BTT_ch_Base_MoveTo_C_SetAIMoveTo_CallFromCPP::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_SetAIMoveTo_CallFromCPP, ControlledPawn) == 0x000008, "Member 'BTT_ch_Base_MoveTo_C_SetAIMoveTo_CallFromCPP::ControlledPawn' has a wrong offset!");

// Function BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C.SetAIMoveTo
// 0x0010 (0x0010 - 0x0000)
struct BTT_ch_Base_MoveTo_C_SetAIMoveTo final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_Base_MoveTo_C_SetAIMoveTo) == 0x000008, "Wrong alignment on BTT_ch_Base_MoveTo_C_SetAIMoveTo");
static_assert(sizeof(BTT_ch_Base_MoveTo_C_SetAIMoveTo) == 0x000010, "Wrong size on BTT_ch_Base_MoveTo_C_SetAIMoveTo");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_SetAIMoveTo, OwnerController) == 0x000000, "Member 'BTT_ch_Base_MoveTo_C_SetAIMoveTo::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_SetAIMoveTo, Player) == 0x000008, "Member 'BTT_ch_Base_MoveTo_C_SetAIMoveTo::Player' has a wrong offset!");

// Function BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_ch_Base_MoveTo_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_Base_MoveTo_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_ch_Base_MoveTo_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_ch_Base_MoveTo_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_ch_Base_MoveTo_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_ch_Base_MoveTo_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_ch_Base_MoveTo_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_ch_Base_MoveTo_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_Base_MoveTo_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTT_ch_Base_MoveTo_C_ReceiveAbortAI");
static_assert(sizeof(BTT_ch_Base_MoveTo_C_ReceiveAbortAI) == 0x000010, "Wrong size on BTT_ch_Base_MoveTo_C_ReceiveAbortAI");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTT_ch_Base_MoveTo_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTT_ch_Base_MoveTo_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTT_ch_Base_MoveTo_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_Base_MoveTo_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTT_ch_Base_MoveTo_C_ReceiveTickAI");
static_assert(sizeof(BTT_ch_Base_MoveTo_C_ReceiveTickAI) == 0x000018, "Wrong size on BTT_ch_Base_MoveTo_C_ReceiveTickAI");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTT_ch_Base_MoveTo_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTT_ch_Base_MoveTo_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTT_ch_Base_MoveTo_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C.OnSuccess_6FF7E653409D8C7BD2E703A76336C01D
// 0x0001 (0x0001 - 0x0000)
struct BTT_ch_Base_MoveTo_C_OnSuccess_6FF7E653409D8C7BD2E703A76336C01D final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_Base_MoveTo_C_OnSuccess_6FF7E653409D8C7BD2E703A76336C01D) == 0x000001, "Wrong alignment on BTT_ch_Base_MoveTo_C_OnSuccess_6FF7E653409D8C7BD2E703A76336C01D");
static_assert(sizeof(BTT_ch_Base_MoveTo_C_OnSuccess_6FF7E653409D8C7BD2E703A76336C01D) == 0x000001, "Wrong size on BTT_ch_Base_MoveTo_C_OnSuccess_6FF7E653409D8C7BD2E703A76336C01D");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_OnSuccess_6FF7E653409D8C7BD2E703A76336C01D, MovementResult) == 0x000000, "Member 'BTT_ch_Base_MoveTo_C_OnSuccess_6FF7E653409D8C7BD2E703A76336C01D::MovementResult' has a wrong offset!");

// Function BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C.OnFail_6FF7E653409D8C7BD2E703A76336C01D
// 0x0001 (0x0001 - 0x0000)
struct BTT_ch_Base_MoveTo_C_OnFail_6FF7E653409D8C7BD2E703A76336C01D final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_Base_MoveTo_C_OnFail_6FF7E653409D8C7BD2E703A76336C01D) == 0x000001, "Wrong alignment on BTT_ch_Base_MoveTo_C_OnFail_6FF7E653409D8C7BD2E703A76336C01D");
static_assert(sizeof(BTT_ch_Base_MoveTo_C_OnFail_6FF7E653409D8C7BD2E703A76336C01D) == 0x000001, "Wrong size on BTT_ch_Base_MoveTo_C_OnFail_6FF7E653409D8C7BD2E703A76336C01D");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_OnFail_6FF7E653409D8C7BD2E703A76336C01D, MovementResult) == 0x000000, "Member 'BTT_ch_Base_MoveTo_C_OnFail_6FF7E653409D8C7BD2E703A76336C01D::MovementResult' has a wrong offset!");

// Function BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C.Exit
// 0x0080 (0x0080 - 0x0000)
struct BTT_ch_Base_MoveTo_C_Exit final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface;       // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E3B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_1;     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetMoveStickBack_bDummy;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetAIMoveStick_bDummy;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E3C[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICommonAIInterface_C>  K2Node_DynamicCast_AsCommon_AIInterface;           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E3D[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_2;     // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RestoreMaxSpeed_Result;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEnableInputStick_Dummy;                // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E3E[0x5];                                     // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_ch_Base_MoveTo_C_Exit) == 0x000008, "Wrong alignment on BTT_ch_Base_MoveTo_C_Exit");
static_assert(sizeof(BTT_ch_Base_MoveTo_C_Exit) == 0x000080, "Wrong size on BTT_ch_Base_MoveTo_C_Exit");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Exit, OwnerController) == 0x000000, "Member 'BTT_ch_Base_MoveTo_C_Exit::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Exit, ControlledPawn) == 0x000008, "Member 'BTT_ch_Base_MoveTo_C_Exit::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Exit, K2Node_DynamicCast_AsBPI_Player_AIInterface) == 0x000010, "Member 'BTT_ch_Base_MoveTo_C_Exit::K2Node_DynamicCast_AsBPI_Player_AIInterface' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Exit, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTT_ch_Base_MoveTo_C_Exit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Exit, K2Node_DynamicCast_AsBPI_Player_AIInterface_1) == 0x000028, "Member 'BTT_ch_Base_MoveTo_C_Exit::K2Node_DynamicCast_AsBPI_Player_AIInterface_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Exit, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BTT_ch_Base_MoveTo_C_Exit::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Exit, CallFunc_SetMoveStickBack_bDummy) == 0x000039, "Member 'BTT_ch_Base_MoveTo_C_Exit::CallFunc_SetMoveStickBack_bDummy' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Exit, CallFunc_SetAIMoveStick_bDummy) == 0x00003A, "Member 'BTT_ch_Base_MoveTo_C_Exit::CallFunc_SetAIMoveStick_bDummy' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Exit, K2Node_DynamicCast_AsCommon_AIInterface) == 0x000040, "Member 'BTT_ch_Base_MoveTo_C_Exit::K2Node_DynamicCast_AsCommon_AIInterface' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Exit, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'BTT_ch_Base_MoveTo_C_Exit::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Exit, K2Node_DynamicCast_AsBPI_Player_AIInterface_2) == 0x000058, "Member 'BTT_ch_Base_MoveTo_C_Exit::K2Node_DynamicCast_AsBPI_Player_AIInterface_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Exit, K2Node_DynamicCast_bSuccess_3) == 0x000068, "Member 'BTT_ch_Base_MoveTo_C_Exit::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Exit, CallFunc_RestoreMaxSpeed_Result) == 0x000069, "Member 'BTT_ch_Base_MoveTo_C_Exit::CallFunc_RestoreMaxSpeed_Result' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Exit, CallFunc_SetEnableInputStick_Dummy) == 0x00006A, "Member 'BTT_ch_Base_MoveTo_C_Exit::CallFunc_SetEnableInputStick_Dummy' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Exit, K2Node_DynamicCast_AsRSBattle_Player) == 0x000070, "Member 'BTT_ch_Base_MoveTo_C_Exit::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Exit, K2Node_DynamicCast_bSuccess_4) == 0x000078, "Member 'BTT_ch_Base_MoveTo_C_Exit::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");

// Function BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C.TickMove
// 0x0090 (0x0090 - 0x0000)
struct BTT_ch_Base_MoveTo_C_TickMove final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      LPlayer;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E3F[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E40[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerAIInterface_C> CallFunc_SetMoveStickBack_self_CastInput;          // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetMoveStickBack_bDummy;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue_1;                     // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue_1;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue_2;                     // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckMoveDistance_IsEnd_bEnd;             // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Check_Stick_Move_End_bEnd;                // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableActionIdleWalkRun_bEnable;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableActionIdleWalkRun_bEnable_1;      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E41[0x5];                                     // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E42[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface;       // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetAIMoveStick_bDummy;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue_3;                     // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue_2;                   // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E43[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_1;     // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEnableInputStick_Dummy;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_ch_Base_MoveTo_C_TickMove) == 0x000008, "Wrong alignment on BTT_ch_Base_MoveTo_C_TickMove");
static_assert(sizeof(BTT_ch_Base_MoveTo_C_TickMove) == 0x000090, "Wrong size on BTT_ch_Base_MoveTo_C_TickMove");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, OwnerController) == 0x000000, "Member 'BTT_ch_Base_MoveTo_C_TickMove::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, ControlledPawn) == 0x000008, "Member 'BTT_ch_Base_MoveTo_C_TickMove::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, LPlayer) == 0x000010, "Member 'BTT_ch_Base_MoveTo_C_TickMove::LPlayer' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_IsEnable_ReturnValue) == 0x00001C, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_GetRate_ReturnValue) == 0x000020, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_IsOver_ReturnValue) == 0x000024, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000028, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_SetMoveStickBack_self_CastInput) == 0x000030, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_SetMoveStickBack_self_CastInput' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_SetMoveStickBack_bDummy) == 0x000040, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_SetMoveStickBack_bDummy' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_IsOver_ReturnValue_1) == 0x000041, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_IsOver_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_IsEnable_ReturnValue_1) == 0x000042, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_IsEnable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_WasRecentlyRendered_ReturnValue) == 0x000043, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_Not_PreBool_ReturnValue) == 0x000044, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_IsOver_ReturnValue_2) == 0x000045, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_IsOver_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_CheckMoveDistance_IsEnd_bEnd) == 0x000046, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_CheckMoveDistance_IsEnd_bEnd' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_Check_Stick_Move_End_bEnd) == 0x000047, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_Check_Stick_Move_End_bEnd' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_IsEnableActionIdleWalkRun_bEnable) == 0x000048, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_IsEnableActionIdleWalkRun_bEnable' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_Not_PreBool_ReturnValue_1) == 0x000049, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_IsEnableActionIdleWalkRun_bEnable_1) == 0x00004A, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_IsEnableActionIdleWalkRun_bEnable_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, K2Node_DynamicCast_AsRSBattle_Player) == 0x000050, "Member 'BTT_ch_Base_MoveTo_C_TickMove::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BTT_ch_Base_MoveTo_C_TickMove::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, K2Node_DynamicCast_AsBPI_Player_AIInterface) == 0x000060, "Member 'BTT_ch_Base_MoveTo_C_TickMove::K2Node_DynamicCast_AsBPI_Player_AIInterface' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BTT_ch_Base_MoveTo_C_TickMove::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_SetAIMoveStick_bDummy) == 0x000071, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_SetAIMoveStick_bDummy' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_IsOver_ReturnValue_3) == 0x000072, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_IsOver_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_IsEnable_ReturnValue_2) == 0x000073, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_IsEnable_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, K2Node_DynamicCast_AsBPI_Player_AIInterface_1) == 0x000078, "Member 'BTT_ch_Base_MoveTo_C_TickMove::K2Node_DynamicCast_AsBPI_Player_AIInterface_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'BTT_ch_Base_MoveTo_C_TickMove::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, CallFunc_SetEnableInputStick_Dummy) == 0x000089, "Member 'BTT_ch_Base_MoveTo_C_TickMove::CallFunc_SetEnableInputStick_Dummy' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_TickMove, K2Node_SwitchInteger_CmpSuccess) == 0x00008A, "Member 'BTT_ch_Base_MoveTo_C_TickMove::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C.CheckWall
// 0x0100 (0x0100 - 0x0000)
struct BTT_ch_Base_MoveTo_C_CheckWall final
{
public:
	class ARSBattlePlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIMoveWallCPP                          LPrevWallTypeCPP;                                  // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E44[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LGoalLocation;                                     // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E45[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStagnation_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E46[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStagnation_ReturnValue_1;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E47[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStagnation_ReturnValue_2;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E48[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue_1;                   // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E49[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> CallFunc_SetMoveStickBack_self_CastInput;          // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetMoveStickBack_bDummy;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E4A[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E4B[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface;       // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E4C[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMovePosActor_MovePosActor;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRestrictStagnationCheck_ReturnValue;    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerAIMoveWallCPP                          CallFunc_CheckMoveWall_Wall;                       // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E4D[0x2];                                     // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CheckMoveWall_Location;                   // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E4E[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeXYSquared_ReturnValue;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E4F[0x2];                                     // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_Base_MoveTo_C_CheckWall) == 0x000008, "Wrong alignment on BTT_ch_Base_MoveTo_C_CheckWall");
static_assert(sizeof(BTT_ch_Base_MoveTo_C_CheckWall) == 0x000100, "Wrong size on BTT_ch_Base_MoveTo_C_CheckWall");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, Player) == 0x000000, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::Player' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, LPrevWallTypeCPP) == 0x000008, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::LPrevWallTypeCPP' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, LGoalLocation) == 0x00000C, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::LGoalLocation' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000019, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_IsStagnation_ReturnValue) == 0x000028, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_IsStagnation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00002C, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_IsStagnation_ReturnValue_1) == 0x000038, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_IsStagnation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x00003C, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_IsEnable_ReturnValue) == 0x000048, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_IsStagnation_ReturnValue_2) == 0x000049, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_IsStagnation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000050, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000051, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, K2Node_SwitchEnum_CmpSuccess) == 0x000052, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_IsEnable_ReturnValue_1) == 0x000053, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_IsEnable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_SetMoveStickBack_self_CastInput) == 0x000058, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_SetMoveStickBack_self_CastInput' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_SetMoveStickBack_bDummy) == 0x000068, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_SetMoveStickBack_bDummy' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x00006C, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000078, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_BreakVector_X) == 0x000084, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_BreakVector_Y) == 0x000088, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_BreakVector_Z) == 0x00008C, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_MakeVector_ReturnValue) == 0x000090, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, K2Node_DynamicCast_AsBPI_Player_AIInterface) == 0x0000A0, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::K2Node_DynamicCast_AsBPI_Player_AIInterface' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_VSizeSquared_ReturnValue) == 0x0000B4, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_GetMovePosActor_MovePosActor) == 0x0000B8, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_GetMovePosActor_MovePosActor' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_IsRestrictStagnationCheck_ReturnValue) == 0x0000C0, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_IsRestrictStagnationCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_CheckMoveWall_Wall) == 0x0000C1, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_CheckMoveWall_Wall' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_CheckMoveWall_Location) == 0x0000C4, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_CheckMoveWall_Location' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_Not_PreBool_ReturnValue) == 0x0000D0, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000D4, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000E0, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_VSizeXYSquared_ReturnValue) == 0x0000EC, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_VSizeXYSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_IsValid_ReturnValue_1) == 0x0000F0, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000F1, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckWall, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0000F4, "Member 'BTT_ch_Base_MoveTo_C_CheckWall::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");

// Function BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C.CheckMovedDistance_Tick
// 0x0098 (0x0098 - 0x0000)
struct BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick final
{
public:
	class ARSCharacterBase*                       Param_OwnerCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LSpeedPerIntervalTime;                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LOwnerLocation;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E50[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxSpeed_ReturnValue;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRestrictStagnationCheck_ReturnValue;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E51[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxSpeedScale_Scale;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E52[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2DSquared_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2DSquared_ReturnValue_1;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2DSquared_ReturnValue_2;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E53[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E54[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E55[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E56[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E57[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick) == 0x000008, "Wrong alignment on BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick");
static_assert(sizeof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick) == 0x000098, "Wrong size on BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, Param_OwnerCharacter) == 0x000000, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::Param_OwnerCharacter' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, DeltaSeconds) == 0x000008, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, LSpeedPerIntervalTime) == 0x00000C, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::LSpeedPerIntervalTime' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, LOwnerLocation) == 0x000010, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::LOwnerLocation' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, K2Node_DynamicCast_AsRSBattle_Player) == 0x000018, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_GetMaxSpeed_ReturnValue) == 0x000024, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_GetMaxSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_IsRestrictStagnationCheck_ReturnValue) == 0x000028, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_IsRestrictStagnationCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_GetMaxSpeedScale_Scale) == 0x00002C, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_GetMaxSpeedScale_Scale' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000044, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_VSize2DSquared_ReturnValue) == 0x00004C, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_VSize2DSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000050, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_VSize2DSquared_ReturnValue_1) == 0x000054, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_VSize2DSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_VSize2DSquared_ReturnValue_2) == 0x000058, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_VSize2DSquared_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00005C, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000060, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000064, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000068, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000070, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_Add_FloatFloat_ReturnValue) == 0x000074, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000078, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00007C, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000080, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x000084, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000088, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x00008C, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000090, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_BooleanAND_ReturnValue) == 0x000091, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000094, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Tick::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C.CheckMovedDistance_Initialize
// 0x0020 (0x0020 - 0x0000)
struct BTT_ch_Base_MoveTo_C_CheckMovedDistance_Initialize final
{
public:
	class ARSCharacterBase*                       Param_OwnerCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Initialize) == 0x000008, "Wrong alignment on BTT_ch_Base_MoveTo_C_CheckMovedDistance_Initialize");
static_assert(sizeof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Initialize) == 0x000020, "Wrong size on BTT_ch_Base_MoveTo_C_CheckMovedDistance_Initialize");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Initialize, Param_OwnerCharacter) == 0x000000, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Initialize::Param_OwnerCharacter' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Initialize, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Initialize::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMovedDistance_Initialize, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000014, "Member 'BTT_ch_Base_MoveTo_C_CheckMovedDistance_Initialize::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");

// Function BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C.CheckMoveDistance_IsEnd
// 0x0080 (0x0080 - 0x0000)
struct BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd final
{
public:
	class ARSCharacterBase*                       Param_OwnerCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnd;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E58[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E59[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRestrictStagnationCheck_ReturnValue;    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E5A[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerCollisionCheckResult            CallFunc_GetAsyncResult_ReturnValue;               // 0x0030(0x0040)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E5B[0x1];                                     // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2DSquared_ReturnValue;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckMoveDistance_IsEndCPP_ReturnValue;   // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd) == 0x000008, "Wrong alignment on BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd");
static_assert(sizeof(BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd) == 0x000080, "Wrong size on BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd, Param_OwnerCharacter) == 0x000000, "Member 'BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd::Param_OwnerCharacter' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd, bEnd) == 0x000008, "Member 'BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd::bEnd' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd, K2Node_DynamicCast_AsRSBattle_Player) == 0x000010, "Member 'BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd, K2Node_DynamicCast_AsRSBattle_Player_1) == 0x000020, "Member 'BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd::K2Node_DynamicCast_AsRSBattle_Player_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd, CallFunc_IsRestrictStagnationCheck_ReturnValue) == 0x000029, "Member 'BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd::CallFunc_IsRestrictStagnationCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd, CallFunc_GetAsyncResult_ReturnValue) == 0x000030, "Member 'BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd::CallFunc_GetAsyncResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000071, "Member 'BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000072, "Member 'BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000074, "Member 'BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd, CallFunc_VSize2DSquared_ReturnValue) == 0x000078, "Member 'BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd::CallFunc_VSize2DSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd, CallFunc_Less_FloatFloat_ReturnValue) == 0x00007C, "Member 'BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd, CallFunc_CheckMoveDistance_IsEndCPP_ReturnValue) == 0x00007D, "Member 'BTT_ch_Base_MoveTo_C_CheckMoveDistance_IsEnd::CallFunc_CheckMoveDistance_IsEndCPP_ReturnValue' has a wrong offset!");

// Function BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C.ForceWarp
// 0x00C0 (0x00C0 - 0x0000)
struct BTT_ch_Base_MoveTo_C_ForceWarp final
{
public:
	class ARSBattlePlayer_C*                      Param_OwnerCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E5C[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E5D[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMovePosActor_MovePosActor;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E5E[0x8];                                     // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_ch_Base_MoveTo_C_ForceWarp) == 0x000010, "Wrong alignment on BTT_ch_Base_MoveTo_C_ForceWarp");
static_assert(sizeof(BTT_ch_Base_MoveTo_C_ForceWarp) == 0x0000C0, "Wrong size on BTT_ch_Base_MoveTo_C_ForceWarp");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ForceWarp, Param_OwnerCharacter) == 0x000000, "Member 'BTT_ch_Base_MoveTo_C_ForceWarp::Param_OwnerCharacter' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ForceWarp, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BTT_ch_Base_MoveTo_C_ForceWarp::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ForceWarp, CallFunc_BreakTransform_Location) == 0x000040, "Member 'BTT_ch_Base_MoveTo_C_ForceWarp::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ForceWarp, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'BTT_ch_Base_MoveTo_C_ForceWarp::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ForceWarp, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'BTT_ch_Base_MoveTo_C_ForceWarp::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ForceWarp, CallFunc_GetMovePosActor_MovePosActor) == 0x000068, "Member 'BTT_ch_Base_MoveTo_C_ForceWarp::CallFunc_GetMovePosActor_MovePosActor' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ForceWarp, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'BTT_ch_Base_MoveTo_C_ForceWarp::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ForceWarp, CallFunc_Add_VectorVector_ReturnValue) == 0x00007C, "Member 'BTT_ch_Base_MoveTo_C_ForceWarp::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_ForceWarp, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'BTT_ch_Base_MoveTo_C_ForceWarp::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C.StopAIMoveTo
// 0x0018 (0x0018 - 0x0000)
struct BTT_ch_Base_MoveTo_C_StopAIMoveTo final
{
public:
	class ARSCharacterBase*                       Param_OwnerCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRechargeResetAIMoveTimer;                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E5F[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_Base_MoveTo_C_StopAIMoveTo) == 0x000008, "Wrong alignment on BTT_ch_Base_MoveTo_C_StopAIMoveTo");
static_assert(sizeof(BTT_ch_Base_MoveTo_C_StopAIMoveTo) == 0x000018, "Wrong size on BTT_ch_Base_MoveTo_C_StopAIMoveTo");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_StopAIMoveTo, Param_OwnerCharacter) == 0x000000, "Member 'BTT_ch_Base_MoveTo_C_StopAIMoveTo::Param_OwnerCharacter' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_StopAIMoveTo, bRechargeResetAIMoveTimer) == 0x000008, "Member 'BTT_ch_Base_MoveTo_C_StopAIMoveTo::bRechargeResetAIMoveTimer' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_StopAIMoveTo, CallFunc_IsEnable_ReturnValue) == 0x000009, "Member 'BTT_ch_Base_MoveTo_C_StopAIMoveTo::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_StopAIMoveTo, CallFunc_GetAIController_ReturnValue) == 0x000010, "Member 'BTT_ch_Base_MoveTo_C_StopAIMoveTo::CallFunc_GetAIController_ReturnValue' has a wrong offset!");

// Function BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C.Check Stick Move End
// 0x0068 (0x0068 - 0x0000)
struct BTT_ch_Base_MoveTo_C_Check_Stick_Move_End final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnd;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LEnd;                                              // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckStickMoveEndCPP_ReturnValue;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E60[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface;       // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E61[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMovePosActor_MovePosActor;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E62[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_1;     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerStatusAI_bResult;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E63[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckDistanceAndHeight_bNearly;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDistance_bResult;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_ch_Base_MoveTo_C_Check_Stick_Move_End) == 0x000008, "Wrong alignment on BTT_ch_Base_MoveTo_C_Check_Stick_Move_End");
static_assert(sizeof(BTT_ch_Base_MoveTo_C_Check_Stick_Move_End) == 0x000068, "Wrong size on BTT_ch_Base_MoveTo_C_Check_Stick_Move_End");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Check_Stick_Move_End, ControlledPawn) == 0x000000, "Member 'BTT_ch_Base_MoveTo_C_Check_Stick_Move_End::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Check_Stick_Move_End, bEnd) == 0x000008, "Member 'BTT_ch_Base_MoveTo_C_Check_Stick_Move_End::bEnd' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Check_Stick_Move_End, LEnd) == 0x000009, "Member 'BTT_ch_Base_MoveTo_C_Check_Stick_Move_End::LEnd' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Check_Stick_Move_End, CallFunc_CheckStickMoveEndCPP_ReturnValue) == 0x00000A, "Member 'BTT_ch_Base_MoveTo_C_Check_Stick_Move_End::CallFunc_CheckStickMoveEndCPP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Check_Stick_Move_End, Temp_bool_Variable) == 0x00000B, "Member 'BTT_ch_Base_MoveTo_C_Check_Stick_Move_End::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Check_Stick_Move_End, K2Node_DynamicCast_AsBPI_Player_AIInterface) == 0x000010, "Member 'BTT_ch_Base_MoveTo_C_Check_Stick_Move_End::K2Node_DynamicCast_AsBPI_Player_AIInterface' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Check_Stick_Move_End, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTT_ch_Base_MoveTo_C_Check_Stick_Move_End::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Check_Stick_Move_End, CallFunc_GetMovePosActor_MovePosActor) == 0x000028, "Member 'BTT_ch_Base_MoveTo_C_Check_Stick_Move_End::CallFunc_GetMovePosActor_MovePosActor' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Check_Stick_Move_End, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BTT_ch_Base_MoveTo_C_Check_Stick_Move_End::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Check_Stick_Move_End, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'BTT_ch_Base_MoveTo_C_Check_Stick_Move_End::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Check_Stick_Move_End, K2Node_DynamicCast_AsBPI_Player_AIInterface_1) == 0x000040, "Member 'BTT_ch_Base_MoveTo_C_Check_Stick_Move_End::K2Node_DynamicCast_AsBPI_Player_AIInterface_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Check_Stick_Move_End, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BTT_ch_Base_MoveTo_C_Check_Stick_Move_End::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Check_Stick_Move_End, CallFunc_IsPlayerStatusAI_bResult) == 0x000051, "Member 'BTT_ch_Base_MoveTo_C_Check_Stick_Move_End::CallFunc_IsPlayerStatusAI_bResult' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Check_Stick_Move_End, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000054, "Member 'BTT_ch_Base_MoveTo_C_Check_Stick_Move_End::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Check_Stick_Move_End, CallFunc_CheckDistanceAndHeight_bNearly) == 0x000060, "Member 'BTT_ch_Base_MoveTo_C_Check_Stick_Move_End::CallFunc_CheckDistanceAndHeight_bNearly' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Check_Stick_Move_End, CallFunc_CheckDistance_bResult) == 0x000061, "Member 'BTT_ch_Base_MoveTo_C_Check_Stick_Move_End::CallFunc_CheckDistance_bResult' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_Check_Stick_Move_End, K2Node_Select_Default) == 0x000062, "Member 'BTT_ch_Base_MoveTo_C_Check_Stick_Move_End::K2Node_Select_Default' has a wrong offset!");

// Function BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C.CheckDistanceAndHeight
// 0x0058 (0x0058 - 0x0000)
struct BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight final
{
public:
	struct FVector                                Location1;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location2;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceXY;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceZ;                                         // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNearly;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E64[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckDistanceXY_Z_CPP_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E65[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeXYSquared_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E66[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight) == 0x000004, "Wrong alignment on BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight");
static_assert(sizeof(BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight) == 0x000058, "Wrong size on BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight, Location1) == 0x000000, "Member 'BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight::Location1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight, Location2) == 0x00000C, "Member 'BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight::Location2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight, DistanceXY) == 0x000018, "Member 'BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight::DistanceXY' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight, DistanceZ) == 0x00001C, "Member 'BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight::DistanceZ' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight, bNearly) == 0x000020, "Member 'BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight::bNearly' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight, CallFunc_CheckDistanceXY_Z_CPP_ReturnValue) == 0x000028, "Member 'BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight::CallFunc_CheckDistanceXY_Z_CPP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight, CallFunc_VSizeXYSquared_ReturnValue) == 0x00003C, "Member 'BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight::CallFunc_VSizeXYSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight, CallFunc_BreakVector_X) == 0x000040, "Member 'BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight, CallFunc_BreakVector_Y) == 0x000044, "Member 'BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight, CallFunc_BreakVector_Z) == 0x000048, "Member 'BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00004C, "Member 'BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000050, "Member 'BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000054, "Member 'BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight, CallFunc_BooleanAND_ReturnValue) == 0x000055, "Member 'BTT_ch_Base_MoveTo_C_CheckDistanceAndHeight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

