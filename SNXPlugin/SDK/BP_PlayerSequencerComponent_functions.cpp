#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerSequencerComponent

#include "Basic.hpp"

#include "BP_PlayerSequencerComponent_classes.hpp"
#include "BP_PlayerSequencerComponent_parameters.hpp"


namespace SDK
{

// Function BP_PlayerSequencerComponent.BP_PlayerSequencerComponent_C.ExecuteUbergraph_BP_PlayerSequencerComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerSequencerComponent_C::ExecuteUbergraph_BP_PlayerSequencerComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerSequencerComponent_C", "ExecuteUbergraph_BP_PlayerSequencerComponent");

	Params::BP_PlayerSequencerComponent_C_ExecuteUbergraph_BP_PlayerSequencerComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerSequencerComponent.BP_PlayerSequencerComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_PlayerSequencerComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerSequencerComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerSequencerComponent.BP_PlayerSequencerComponent_C.Initialize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerSequencerComponent_C::Initialize(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerSequencerComponent_C", "Initialize");

	Params::BP_PlayerSequencerComponent_C_Initialize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_PlayerSequencerComponent.BP_PlayerSequencerComponent_C.Update
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerSequencerComponent_C::Update(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerSequencerComponent_C", "Update");

	Params::BP_PlayerSequencerComponent_C_Update Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_PlayerSequencerComponent.BP_PlayerSequencerComponent_C.Finalize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerSequencerComponent_C::Finalize(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerSequencerComponent_C", "Finalize");

	Params::BP_PlayerSequencerComponent_C_Finalize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_PlayerSequencerComponent.BP_PlayerSequencerComponent_C.StartSequnecer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerSequencerComponent_C::StartSequnecer(int32 Index_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerSequencerComponent_C", "StartSequnecer");

	Params::BP_PlayerSequencerComponent_C_StartSequnecer Parms{};

	Parms.Index_in = Index_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_PlayerSequencerComponent.BP_PlayerSequencerComponent_C.EndSequencer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_SequencerIndex                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerSequencerComponent_C::EndSequencer(int32 Param_SequencerIndex, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerSequencerComponent_C", "EndSequencer");

	Params::BP_PlayerSequencerComponent_C_EndSequencer Parms{};

	Parms.Param_SequencerIndex = Param_SequencerIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_PlayerSequencerComponent.BP_PlayerSequencerComponent_C.StartSequencerIntercept
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Psy_obj_actor_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerSequencerComponent_C::StartSequencerIntercept(class AActor* Psy_obj_actor_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerSequencerComponent_C", "StartSequencerIntercept");

	Params::BP_PlayerSequencerComponent_C_StartSequencerIntercept Parms{};

	Parms.Psy_obj_actor_in = Psy_obj_actor_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerSequencerComponent.BP_PlayerSequencerComponent_C.GetRootActorBindingID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FMovieSceneObjectBindingID       binding_id                                             (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerSequencerComponent_C::GetRootActorBindingID(struct FMovieSceneObjectBindingID* binding_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerSequencerComponent_C", "GetRootActorBindingID");

	Params::BP_PlayerSequencerComponent_C_GetRootActorBindingID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (binding_id != nullptr)
		*binding_id = std::move(Parms.binding_id);
}


// Function BP_PlayerSequencerComponent.BP_PlayerSequencerComponent_C.CalcFinalTransform
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       InMotaionTransform                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)

struct FTransform UBP_PlayerSequencerComponent_C::CalcFinalTransform(const struct FTransform& InMotaionTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerSequencerComponent_C", "CalcFinalTransform");

	Params::BP_PlayerSequencerComponent_C_CalcFinalTransform Parms{};

	Parms.InMotaionTransform = std::move(InMotaionTransform);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

