#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerHologram

#include "Basic.hpp"

#include "AttackCollisionInfoBP_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "ECharaExecuteNotifyKind_structs.hpp"
#include "EHologramKind_structs.hpp"
#include "Engine_structs.hpp"
#include "EBonusGhostType_structs.hpp"
#include "EBulletType_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerHologram.BP_PlayerHologram_C.DispatcherOnMontageBlendingOutCh0100__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0100__DelegateSignature final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0100__DelegateSignature) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0100__DelegateSignature");
static_assert(sizeof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0100__DelegateSignature) == 0x000010, "Wrong size on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0100__DelegateSignature");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0100__DelegateSignature, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0100__DelegateSignature::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0100__DelegateSignature, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0100__DelegateSignature::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.DispatcherOnMontageBlendingOutCh0200__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0200__DelegateSignature final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0200__DelegateSignature) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0200__DelegateSignature");
static_assert(sizeof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0200__DelegateSignature) == 0x000010, "Wrong size on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0200__DelegateSignature");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0200__DelegateSignature, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0200__DelegateSignature::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0200__DelegateSignature, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0200__DelegateSignature::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.DispatcherOnMontageBlendingOutCh0300__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0300__DelegateSignature final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0300__DelegateSignature) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0300__DelegateSignature");
static_assert(sizeof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0300__DelegateSignature) == 0x000010, "Wrong size on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0300__DelegateSignature");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0300__DelegateSignature, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0300__DelegateSignature::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0300__DelegateSignature, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0300__DelegateSignature::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.DispatcherOnMontageBlendingOutCh0400__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0400__DelegateSignature final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0400__DelegateSignature) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0400__DelegateSignature");
static_assert(sizeof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0400__DelegateSignature) == 0x000010, "Wrong size on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0400__DelegateSignature");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0400__DelegateSignature, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0400__DelegateSignature::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0400__DelegateSignature, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0400__DelegateSignature::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.DispatcherOnMontageBlendingOutCh0500__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0500__DelegateSignature final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0500__DelegateSignature) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0500__DelegateSignature");
static_assert(sizeof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0500__DelegateSignature) == 0x000010, "Wrong size on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0500__DelegateSignature");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0500__DelegateSignature, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0500__DelegateSignature::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0500__DelegateSignature, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0500__DelegateSignature::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.DispatcherOnMontageBlendingOutCh0600__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0600__DelegateSignature final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0600__DelegateSignature) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0600__DelegateSignature");
static_assert(sizeof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0600__DelegateSignature) == 0x000010, "Wrong size on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0600__DelegateSignature");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0600__DelegateSignature, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0600__DelegateSignature::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0600__DelegateSignature, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0600__DelegateSignature::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.DispatcherOnMontageBlendingOutCh0700__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0700__DelegateSignature final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0700__DelegateSignature) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0700__DelegateSignature");
static_assert(sizeof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0700__DelegateSignature) == 0x000010, "Wrong size on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0700__DelegateSignature");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0700__DelegateSignature, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0700__DelegateSignature::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0700__DelegateSignature, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0700__DelegateSignature::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.DispatcherOnMontageBlendingOutCh0800__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0800__DelegateSignature final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0800__DelegateSignature) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0800__DelegateSignature");
static_assert(sizeof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0800__DelegateSignature) == 0x000010, "Wrong size on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0800__DelegateSignature");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0800__DelegateSignature, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0800__DelegateSignature::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0800__DelegateSignature, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0800__DelegateSignature::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.DispatcherOnMontageBlendingOutCh0900__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0900__DelegateSignature final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0900__DelegateSignature) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0900__DelegateSignature");
static_assert(sizeof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0900__DelegateSignature) == 0x000010, "Wrong size on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0900__DelegateSignature");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0900__DelegateSignature, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0900__DelegateSignature::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0900__DelegateSignature, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh0900__DelegateSignature::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.DispatcherOnMontageBlendingOutCh1000__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh1000__DelegateSignature final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh1000__DelegateSignature) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh1000__DelegateSignature");
static_assert(sizeof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh1000__DelegateSignature) == 0x000010, "Wrong size on BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh1000__DelegateSignature");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh1000__DelegateSignature, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh1000__DelegateSignature::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh1000__DelegateSignature, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_DispatcherOnMontageBlendingOutCh1000__DelegateSignature::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.DispatcherHitThrowWeapon__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_PlayerHologram_C_DispatcherHitThrowWeapon__DelegateSignature final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_DispatcherHitThrowWeapon__DelegateSignature) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_DispatcherHitThrowWeapon__DelegateSignature");
static_assert(sizeof(BP_PlayerHologram_C_DispatcherHitThrowWeapon__DelegateSignature) == 0x00000C, "Wrong size on BP_PlayerHologram_C_DispatcherHitThrowWeapon__DelegateSignature");
static_assert(offsetof(BP_PlayerHologram_C_DispatcherHitThrowWeapon__DelegateSignature, HitLocation) == 0x000000, "Member 'BP_PlayerHologram_C_DispatcherHitThrowWeapon__DelegateSignature::HitLocation' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.DispatchAttackNotify__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerHologram_C_DispatchAttackNotify__DelegateSignature final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_DispatchAttackNotify__DelegateSignature) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_DispatchAttackNotify__DelegateSignature");
static_assert(sizeof(BP_PlayerHologram_C_DispatchAttackNotify__DelegateSignature) == 0x000004, "Wrong size on BP_PlayerHologram_C_DispatchAttackNotify__DelegateSignature");
static_assert(offsetof(BP_PlayerHologram_C_DispatchAttackNotify__DelegateSignature, Param) == 0x000000, "Member 'BP_PlayerHologram_C_DispatchAttackNotify__DelegateSignature::Param' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.ExecuteUbergraph_BP_PlayerHologram
// 0x0230 (0x0230 - 0x0000)
struct BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7733[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7734[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7735[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Active;                               // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7736[0x1];                                     // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Time;                                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBonusGhostType                               K2Node_Event_Type;                                 // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7737[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_AliveTime_1;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7738[0x2];                                     // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_3;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_4;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_5;            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_6;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_7;            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_8;            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_9;            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_9;                      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInterrupted_9;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7739[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_Montage_8;                      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInterrupted_8;                 // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_773A[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_Montage_7;                      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInterrupted_7;                 // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_773B[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_Montage_6;                      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInterrupted_6;                 // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_773C[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_Montage_5;                      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInterrupted_5;                 // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_773D[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_Montage_4;                      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInterrupted_4;                 // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_773E[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_Montage_3;                      // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInterrupted_3;                 // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_773F[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_Montage_2;                      // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInterrupted_2;                 // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7740[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_Montage_1;                      // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInterrupted_1;                 // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7741[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_Montage;                        // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInterrupted;                   // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7742[0x1];                                     // 0x01D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_AliveTime;                            // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_CustomEvent_Mesh;                           // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldNormalDeltaSeconds_ReturnValue;   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7743[0x2];                                     // 0x01E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7744[0x2];                                     // 0x01EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float DeltaSeconds)>           K2Node_CreateDelegate_OutputDelegate_10;           // 0x01F0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7745[0x6];                                     // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeapon_Weapon;                         // 0x0208(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7746[0x3];                                     // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_10;           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyMontagePlaying_ReturnValue;          // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram");
static_assert(sizeof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram) == 0x000230, "Wrong size on BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, EntryPoint) == 0x000000, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, Temp_int_Variable) == 0x000004, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, Temp_int_Variable_1) == 0x000008, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_Conv_IntToByte_ReturnValue) == 0x00000C, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_GetValidValue_ReturnValue) == 0x000014, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000015, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000016, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000018, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CreateDelegate_OutputDelegate_3) == 0x00004C, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CreateDelegate_OutputDelegate_4) == 0x00005C, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CreateDelegate_OutputDelegate_5) == 0x00006C, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CreateDelegate_OutputDelegate_6) == 0x00007C, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CreateDelegate_OutputDelegate_7) == 0x00008C, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CreateDelegate_OutputDelegate_8) == 0x00009C, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CreateDelegate_OutputDelegate_9) == 0x0000AC, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, Temp_bool_Has_Been_Initd_Variable) == 0x0000BC, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, Temp_int_Loop_Counter_Variable) == 0x0000C0, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C4, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, Temp_int_Loop_Num_Variable) == 0x0000CC, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, Temp_bool_Has_Been_Initd_Variable_1) == 0x0000D1, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_Event_Active) == 0x0000D2, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_Event_Active' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_Event_Time) == 0x0000D4, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_Event_Type) == 0x0000D8, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_Event_AliveTime_1) == 0x0000DC, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_Event_AliveTime_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_Event_DeltaSeconds) == 0x0000E0, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_Event_EndPlayReason) == 0x0000E4, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_SwitchEnum_CmpSuccess) == 0x0000E5, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_GetAnimInstance_ReturnValue) == 0x0000E8, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_GetAnimInstance_ReturnValue_1) == 0x0000F0, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_GetAnimInstance_ReturnValue_2) == 0x0000F8, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_GetAnimInstance_ReturnValue_3) == 0x000100, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_GetAnimInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_GetAnimInstance_ReturnValue_4) == 0x000108, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_GetAnimInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_GetAnimInstance_ReturnValue_5) == 0x000110, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_GetAnimInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_GetAnimInstance_ReturnValue_6) == 0x000118, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_GetAnimInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_GetAnimInstance_ReturnValue_7) == 0x000120, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_GetAnimInstance_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_GetAnimInstance_ReturnValue_8) == 0x000128, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_GetAnimInstance_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_GetAnimInstance_ReturnValue_9) == 0x000130, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_GetAnimInstance_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_Montage_9) == 0x000138, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_Montage_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_bInterrupted_9) == 0x000140, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_bInterrupted_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_Montage_8) == 0x000148, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_Montage_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_bInterrupted_8) == 0x000150, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_bInterrupted_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_Montage_7) == 0x000158, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_Montage_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_bInterrupted_7) == 0x000160, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_bInterrupted_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_Montage_6) == 0x000168, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_Montage_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_bInterrupted_6) == 0x000170, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_bInterrupted_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_Montage_5) == 0x000178, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_Montage_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_bInterrupted_5) == 0x000180, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_bInterrupted_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_Montage_4) == 0x000188, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_Montage_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_bInterrupted_4) == 0x000190, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_bInterrupted_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_Montage_3) == 0x000198, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_Montage_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_bInterrupted_3) == 0x0001A0, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_bInterrupted_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_Montage_2) == 0x0001A8, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_Montage_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_bInterrupted_2) == 0x0001B0, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_bInterrupted_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_Montage_1) == 0x0001B8, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_Montage_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_bInterrupted_1) == 0x0001C0, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_bInterrupted_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_Montage) == 0x0001C8, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_bInterrupted) == 0x0001D0, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_bInterrupted' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, Temp_bool_IsClosed_Variable) == 0x0001D1, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_IsValid_ReturnValue) == 0x0001D2, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_Event_AliveTime) == 0x0001D4, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_Event_AliveTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CustomEvent_Mesh) == 0x0001D8, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CustomEvent_Mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_GetWorldNormalDeltaSeconds_ReturnValue) == 0x0001E0, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_GetWorldNormalDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_IsValid_ReturnValue_1) == 0x0001E4, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, Temp_bool_IsClosed_Variable_1) == 0x0001E5, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_MakeLiteralInt_ReturnValue) == 0x0001E8, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001EC, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_IsValid_ReturnValue_2) == 0x0001ED, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, K2Node_CreateDelegate_OutputDelegate_10) == 0x0001F0, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_IsValid_ReturnValue_3) == 0x000200, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_IsValid_ReturnValue_4) == 0x000201, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_GetWeapon_Weapon) == 0x000208, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_GetWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_Array_Length_ReturnValue) == 0x000218, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_IsValid_ReturnValue_5) == 0x00021C, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_GetAnimInstance_ReturnValue_10) == 0x000220, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_GetAnimInstance_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram, CallFunc_IsAnyMontagePlaying_ReturnValue) == 0x000228, "Member 'BP_PlayerHologram_C_ExecuteUbergraph_BP_PlayerHologram::CallFunc_IsAnyMontagePlaying_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.DelayMeshTickDisable
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerHologram_C_DelayMeshTickDisable final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_DelayMeshTickDisable) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_DelayMeshTickDisable");
static_assert(sizeof(BP_PlayerHologram_C_DelayMeshTickDisable) == 0x000008, "Wrong size on BP_PlayerHologram_C_DelayMeshTickDisable");
static_assert(offsetof(BP_PlayerHologram_C_DelayMeshTickDisable, Mesh) == 0x000000, "Member 'BP_PlayerHologram_C_DelayMeshTickDisable::Mesh' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.OnGhostOneShot
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerHologram_C_OnGhostOneShot final
{
public:
	float                                         AliveTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_OnGhostOneShot) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_OnGhostOneShot");
static_assert(sizeof(BP_PlayerHologram_C_OnGhostOneShot) == 0x000004, "Wrong size on BP_PlayerHologram_C_OnGhostOneShot");
static_assert(offsetof(BP_PlayerHologram_C_OnGhostOneShot, AliveTime) == 0x000000, "Member 'BP_PlayerHologram_C_OnGhostOneShot::AliveTime' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.OnMontageBlendingOutCh1000
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_OnMontageBlendingOutCh1000 final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_OnMontageBlendingOutCh1000) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_OnMontageBlendingOutCh1000");
static_assert(sizeof(BP_PlayerHologram_C_OnMontageBlendingOutCh1000) == 0x000010, "Wrong size on BP_PlayerHologram_C_OnMontageBlendingOutCh1000");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh1000, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh1000::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh1000, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh1000::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.OnMontageBlendingOutCh0900
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_OnMontageBlendingOutCh0900 final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_OnMontageBlendingOutCh0900) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_OnMontageBlendingOutCh0900");
static_assert(sizeof(BP_PlayerHologram_C_OnMontageBlendingOutCh0900) == 0x000010, "Wrong size on BP_PlayerHologram_C_OnMontageBlendingOutCh0900");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh0900, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh0900::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh0900, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh0900::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.OnMontageBlendingOutCh0800
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_OnMontageBlendingOutCh0800 final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_OnMontageBlendingOutCh0800) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_OnMontageBlendingOutCh0800");
static_assert(sizeof(BP_PlayerHologram_C_OnMontageBlendingOutCh0800) == 0x000010, "Wrong size on BP_PlayerHologram_C_OnMontageBlendingOutCh0800");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh0800, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh0800::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh0800, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh0800::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.OnMontageBlendingOutCh0700
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_OnMontageBlendingOutCh0700 final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_OnMontageBlendingOutCh0700) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_OnMontageBlendingOutCh0700");
static_assert(sizeof(BP_PlayerHologram_C_OnMontageBlendingOutCh0700) == 0x000010, "Wrong size on BP_PlayerHologram_C_OnMontageBlendingOutCh0700");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh0700, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh0700::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh0700, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh0700::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.OnMontageBlendingOutCh0600
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_OnMontageBlendingOutCh0600 final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_OnMontageBlendingOutCh0600) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_OnMontageBlendingOutCh0600");
static_assert(sizeof(BP_PlayerHologram_C_OnMontageBlendingOutCh0600) == 0x000010, "Wrong size on BP_PlayerHologram_C_OnMontageBlendingOutCh0600");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh0600, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh0600::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh0600, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh0600::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.OnMontageBlendingOutCh0500
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_OnMontageBlendingOutCh0500 final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_OnMontageBlendingOutCh0500) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_OnMontageBlendingOutCh0500");
static_assert(sizeof(BP_PlayerHologram_C_OnMontageBlendingOutCh0500) == 0x000010, "Wrong size on BP_PlayerHologram_C_OnMontageBlendingOutCh0500");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh0500, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh0500::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh0500, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh0500::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.OnMontageBlendingOutCh0400
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_OnMontageBlendingOutCh0400 final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_OnMontageBlendingOutCh0400) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_OnMontageBlendingOutCh0400");
static_assert(sizeof(BP_PlayerHologram_C_OnMontageBlendingOutCh0400) == 0x000010, "Wrong size on BP_PlayerHologram_C_OnMontageBlendingOutCh0400");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh0400, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh0400::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh0400, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh0400::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.OnMontageBlendingOutCh0300
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_OnMontageBlendingOutCh0300 final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_OnMontageBlendingOutCh0300) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_OnMontageBlendingOutCh0300");
static_assert(sizeof(BP_PlayerHologram_C_OnMontageBlendingOutCh0300) == 0x000010, "Wrong size on BP_PlayerHologram_C_OnMontageBlendingOutCh0300");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh0300, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh0300::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh0300, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh0300::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.OnMontageBlendingOutCh0200
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_OnMontageBlendingOutCh0200 final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_OnMontageBlendingOutCh0200) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_OnMontageBlendingOutCh0200");
static_assert(sizeof(BP_PlayerHologram_C_OnMontageBlendingOutCh0200) == 0x000010, "Wrong size on BP_PlayerHologram_C_OnMontageBlendingOutCh0200");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh0200, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh0200::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh0200, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh0200::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.OnMontageBlendingOutCh0100
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_OnMontageBlendingOutCh0100 final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_OnMontageBlendingOutCh0100) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_OnMontageBlendingOutCh0100");
static_assert(sizeof(BP_PlayerHologram_C_OnMontageBlendingOutCh0100) == 0x000010, "Wrong size on BP_PlayerHologram_C_OnMontageBlendingOutCh0100");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh0100, Montage) == 0x000000, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh0100::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMontageBlendingOutCh0100, bInterrupted) == 0x000008, "Member 'BP_PlayerHologram_C_OnMontageBlendingOutCh0100::bInterrupted' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerHologram_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_PlayerHologram_C_ReceiveEndPlay");
static_assert(sizeof(BP_PlayerHologram_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_PlayerHologram_C_ReceiveEndPlay");
static_assert(offsetof(BP_PlayerHologram_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_PlayerHologram_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerHologram_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_ReceiveTick");
static_assert(sizeof(BP_PlayerHologram_C_ReceiveTick) == 0x000004, "Wrong size on BP_PlayerHologram_C_ReceiveTick");
static_assert(offsetof(BP_PlayerHologram_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PlayerHologram_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.OnBonusGhostOneShot
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerHologram_C_OnBonusGhostOneShot final
{
public:
	float                                         AliveTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_OnBonusGhostOneShot) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_OnBonusGhostOneShot");
static_assert(sizeof(BP_PlayerHologram_C_OnBonusGhostOneShot) == 0x000004, "Wrong size on BP_PlayerHologram_C_OnBonusGhostOneShot");
static_assert(offsetof(BP_PlayerHologram_C_OnBonusGhostOneShot, AliveTime) == 0x000000, "Member 'BP_PlayerHologram_C_OnBonusGhostOneShot::AliveTime' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.OnBonusGhostFromDT
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerHologram_C_OnBonusGhostFromDT final
{
public:
	EBonusGhostType                               Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_OnBonusGhostFromDT) == 0x000001, "Wrong alignment on BP_PlayerHologram_C_OnBonusGhostFromDT");
static_assert(sizeof(BP_PlayerHologram_C_OnBonusGhostFromDT) == 0x000001, "Wrong size on BP_PlayerHologram_C_OnBonusGhostFromDT");
static_assert(offsetof(BP_PlayerHologram_C_OnBonusGhostFromDT, Type) == 0x000000, "Member 'BP_PlayerHologram_C_OnBonusGhostFromDT::Type' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.OnBonusGhost
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerHologram_C_OnBonusGhost final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_OnBonusGhost) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_OnBonusGhost");
static_assert(sizeof(BP_PlayerHologram_C_OnBonusGhost) == 0x000004, "Wrong size on BP_PlayerHologram_C_OnBonusGhost");
static_assert(offsetof(BP_PlayerHologram_C_OnBonusGhost, Time) == 0x000000, "Member 'BP_PlayerHologram_C_OnBonusGhost::Time' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.SetGhostActive
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerHologram_C_SetGhostActive final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_SetGhostActive) == 0x000001, "Wrong alignment on BP_PlayerHologram_C_SetGhostActive");
static_assert(sizeof(BP_PlayerHologram_C_SetGhostActive) == 0x000001, "Wrong size on BP_PlayerHologram_C_SetGhostActive");
static_assert(offsetof(BP_PlayerHologram_C_SetGhostActive, Active) == 0x000000, "Member 'BP_PlayerHologram_C_SetGhostActive::Active' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.HologramOn
// 0x0070 (0x0070 - 0x0000)
struct BP_PlayerHologram_C_HologramOn final
{
public:
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7747[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeapon_Weapon;                         // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7748[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7749[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           CallFunc_GetCurveColorStart_Curve;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_774A[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           CallFunc_GetCurveStart_Curve;                      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime_1;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_774B[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayAnimation_bPlay;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_HologramOn) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_HologramOn");
static_assert(sizeof(BP_PlayerHologram_C_HologramOn) == 0x000070, "Wrong size on BP_PlayerHologram_C_HologramOn");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, Temp_int_Loop_Num_Variable) == 0x000000, "Member 'BP_PlayerHologram_C_HologramOn::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, CallFunc_MakeLiteralBool_ReturnValue) == 0x000004, "Member 'BP_PlayerHologram_C_HologramOn::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'BP_PlayerHologram_C_HologramOn::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, CallFunc_getMesh_mesh) == 0x000008, "Member 'BP_PlayerHologram_C_HologramOn::CallFunc_getMesh_mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000010, "Member 'BP_PlayerHologram_C_HologramOn::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, CallFunc_GetWeapon_Weapon) == 0x000018, "Member 'BP_PlayerHologram_C_HologramOn::CallFunc_GetWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_PlayerHologram_C_HologramOn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_PlayerHologram_C_HologramOn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_PlayerHologram_C_HologramOn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, CallFunc_GetCurveColorStart_Curve) == 0x000038, "Member 'BP_PlayerHologram_C_HologramOn::CallFunc_GetCurveColorStart_Curve' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, CallFunc_GetTimeRange_MinTime) == 0x000040, "Member 'BP_PlayerHologram_C_HologramOn::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, CallFunc_GetTimeRange_MaxTime) == 0x000044, "Member 'BP_PlayerHologram_C_HologramOn::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_PlayerHologram_C_HologramOn::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, CallFunc_GetCurveStart_Curve) == 0x000050, "Member 'BP_PlayerHologram_C_HologramOn::CallFunc_GetCurveStart_Curve' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, CallFunc_GetTimeRange_MinTime_1) == 0x000058, "Member 'BP_PlayerHologram_C_HologramOn::CallFunc_GetTimeRange_MinTime_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, CallFunc_GetTimeRange_MaxTime_1) == 0x00005C, "Member 'BP_PlayerHologram_C_HologramOn::CallFunc_GetTimeRange_MaxTime_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BP_PlayerHologram_C_HologramOn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_PlayerHologram_C_HologramOn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_PlayerHologram_C_HologramOn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOn, CallFunc_IsPlayAnimation_bPlay) == 0x00006C, "Member 'BP_PlayerHologram_C_HologramOn::CallFunc_IsPlayAnimation_bPlay' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.HologramOff
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerHologram_C_HologramOff final
{
public:
	bool                                          bForceOff;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LCallDispatcher;                                   // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActorTickEnabled_ReturnValue;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_HologramOff) == 0x000001, "Wrong alignment on BP_PlayerHologram_C_HologramOff");
static_assert(sizeof(BP_PlayerHologram_C_HologramOff) == 0x000004, "Wrong size on BP_PlayerHologram_C_HologramOff");
static_assert(offsetof(BP_PlayerHologram_C_HologramOff, bForceOff) == 0x000000, "Member 'BP_PlayerHologram_C_HologramOff::bForceOff' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOff, LCallDispatcher) == 0x000001, "Member 'BP_PlayerHologram_C_HologramOff::LCallDispatcher' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOff, CallFunc_IsActorTickEnabled_ReturnValue) == 0x000002, "Member 'BP_PlayerHologram_C_HologramOff::CallFunc_IsActorTickEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOff, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'BP_PlayerHologram_C_HologramOff::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.PlayAnimation
// 0x0068 (0x0068 - 0x0000)
struct BP_PlayerHologram_C_PlayAnimation final
{
public:
	EPlayerID                                     InPlayerID;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_774C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           AnimMontage;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           WeaponMontage;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHologramRootMotion;                               // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_774D[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MotionIndex;                                       // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHologramKind                                 Param_HologramKind;                                // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_774E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          LAnimInstance;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_774F[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRSPlayerHologramAnimInstanceInterface> K2Node_DynamicCast_AsRSPlayer_Hologram_Anim_Instance_Interface; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7750[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7751[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_PlayAnimation) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_PlayAnimation");
static_assert(sizeof(BP_PlayerHologram_C_PlayAnimation) == 0x000068, "Wrong size on BP_PlayerHologram_C_PlayAnimation");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimation, InPlayerID) == 0x000000, "Member 'BP_PlayerHologram_C_PlayAnimation::InPlayerID' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimation, AnimMontage) == 0x000008, "Member 'BP_PlayerHologram_C_PlayAnimation::AnimMontage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimation, WeaponMontage) == 0x000010, "Member 'BP_PlayerHologram_C_PlayAnimation::WeaponMontage' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimation, bHologramRootMotion) == 0x000018, "Member 'BP_PlayerHologram_C_PlayAnimation::bHologramRootMotion' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimation, MotionIndex) == 0x00001C, "Member 'BP_PlayerHologram_C_PlayAnimation::MotionIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimation, Param_HologramKind) == 0x000020, "Member 'BP_PlayerHologram_C_PlayAnimation::Param_HologramKind' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimation, LAnimInstance) == 0x000028, "Member 'BP_PlayerHologram_C_PlayAnimation::LAnimInstance' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimation, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_PlayerHologram_C_PlayAnimation::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimation, K2Node_DynamicCast_AsRSPlayer_Hologram_Anim_Instance_Interface) == 0x000038, "Member 'BP_PlayerHologram_C_PlayAnimation::K2Node_DynamicCast_AsRSPlayer_Hologram_Anim_Instance_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimation, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_PlayerHologram_C_PlayAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimation, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_PlayerHologram_C_PlayAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimation, CallFunc_Montage_Play_ReturnValue) == 0x00004C, "Member 'BP_PlayerHologram_C_PlayAnimation::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimation, CallFunc_getMesh_mesh) == 0x000050, "Member 'BP_PlayerHologram_C_PlayAnimation::CallFunc_getMesh_mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimation, CallFunc_Montage_Play_ReturnValue_1) == 0x000058, "Member 'BP_PlayerHologram_C_PlayAnimation::CallFunc_Montage_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimation, CallFunc_IsValid_ReturnValue_1) == 0x00005C, "Member 'BP_PlayerHologram_C_PlayAnimation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimation, CallFunc_GetAnimInstance_ReturnValue) == 0x000060, "Member 'BP_PlayerHologram_C_PlayAnimation::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.StopAnimation
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerHologram_C_StopAnimation final
{
public:
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_StopAnimation) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_StopAnimation");
static_assert(sizeof(BP_PlayerHologram_C_StopAnimation) == 0x000018, "Wrong size on BP_PlayerHologram_C_StopAnimation");
static_assert(offsetof(BP_PlayerHologram_C_StopAnimation, CallFunc_getMesh_mesh) == 0x000000, "Member 'BP_PlayerHologram_C_StopAnimation::CallFunc_getMesh_mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_StopAnimation, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_PlayerHologram_C_StopAnimation::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_StopAnimation, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerHologram_C_StopAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.getMesh
// 0x00A8 (0x00A8 - 0x0000)
struct BP_PlayerHologram_C_GetMesh final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7752[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7753[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Temp_object_Variable_4;                            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Temp_object_Variable_5;                            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Temp_object_Variable_6;                            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Temp_object_Variable_7;                            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Temp_object_Variable_8;                            // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Temp_object_Variable_9;                            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Temp_object_Variable_10;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Temp_object_Variable_11;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Temp_object_Variable_12;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Temp_object_Variable_13;                           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Temp_object_Variable_14;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Temp_object_Variable_15;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Temp_object_Variable_16;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_Select_Default;                             // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_GetMesh) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_GetMesh");
static_assert(sizeof(BP_PlayerHologram_C_GetMesh) == 0x0000A8, "Wrong size on BP_PlayerHologram_C_GetMesh");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, PlayerId) == 0x000000, "Member 'BP_PlayerHologram_C_GetMesh::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, Mesh) == 0x000008, "Member 'BP_PlayerHologram_C_GetMesh::Mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, Temp_byte_Variable) == 0x000010, "Member 'BP_PlayerHologram_C_GetMesh::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, Temp_object_Variable) == 0x000018, "Member 'BP_PlayerHologram_C_GetMesh::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, Temp_object_Variable_1) == 0x000020, "Member 'BP_PlayerHologram_C_GetMesh::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, Temp_object_Variable_2) == 0x000028, "Member 'BP_PlayerHologram_C_GetMesh::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, Temp_object_Variable_3) == 0x000030, "Member 'BP_PlayerHologram_C_GetMesh::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, Temp_object_Variable_4) == 0x000038, "Member 'BP_PlayerHologram_C_GetMesh::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, Temp_object_Variable_5) == 0x000040, "Member 'BP_PlayerHologram_C_GetMesh::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, Temp_object_Variable_6) == 0x000048, "Member 'BP_PlayerHologram_C_GetMesh::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, Temp_object_Variable_7) == 0x000050, "Member 'BP_PlayerHologram_C_GetMesh::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, Temp_object_Variable_8) == 0x000058, "Member 'BP_PlayerHologram_C_GetMesh::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, Temp_object_Variable_9) == 0x000060, "Member 'BP_PlayerHologram_C_GetMesh::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, Temp_object_Variable_10) == 0x000068, "Member 'BP_PlayerHologram_C_GetMesh::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, Temp_object_Variable_11) == 0x000070, "Member 'BP_PlayerHologram_C_GetMesh::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, Temp_object_Variable_12) == 0x000078, "Member 'BP_PlayerHologram_C_GetMesh::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, Temp_object_Variable_13) == 0x000080, "Member 'BP_PlayerHologram_C_GetMesh::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, Temp_object_Variable_14) == 0x000088, "Member 'BP_PlayerHologram_C_GetMesh::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, Temp_object_Variable_15) == 0x000090, "Member 'BP_PlayerHologram_C_GetMesh::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, Temp_object_Variable_16) == 0x000098, "Member 'BP_PlayerHologram_C_GetMesh::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetMesh, K2Node_Select_Default) == 0x0000A0, "Member 'BP_PlayerHologram_C_GetMesh::K2Node_Select_Default' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.CreateWeapon
// 0x06B0 (0x06B0 - 0x0000)
struct BP_PlayerHologram_C_CreateWeapon final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7754[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WeaponId;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      LPlayer;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7755[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7756[0x8];                                     // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7757[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7758[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7759[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_775A[0x8];                                     // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetBulletVisibility_dunnmy;               // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_775B[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HologramBullet_ch0900_C*            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_775C[0x8];                                     // 0x0188(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_6;              // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_775D[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HologramBullet_ch0500_C*            CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_775E[0x7];                                     // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_7;              // 0x01E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_8;              // 0x0210(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_9;              // 0x0240(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CombinationVisionBullet_ch0500_C*   CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CombinationVisionBullet_ch0700_C*   CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_10;             // 0x0290(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_775F[0xF];                                     // 0x02C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_11;             // 0x02D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_12;             // 0x0300(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4; // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7760[0x8];                                     // 0x0338(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_13;             // 0x0340(0x0030)(IsPlainOldData, NoDestructor)
	class ABP_CombinationVisionBullet_ch0900_C*   CallFunc_FinishSpawningActor_ReturnValue_4;        // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7761[0x8];                                     // 0x0378(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_14;             // 0x0380(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_1;                               // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7762[0x4];                                     // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_15;             // 0x03C0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7763[0x3];                                     // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EREDActorStatType                             CallFunc_GetActorStatType_ReturnValue;             // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7764[0x7];                                     // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetWeaponClass_WeaponClass;               // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FVector& HitLocation)> K2Node_CreateDelegate_OutputDelegate;              // 0x0408(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5; // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7765[0x7];                                     // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponBase_C*                       CallFunc_FinishSpawningActor_ReturnValue_5;        // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EREDActorStatType                             CallFunc_GetActorStatType_ReturnValue_1;           // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7766[0x6];                                     // 0x0432(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetWeaponClass_WeaponClass_1;             // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FVector& HitLocation)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0440(0x0010)(ZeroConstructor, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_16;             // 0x0450(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7767[0x7];                                     // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6; // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_FinishSpawningActor_ReturnValue_6;        // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x049C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7768[0x3];                                     // 0x049D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetCopyMesh_CopyMeshList;                 // 0x04A0(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7769[0xC];                                     // 0x04B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_17;             // 0x04C0(0x0030)(IsPlainOldData, NoDestructor)
	EREDActorStatType                             CallFunc_GetActorStatType_ReturnValue_2;           // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EREDActorStatType                             CallFunc_GetActorStatType_ReturnValue_3;           // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EREDActorStatType                             CallFunc_GetActorStatType_ReturnValue_4;           // 0x04F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_776A[0x5];                                     // 0x04F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetWeaponClass_WeaponClass_2;             // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7; // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_FinishSpawningActor_ReturnValue_7;        // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EREDActorStatType                             CallFunc_GetActorStatType_ReturnValue_5;           // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0511(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EREDActorStatType                             CallFunc_GetActorStatType_ReturnValue_6;           // 0x0512(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_776B[0x5];                                     // 0x0513(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetWeaponClass_WeaponClass_3;             // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8; // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EREDActorStatType                             CallFunc_GetActorStatType_ReturnValue_7;           // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_776C[0x7];                                     // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponBase_C*                       CallFunc_FinishSpawningActor_ReturnValue_8;        // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9; // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_FinishSpawningActor_ReturnValue_9;        // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x054C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_776D[0x3];                                     // 0x054D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0554(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_776E[0x3];                                     // 0x0555(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10; // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_FinishSpawningActor_ReturnValue_10;       // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_11; // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_FinishSpawningActor_ReturnValue_11;       // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0579(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EREDActorStatType                             CallFunc_GetActorStatType_ReturnValue_8;           // 0x057A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_776F[0x5];                                     // 0x057B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetWeaponClass_WeaponClass_4;             // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_12; // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_13; // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_FinishSpawningActor_ReturnValue_12;       // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7770[0x7];                                     // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponBase_C*                       CallFunc_FinishSpawningActor_ReturnValue_13;       // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EREDActorStatType                             CallFunc_GetActorStatType_ReturnValue_9;           // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x05B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7771[0x6];                                     // 0x05B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetWeaponClass_WeaponClass_5;             // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_14; // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EREDActorStatType                             CallFunc_GetActorStatType_ReturnValue_10;          // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7772[0x7];                                     // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponBase_C*                       CallFunc_FinishSpawningActor_ReturnValue_14;       // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetWeaponClass_WeaponClass_6;             // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EREDActorStatType                             CallFunc_GetActorStatType_ReturnValue_11;          // 0x05E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7773[0x6];                                     // 0x05E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetWeaponClass_WeaponClass_7;             // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_15; // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EREDActorStatType                             CallFunc_GetActorStatType_ReturnValue_12;          // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7774[0x7];                                     // 0x05F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponBase_C*                       CallFunc_FinishSpawningActor_ReturnValue_15;       // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetWeaponClass_WeaponClass_8;             // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_16; // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_FinishSpawningActor_ReturnValue_16;       // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0621(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EREDActorStatType                             CallFunc_GetActorStatType_ReturnValue_13;          // 0x0622(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0623(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7775[0x4];                                     // 0x0624(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetWeaponClass_WeaponClass_9;             // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7776[0x7];                                     // 0x0649(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_17; // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_FinishSpawningActor_ReturnValue_17;       // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_18;             // 0x0660(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_18; // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_FinishSpawningActor_ReturnValue_18;       // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x06A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_CreateWeapon) == 0x000010, "Wrong alignment on BP_PlayerHologram_C_CreateWeapon");
static_assert(sizeof(BP_PlayerHologram_C_CreateWeapon) == 0x0006B0, "Wrong size on BP_PlayerHologram_C_CreateWeapon");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, PlayerId) == 0x000000, "Member 'BP_PlayerHologram_C_CreateWeapon::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, WeaponId) == 0x000004, "Member 'BP_PlayerHologram_C_CreateWeapon::WeaponId' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, LPlayer) == 0x000008, "Member 'BP_PlayerHologram_C_CreateWeapon::LPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_PlayerHologram_C_CreateWeapon::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_PlayerHologram_C_CreateWeapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_PlayerHologram_C_CreateWeapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue_1) == 0x000060, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, Temp_int_Variable) == 0x000098, "Member 'BP_PlayerHologram_C_CreateWeapon::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue_2) == 0x0000A0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D4, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue_3) == 0x0000E0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue_4) == 0x000110, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue_5) == 0x000140, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000170, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_SetBulletVisibility_dunnmy) == 0x000178, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_SetBulletVisibility_dunnmy' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue) == 0x000180, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue_6) == 0x000190, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_IsValid_ReturnValue) == 0x0001C0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0001C8, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0001D0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_IsValid_ReturnValue_1) == 0x0001D8, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue_7) == 0x0001E0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue_8) == 0x000210, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue_9) == 0x000240, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x000270, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x000278, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x000280, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x000288, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue_10) == 0x000290, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_IsValid_ReturnValue_2) == 0x0002C0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue_11) == 0x0002D0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue_12) == 0x000300, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4) == 0x000330, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue_13) == 0x000340, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue_4) == 0x000370, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue_14) == 0x000380, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, Temp_int_Variable_1) == 0x0003B0, "Member 'BP_PlayerHologram_C_CreateWeapon::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_Array_Add_ReturnValue) == 0x0003B4, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_Add_IntInt_ReturnValue_2) == 0x0003B8, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue_15) == 0x0003C0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0003F0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_Array_Add_ReturnValue_1) == 0x0003F4, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetActorStatType_ReturnValue) == 0x0003F8, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetActorStatType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetWeaponClass_WeaponClass) == 0x000400, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetWeaponClass_WeaponClass' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, K2Node_CreateDelegate_OutputDelegate) == 0x000408, "Member 'BP_PlayerHologram_C_CreateWeapon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5) == 0x000418, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_IsValid_ReturnValue_3) == 0x000420, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue_5) == 0x000428, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_IsValid_ReturnValue_4) == 0x000430, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetActorStatType_ReturnValue_1) == 0x000431, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetActorStatType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetWeaponClass_WeaponClass_1) == 0x000438, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetWeaponClass_WeaponClass_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, K2Node_CreateDelegate_OutputDelegate_1) == 0x000440, "Member 'BP_PlayerHologram_C_CreateWeapon::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue_16) == 0x000450, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_IsValid_ReturnValue_5) == 0x000480, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6) == 0x000488, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue_6) == 0x000490, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_Array_Add_ReturnValue_2) == 0x000498, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_IsValid_ReturnValue_6) == 0x00049C, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetCopyMesh_CopyMeshList) == 0x0004A0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetCopyMesh_CopyMeshList' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_Array_Length_ReturnValue) == 0x0004B0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue_17) == 0x0004C0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetActorStatType_ReturnValue_2) == 0x0004F0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetActorStatType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetActorStatType_ReturnValue_3) == 0x0004F1, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetActorStatType_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetActorStatType_ReturnValue_4) == 0x0004F2, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetActorStatType_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetWeaponClass_WeaponClass_2) == 0x0004F8, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetWeaponClass_WeaponClass_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7) == 0x000500, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue_7) == 0x000508, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetActorStatType_ReturnValue_5) == 0x000510, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetActorStatType_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_IsValid_ReturnValue_7) == 0x000511, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetActorStatType_ReturnValue_6) == 0x000512, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetActorStatType_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetWeaponClass_WeaponClass_3) == 0x000518, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetWeaponClass_WeaponClass_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8) == 0x000520, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetActorStatType_ReturnValue_7) == 0x000528, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetActorStatType_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue_8) == 0x000530, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9) == 0x000538, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue_9) == 0x000540, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_Array_Add_ReturnValue_3) == 0x000548, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_IsValid_ReturnValue_8) == 0x00054C, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_Array_Add_ReturnValue_4) == 0x000550, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_IsValid_ReturnValue_9) == 0x000554, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10) == 0x000558, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue_10) == 0x000560, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_11) == 0x000568, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue_11) == 0x000570, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_IsValid_ReturnValue_10) == 0x000578, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_IsValid_ReturnValue_11) == 0x000579, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetActorStatType_ReturnValue_8) == 0x00057A, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetActorStatType_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetWeaponClass_WeaponClass_4) == 0x000580, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetWeaponClass_WeaponClass_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_12) == 0x000588, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_13) == 0x000590, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue_12) == 0x000598, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_IsValid_ReturnValue_12) == 0x0005A0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue_13) == 0x0005A8, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetActorStatType_ReturnValue_9) == 0x0005B0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetActorStatType_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_IsValid_ReturnValue_13) == 0x0005B1, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetWeaponClass_WeaponClass_5) == 0x0005B8, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetWeaponClass_WeaponClass_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_14) == 0x0005C0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetActorStatType_ReturnValue_10) == 0x0005C8, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetActorStatType_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue_14) == 0x0005D0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetWeaponClass_WeaponClass_6) == 0x0005D8, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetWeaponClass_WeaponClass_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_IsValid_ReturnValue_14) == 0x0005E0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetActorStatType_ReturnValue_11) == 0x0005E1, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetActorStatType_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetWeaponClass_WeaponClass_7) == 0x0005E8, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetWeaponClass_WeaponClass_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_15) == 0x0005F0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetActorStatType_ReturnValue_12) == 0x0005F8, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetActorStatType_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue_15) == 0x000600, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetWeaponClass_WeaponClass_8) == 0x000608, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetWeaponClass_WeaponClass_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_16) == 0x000610, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue_16) == 0x000618, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_IsValid_ReturnValue_15) == 0x000620, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_IsValid_ReturnValue_16) == 0x000621, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetActorStatType_ReturnValue_13) == 0x000622, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetActorStatType_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, K2Node_SwitchEnum_CmpSuccess) == 0x000623, "Member 'BP_PlayerHologram_C_CreateWeapon::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetPlayerController_ReturnValue) == 0x000628, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_K2_GetPawn_ReturnValue) == 0x000630, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_GetWeaponClass_WeaponClass_9) == 0x000638, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_GetWeaponClass_WeaponClass_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, K2Node_DynamicCast_AsRSBattle_Player) == 0x000640, "Member 'BP_PlayerHologram_C_CreateWeapon::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, K2Node_DynamicCast_bSuccess) == 0x000648, "Member 'BP_PlayerHologram_C_CreateWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_17) == 0x000650, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue_17) == 0x000658, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue_18) == 0x000660, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_18) == 0x000690, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue_18) == 0x000698, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_IsValid_ReturnValue_17) == 0x0006A0, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CreateWeapon, CallFunc_IsValid_ReturnValue_18) == 0x0006A1, "Member 'BP_PlayerHologram_C_CreateWeapon::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.DestroyWeapon
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerHologram_C_DestroyWeapon final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7777[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7778[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7779[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CombinationVisionBullet_ch0500_C*   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_777A[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_777B[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_DestroyWeapon) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_DestroyWeapon");
static_assert(sizeof(BP_PlayerHologram_C_DestroyWeapon) == 0x000060, "Wrong size on BP_PlayerHologram_C_DestroyWeapon");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, PlayerId) == 0x000000, "Member 'BP_PlayerHologram_C_DestroyWeapon::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_PlayerHologram_C_DestroyWeapon::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_PlayerHologram_C_DestroyWeapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_PlayerHologram_C_DestroyWeapon::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_PlayerHologram_C_DestroyWeapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, Temp_int_Variable) == 0x000010, "Member 'BP_PlayerHologram_C_DestroyWeapon::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_PlayerHologram_C_DestroyWeapon::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'BP_PlayerHologram_C_DestroyWeapon::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_IsValid_ReturnValue_2) == 0x00003A, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_IsValid_ReturnValue_3) == 0x00003B, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, Temp_int_Loop_Num_Variable_1) == 0x00003C, "Member 'BP_PlayerHologram_C_DestroyWeapon::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_Less_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_IsValid_ReturnValue_4) == 0x000041, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_IsValid_ReturnValue_5) == 0x000048, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_IsValid_ReturnValue_6) == 0x000049, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_IsValid_ReturnValue_7) == 0x00004A, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_IsValid_ReturnValue_8) == 0x00004B, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_IsValid_ReturnValue_9) == 0x00004C, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_IsValid_ReturnValue_10) == 0x00004D, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_IsValid_ReturnValue_11) == 0x00004E, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_IsValid_ReturnValue_12) == 0x00004F, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_IsValid_ReturnValue_13) == 0x000050, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_IsValid_ReturnValue_14) == 0x000058, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyWeapon, CallFunc_IsValid_ReturnValue_15) == 0x000059, "Member 'BP_PlayerHologram_C_DestroyWeapon::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.Initialize
// 0x0218 (0x0218 - 0x0000)
struct BP_PlayerHologram_C_Initialize final
{
public:
	struct FPlayerInfo                            LPlayerInfo;                                       // 0x0000(0x00D0)(Edit, BlueprintVisible, NoDestructor)
	EPlayerID                                     LPlayerID;                                         // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_777C[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_777D[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_777E[0x1];                                     // 0x00E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00EC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_777F[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7780[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerInfo                            CallFunc_GetPartyMemberInfo_ReturnValue;           // 0x0114(0x00D0)(NoDestructor)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Equip_Costume_ChangeCostume;              // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7781[0x6];                                     // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7782[0x5];                                     // 0x01FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh_1;                           // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7783[0x3];                                     // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_Initialize) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_Initialize");
static_assert(sizeof(BP_PlayerHologram_C_Initialize) == 0x000218, "Wrong size on BP_PlayerHologram_C_Initialize");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, LPlayerInfo) == 0x000000, "Member 'BP_PlayerHologram_C_Initialize::LPlayerInfo' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, LPlayerID) == 0x0000D0, "Member 'BP_PlayerHologram_C_Initialize::LPlayerID' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, Temp_int_Variable) == 0x0000D4, "Member 'BP_PlayerHologram_C_Initialize::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, Temp_int_Variable_1) == 0x0000D8, "Member 'BP_PlayerHologram_C_Initialize::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000DC, "Member 'BP_PlayerHologram_C_Initialize::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, CallFunc_Add_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_PlayerHologram_C_Initialize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, CallFunc_GetValidValue_ReturnValue) == 0x0000E4, "Member 'BP_PlayerHologram_C_Initialize::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x0000E5, "Member 'BP_PlayerHologram_C_Initialize::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x0000E6, "Member 'BP_PlayerHologram_C_Initialize::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000E8, "Member 'BP_PlayerHologram_C_Initialize::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, K2Node_CreateDelegate_OutputDelegate) == 0x0000EC, "Member 'BP_PlayerHologram_C_Initialize::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000100, "Member 'BP_PlayerHologram_C_Initialize::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, CallFunc_GetPlayerManager_PlayerManager) == 0x000108, "Member 'BP_PlayerHologram_C_Initialize::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000110, "Member 'BP_PlayerHologram_C_Initialize::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, CallFunc_GetPartyMemberInfo_ReturnValue) == 0x000114, "Member 'BP_PlayerHologram_C_Initialize::CallFunc_GetPartyMemberInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, CallFunc_SelectInt_ReturnValue) == 0x0001E4, "Member 'BP_PlayerHologram_C_Initialize::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, CallFunc_MakeLiteralBool_ReturnValue) == 0x0001E8, "Member 'BP_PlayerHologram_C_Initialize::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, CallFunc_Equip_Costume_ChangeCostume) == 0x0001E9, "Member 'BP_PlayerHologram_C_Initialize::CallFunc_Equip_Costume_ChangeCostume' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, CallFunc_getMesh_mesh) == 0x0001F0, "Member 'BP_PlayerHologram_C_Initialize::CallFunc_getMesh_mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, CallFunc_IsValid_ReturnValue) == 0x0001F8, "Member 'BP_PlayerHologram_C_Initialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, K2Node_SwitchEnum_CmpSuccess) == 0x0001F9, "Member 'BP_PlayerHologram_C_Initialize::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, K2Node_SwitchEnum_CmpSuccess_1) == 0x0001FA, "Member 'BP_PlayerHologram_C_Initialize::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, CallFunc_getMesh_mesh_1) == 0x000200, "Member 'BP_PlayerHologram_C_Initialize::CallFunc_getMesh_mesh_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, CallFunc_IsValid_ReturnValue_1) == 0x000208, "Member 'BP_PlayerHologram_C_Initialize::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, CallFunc_MakeLiteralInt_ReturnValue) == 0x00020C, "Member 'BP_PlayerHologram_C_Initialize::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Initialize, CallFunc_Less_IntInt_ReturnValue) == 0x000210, "Member 'BP_PlayerHologram_C_Initialize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.SetMeshVisibility
// 0x0128 (0x0128 - 0x0000)
struct BP_PlayerHologram_C_SetMeshVisibility final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVisibility;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbWeaponNotVisibility;                             // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7784[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponBase_C*                       LWeapon;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x001C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7785[0x2];                                     // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7786[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue_1;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7787[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AttachmentManageComponent_C*        CallFunc_GetAttachmentManageComponent_Manager;     // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7788[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AttachmentManageComponent_C*        CallFunc_GetAttachmentManageComponent_Manager_1;   // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue_2;            // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7789[0x1];                                     // 0x00DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue_3;            // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_778A[0x1];                                     // 0x00E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeapon_Weapon;                         // 0x00E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue_4;            // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_778B[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeapon_Weapon_1;                       // 0x0100(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_778C[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_778D[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_SetMeshVisibility) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_SetMeshVisibility");
static_assert(sizeof(BP_PlayerHologram_C_SetMeshVisibility) == 0x000128, "Wrong size on BP_PlayerHologram_C_SetMeshVisibility");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, PlayerId) == 0x000000, "Member 'BP_PlayerHologram_C_SetMeshVisibility::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, bVisibility) == 0x000001, "Member 'BP_PlayerHologram_C_SetMeshVisibility::bVisibility' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, LbWeaponNotVisibility) == 0x000002, "Member 'BP_PlayerHologram_C_SetMeshVisibility::LbWeaponNotVisibility' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, LWeapon) == 0x000008, "Member 'BP_PlayerHologram_C_SetMeshVisibility::LWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_getMesh_mesh) == 0x000010, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_getMesh_mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PlayerHologram_C_SetMeshVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x00001C, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_IsValid_ReturnValue) == 0x0000A4, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_MakeLiteralBool_ReturnValue) == 0x0000A5, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, Temp_int_Loop_Num_Variable) == 0x0000A8, "Member 'BP_PlayerHologram_C_SetMeshVisibility::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'BP_PlayerHologram_C_SetMeshVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B0, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x0000B1, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_MakeLiteralBool_ReturnValue_1) == 0x0000B8, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_MakeLiteralBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_GetAttachmentManageComponent_Manager) == 0x0000C0, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_GetAttachmentManageComponent_Manager' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_IsValid_ReturnValue_1) == 0x0000C8, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_GetAttachmentManageComponent_Manager_1) == 0x0000D0, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_GetAttachmentManageComponent_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, Temp_int_Array_Index_Variable_1) == 0x0000D8, "Member 'BP_PlayerHologram_C_SetMeshVisibility::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_IsValid_ReturnValue_2) == 0x0000DC, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_MakeLiteralBool_ReturnValue_2) == 0x0000DD, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_MakeLiteralBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, K2Node_SwitchEnum_CmpSuccess) == 0x0000DE, "Member 'BP_PlayerHologram_C_SetMeshVisibility::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, Temp_int_Loop_Num_Variable_1) == 0x0000E0, "Member 'BP_PlayerHologram_C_SetMeshVisibility::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000E4, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_MakeLiteralBool_ReturnValue_3) == 0x0000E5, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_MakeLiteralBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_IsValid_ReturnValue_3) == 0x0000E6, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_GetWeapon_Weapon) == 0x0000E8, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_GetWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_MakeLiteralBool_ReturnValue_4) == 0x0000F8, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_MakeLiteralBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_Array_Length_ReturnValue) == 0x0000FC, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_GetWeapon_Weapon_1) == 0x000100, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_GetWeapon_Weapon_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_IsValid_ReturnValue_4) == 0x000110, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_Array_Length_ReturnValue_1) == 0x000114, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, Temp_int_Loop_Counter_Variable_1) == 0x000118, "Member 'BP_PlayerHologram_C_SetMeshVisibility::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_Less_IntInt_ReturnValue_1) == 0x00011C, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetMeshVisibility, CallFunc_Add_IntInt_ReturnValue_1) == 0x000120, "Member 'BP_PlayerHologram_C_SetMeshVisibility::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.TickHologramOn
// 0x00C0 (0x00C0 - 0x0000)
struct BP_PlayerHologram_C_TickHologramOn final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ColorRate;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurveLoopTime;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurveStartTimeRange;                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurveValue;                                        // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_778E[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           CallFunc_GetCurveColorStart_Curve;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           CallFunc_GetCurveColorStart_Curve_1;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_778F[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           CallFunc_GetCurveLoop_Curve;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7790[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           CallFunc_GetCurveStart_Curve;                      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime_1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           CallFunc_GetCurveStart_Curve_1;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetPlayerHidden_bDummy;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7791[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue_1;             // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7792[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVectorValue_ReturnValue_2;             // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_TickHologramOn) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_TickHologramOn");
static_assert(sizeof(BP_PlayerHologram_C_TickHologramOn) == 0x0000C0, "Wrong size on BP_PlayerHologram_C_TickHologramOn");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, DeltaSeconds) == 0x000000, "Member 'BP_PlayerHologram_C_TickHologramOn::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, ColorRate) == 0x000004, "Member 'BP_PlayerHologram_C_TickHologramOn::ColorRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CurveLoopTime) == 0x000008, "Member 'BP_PlayerHologram_C_TickHologramOn::CurveLoopTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CurveStartTimeRange) == 0x00000C, "Member 'BP_PlayerHologram_C_TickHologramOn::CurveStartTimeRange' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CurveValue) == 0x000010, "Member 'BP_PlayerHologram_C_TickHologramOn::CurveValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_GetCurveColorStart_Curve) == 0x000020, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_GetCurveColorStart_Curve' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_GetCurveColorStart_Curve_1) == 0x000028, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_GetCurveColorStart_Curve_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_GetTimeRange_MinTime) == 0x000034, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_GetTimeRange_MaxTime) == 0x000038, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_RandomFloatInRange_ReturnValue) == 0x00003C, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_GetVectorValue_ReturnValue) == 0x000044, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_GetCurveLoop_Curve) == 0x000050, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_GetCurveLoop_Curve' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_BreakVector_X) == 0x000058, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_BreakVector_Y) == 0x00005C, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_BreakVector_Z) == 0x000060, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_GetCurveStart_Curve) == 0x000068, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_GetCurveStart_Curve' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_GetTimeRange_MinTime_1) == 0x000070, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_GetTimeRange_MinTime_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_GetTimeRange_MaxTime_1) == 0x000074, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_GetTimeRange_MaxTime_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_GetCurveStart_Curve_1) == 0x000078, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_GetCurveStart_Curve_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_SetPlayerHidden_bDummy) == 0x000080, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_SetPlayerHidden_bDummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_Add_FloatFloat_ReturnValue) == 0x000084, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_BreakVector_X_1) == 0x000088, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_BreakVector_Y_1) == 0x00008C, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_BreakVector_Z_1) == 0x000090, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_GetVectorValue_ReturnValue_1) == 0x000094, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_GetVectorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000A0, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000A4, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0000A8, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_GetVectorValue_ReturnValue_2) == 0x0000AC, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_GetVectorValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000B8, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOn, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x0000BC, "Member 'BP_PlayerHologram_C_TickHologramOn::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.TickHologramOff
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerHologram_C_TickHologramOff final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurveVector;                                       // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           CallFunc_GetCurveEnd_Curve;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPlayerHidden_bDummy;                   // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7793[0x1];                                     // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_TickHologramOff) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_TickHologramOff");
static_assert(sizeof(BP_PlayerHologram_C_TickHologramOff) == 0x000050, "Wrong size on BP_PlayerHologram_C_TickHologramOff");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOff, DeltaSeconds) == 0x000000, "Member 'BP_PlayerHologram_C_TickHologramOff::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOff, CurveVector) == 0x000004, "Member 'BP_PlayerHologram_C_TickHologramOff::CurveVector' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOff, CallFunc_GetCurveEnd_Curve) == 0x000010, "Member 'BP_PlayerHologram_C_TickHologramOff::CallFunc_GetCurveEnd_Curve' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOff, CallFunc_GetTimeRange_MinTime) == 0x000018, "Member 'BP_PlayerHologram_C_TickHologramOff::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOff, CallFunc_GetTimeRange_MaxTime) == 0x00001C, "Member 'BP_PlayerHologram_C_TickHologramOff::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOff, CallFunc_BreakVector_X) == 0x000020, "Member 'BP_PlayerHologram_C_TickHologramOff::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOff, CallFunc_BreakVector_Y) == 0x000024, "Member 'BP_PlayerHologram_C_TickHologramOff::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOff, CallFunc_BreakVector_Z) == 0x000028, "Member 'BP_PlayerHologram_C_TickHologramOff::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOff, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_PlayerHologram_C_TickHologramOff::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOff, CallFunc_SetPlayerHidden_bDummy) == 0x00002D, "Member 'BP_PlayerHologram_C_TickHologramOff::CallFunc_SetPlayerHidden_bDummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOff, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00002E, "Member 'BP_PlayerHologram_C_TickHologramOff::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOff, CallFunc_GetVectorValue_ReturnValue) == 0x000030, "Member 'BP_PlayerHologram_C_TickHologramOff::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOff, CallFunc_BreakVector_X_1) == 0x00003C, "Member 'BP_PlayerHologram_C_TickHologramOff::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOff, CallFunc_BreakVector_Y_1) == 0x000040, "Member 'BP_PlayerHologram_C_TickHologramOff::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOff, CallFunc_BreakVector_Z_1) == 0x000044, "Member 'BP_PlayerHologram_C_TickHologramOff::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramOff, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_PlayerHologram_C_TickHologramOff::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.CompleteHologramOff
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerHologram_C_CompleteHologramOff final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerAccessoryEffect_bEquip;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7794[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayerAccessoryEffect_Param;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerStatus_Result;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7795[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7796[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPlayerHidden_bDummy;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_CompleteHologramOff) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_CompleteHologramOff");
static_assert(sizeof(BP_PlayerHologram_C_CompleteHologramOff) == 0x000040, "Wrong size on BP_PlayerHologram_C_CompleteHologramOff");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerHologram_C_CompleteHologramOff::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, CallFunc_GetPlayerAccessoryEffect_bEquip) == 0x000001, "Member 'BP_PlayerHologram_C_CompleteHologramOff::CallFunc_GetPlayerAccessoryEffect_bEquip' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, CallFunc_GetPlayerAccessoryEffect_Param) == 0x000004, "Member 'BP_PlayerHologram_C_CompleteHologramOff::CallFunc_GetPlayerAccessoryEffect_Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, K2Node_MathExpression_ReturnValue) == 0x000008, "Member 'BP_PlayerHologram_C_CompleteHologramOff::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'BP_PlayerHologram_C_CompleteHologramOff::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000D, "Member 'BP_PlayerHologram_C_CompleteHologramOff::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, CallFunc_MakeLiteralBool_ReturnValue) == 0x00000E, "Member 'BP_PlayerHologram_C_CompleteHologramOff::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00000F, "Member 'BP_PlayerHologram_C_CompleteHologramOff::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000010, "Member 'BP_PlayerHologram_C_CompleteHologramOff::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'BP_PlayerHologram_C_CompleteHologramOff::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, CallFunc_IsPlayerStatus_Result) == 0x000019, "Member 'BP_PlayerHologram_C_CompleteHologramOff::CallFunc_IsPlayerStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, CallFunc_IsEnable_ReturnValue) == 0x00001A, "Member 'BP_PlayerHologram_C_CompleteHologramOff::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, CallFunc_IsValid_ReturnValue_2) == 0x00001B, "Member 'BP_PlayerHologram_C_CompleteHologramOff::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, CallFunc_getMesh_mesh) == 0x000020, "Member 'BP_PlayerHologram_C_CompleteHologramOff::CallFunc_getMesh_mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'BP_PlayerHologram_C_CompleteHologramOff::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, Temp_int_Variable) == 0x000030, "Member 'BP_PlayerHologram_C_CompleteHologramOff::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000034, "Member 'BP_PlayerHologram_C_CompleteHologramOff::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_PlayerHologram_C_CompleteHologramOff::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, CallFunc_IsValid_ReturnValue_3) == 0x00003C, "Member 'BP_PlayerHologram_C_CompleteHologramOff::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CompleteHologramOff, CallFunc_SetPlayerHidden_bDummy) == 0x00003D, "Member 'BP_PlayerHologram_C_CompleteHologramOff::CallFunc_SetPlayerHidden_bDummy' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.SetHologramMaterial
// 0x0110 (0x0110 - 0x0000)
struct BP_PlayerHologram_C_SetHologramMaterial final
{
public:
	float                                         NoiseRate;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VisibleRate;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveRate;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7797[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponBase_C*                       LWeapon;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7798[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7799[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_779A[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_779B[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AttachmentManageComponent_C*        CallFunc_GetAttachmentManageComponent_Manager;     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CallFunc_GetMeshAll_MeshList;                      // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AttachmentManageComponent_C*        CallFunc_GetAttachmentManageComponent_Manager_1;   // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_779C[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_GetMeshAll_MeshList_1;                    // 0x0090(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_779D[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_779E[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetCopyMesh_CopyMeshList;                 // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_779F[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetExtraMesh_ExtraMesh;                   // 0x00D8(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeapon_Weapon;                         // 0x00E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_SetHologramMaterial) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_SetHologramMaterial");
static_assert(sizeof(BP_PlayerHologram_C_SetHologramMaterial) == 0x000110, "Wrong size on BP_PlayerHologram_C_SetHologramMaterial");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, NoiseRate) == 0x000000, "Member 'BP_PlayerHologram_C_SetHologramMaterial::NoiseRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, VisibleRate) == 0x000004, "Member 'BP_PlayerHologram_C_SetHologramMaterial::VisibleRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, EmissiveRate) == 0x000008, "Member 'BP_PlayerHologram_C_SetHologramMaterial::EmissiveRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, LWeapon) == 0x000010, "Member 'BP_PlayerHologram_C_SetHologramMaterial::LWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, Temp_int_Loop_Num_Variable) == 0x000018, "Member 'BP_PlayerHologram_C_SetHologramMaterial::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_PlayerHologram_C_SetHologramMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_PlayerHologram_C_SetHologramMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'BP_PlayerHologram_C_SetHologramMaterial::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, Temp_int_Loop_Num_Variable_1) == 0x00002C, "Member 'BP_PlayerHologram_C_SetHologramMaterial::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'BP_PlayerHologram_C_SetHologramMaterial::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, Temp_int_Array_Index_Variable_2) == 0x00003C, "Member 'BP_PlayerHologram_C_SetHologramMaterial::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, Temp_int_Loop_Counter_Variable_2) == 0x000040, "Member 'BP_PlayerHologram_C_SetHologramMaterial::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_Less_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_Add_IntInt_ReturnValue_2) == 0x000048, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, Temp_int_Loop_Num_Variable_2) == 0x00004C, "Member 'BP_PlayerHologram_C_SetHologramMaterial::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_Less_IntInt_ReturnValue_2) == 0x000050, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, Temp_int_Loop_Counter_Variable_3) == 0x000054, "Member 'BP_PlayerHologram_C_SetHologramMaterial::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_Add_IntInt_ReturnValue_3) == 0x000058, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_GetAttachmentManageComponent_Manager) == 0x000060, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_GetAttachmentManageComponent_Manager' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_GetMeshAll_MeshList) == 0x000068, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_GetMeshAll_MeshList' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, Temp_int_Array_Index_Variable_3) == 0x00007C, "Member 'BP_PlayerHologram_C_SetHologramMaterial::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_GetAttachmentManageComponent_Manager_1) == 0x000080, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_GetAttachmentManageComponent_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_GetMeshAll_MeshList_1) == 0x000090, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_GetMeshAll_MeshList_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_IsValid_ReturnValue_2) == 0x0000A4, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, Temp_int_Loop_Num_Variable_3) == 0x0000A8, "Member 'BP_PlayerHologram_C_SetHologramMaterial::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000AC, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_GetCopyMesh_CopyMeshList) == 0x0000B0, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_GetCopyMesh_CopyMeshList' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_IsValid_ReturnValue_3) == 0x0000D0, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_IsValid_ReturnValue_4) == 0x0000D1, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000D2, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0000D3, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D4, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_GetExtraMesh_ExtraMesh) == 0x0000D8, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_GetExtraMesh_ExtraMesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_GetWeapon_Weapon) == 0x0000E8, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_GetWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_Array_Length_ReturnValue_2) == 0x0000F8, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_Array_Length_ReturnValue_3) == 0x0000FC, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_getMesh_mesh) == 0x000100, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_getMesh_mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterial, CallFunc_IsValid_ReturnValue_5) == 0x000108, "Member 'BP_PlayerHologram_C_SetHologramMaterial::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.SetAttachPlayerMaterial
// 0x0110 (0x0110 - 0x0000)
struct BP_PlayerHologram_C_SetAttachPlayerMaterial final
{
public:
	float                                         VisibleRate;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       LWeapon;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77A0[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77A1[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77A2[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77A3[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77A4[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77A5[0x1];                                     // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_GetPlayerWeaponList_self_CastInput;       // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetPlayerWeaponList_WeaponList;           // 0x0090(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77A6[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetExtraMesh_ExtraMesh;                   // 0x00A8(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77A7[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_GetSASCodeActorList_self_CastInput;       // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABP_CableBase_C*>                CallFunc_GetSASCodeActorList_CodeList;             // 0x00D0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_GetBrainCodeActorList_self_CastInput;     // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABP_CableBase_C*>                CallFunc_GetBrainCodeActorList_CodeList;           // 0x00F8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_SetAttachPlayerMaterial) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_SetAttachPlayerMaterial");
static_assert(sizeof(BP_PlayerHologram_C_SetAttachPlayerMaterial) == 0x000110, "Wrong size on BP_PlayerHologram_C_SetAttachPlayerMaterial");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, VisibleRate) == 0x000000, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::VisibleRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, Rate) == 0x000004, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::Rate' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, LWeapon) == 0x000008, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::LWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, Temp_int_Variable) == 0x000010, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, Temp_int_Variable_1) == 0x000014, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Conv_IntToByte_ReturnValue) == 0x000018, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_GetValidValue_ReturnValue) == 0x000020, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000021, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000022, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000024, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, Temp_int_Loop_Num_Variable_1) == 0x00003C, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Add_IntInt_ReturnValue_2) == 0x000048, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, Temp_int_Loop_Counter_Variable_2) == 0x00004C, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, Temp_int_Loop_Counter_Variable_3) == 0x000050, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Add_IntInt_ReturnValue_3) == 0x000054, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Less_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Add_IntInt_ReturnValue_4) == 0x00005C, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, Temp_int_Array_Index_Variable_2) == 0x000060, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, Temp_int_Loop_Num_Variable_2) == 0x000064, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Less_IntInt_ReturnValue_2) == 0x000068, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_MakeLiteralInt_ReturnValue) == 0x00006C, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, Temp_int_Loop_Num_Variable_3) == 0x000070, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Less_IntInt_ReturnValue_3) == 0x000074, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Less_IntInt_ReturnValue_4) == 0x000075, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000076, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000078, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, Temp_int_Array_Index_Variable_3) == 0x00007C, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_GetPlayerWeaponList_self_CastInput) == 0x000080, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_GetPlayerWeaponList_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_GetPlayerWeaponList_WeaponList) == 0x000090, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_GetPlayerWeaponList_WeaponList' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_GetExtraMesh_ExtraMesh) == 0x0000A8, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_GetExtraMesh_ExtraMesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_GetSASCodeActorList_self_CastInput) == 0x0000C0, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_GetSASCodeActorList_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_GetSASCodeActorList_CodeList) == 0x0000D0, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_GetSASCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Array_Length_ReturnValue_2) == 0x0000E0, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000E4, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_GetBrainCodeActorList_self_CastInput) == 0x0000E8, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_GetBrainCodeActorList_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_GetBrainCodeActorList_CodeList) == 0x0000F8, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_GetBrainCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_Array_Length_ReturnValue_3) == 0x000108, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAttachPlayerMaterial, CallFunc_IsValid_ReturnValue) == 0x00010C, "Member 'BP_PlayerHologram_C_SetAttachPlayerMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.PlayAnimationSequence
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerHologram_C_PlayAnimationSequence final
{
public:
	EPlayerID                                     InPlayerID;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerHologramAnimKind                       InAnimKind;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77A8[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77A9[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRSPlayerHologramAnimInstanceInterface> K2Node_DynamicCast_AsRSPlayer_Hologram_Anim_Instance_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77AA[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRSPlayerHologramAnimInstanceInterface> K2Node_DynamicCast_AsRSPlayer_Hologram_Anim_Instance_Interface_1; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_PlayAnimationSequence) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_PlayAnimationSequence");
static_assert(sizeof(BP_PlayerHologram_C_PlayAnimationSequence) == 0x000050, "Wrong size on BP_PlayerHologram_C_PlayAnimationSequence");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimationSequence, InPlayerID) == 0x000000, "Member 'BP_PlayerHologram_C_PlayAnimationSequence::InPlayerID' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimationSequence, InAnimKind) == 0x000001, "Member 'BP_PlayerHologram_C_PlayAnimationSequence::InAnimKind' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimationSequence, CallFunc_getMesh_mesh) == 0x000008, "Member 'BP_PlayerHologram_C_PlayAnimationSequence::CallFunc_getMesh_mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimationSequence, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerHologram_C_PlayAnimationSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimationSequence, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'BP_PlayerHologram_C_PlayAnimationSequence::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimationSequence, K2Node_DynamicCast_AsRSPlayer_Hologram_Anim_Instance_Interface) == 0x000020, "Member 'BP_PlayerHologram_C_PlayAnimationSequence::K2Node_DynamicCast_AsRSPlayer_Hologram_Anim_Instance_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimationSequence, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_PlayerHologram_C_PlayAnimationSequence::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimationSequence, K2Node_DynamicCast_AsRSPlayer_Hologram_Anim_Instance_Interface_1) == 0x000038, "Member 'BP_PlayerHologram_C_PlayAnimationSequence::K2Node_DynamicCast_AsRSPlayer_Hologram_Anim_Instance_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimationSequence, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_PlayerHologram_C_PlayAnimationSequence::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.PlayAnimationCommon
// 0x00B8 (0x00B8 - 0x0000)
struct BP_PlayerHologram_C_PlayAnimationCommon final
{
public:
	EPlayerID                                     InPlayerID;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHologramKind                                 Param_HologramKind;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77AB[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LNewAttachPlayer;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0010(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77AC[0x6];                                     // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_PlayAnimationCommon) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_PlayAnimationCommon");
static_assert(sizeof(BP_PlayerHologram_C_PlayAnimationCommon) == 0x0000B8, "Wrong size on BP_PlayerHologram_C_PlayAnimationCommon");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimationCommon, InPlayerID) == 0x000000, "Member 'BP_PlayerHologram_C_PlayAnimationCommon::InPlayerID' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimationCommon, Param_HologramKind) == 0x000001, "Member 'BP_PlayerHologram_C_PlayAnimationCommon::Param_HologramKind' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimationCommon, LNewAttachPlayer) == 0x000008, "Member 'BP_PlayerHologram_C_PlayAnimationCommon::LNewAttachPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimationCommon, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000010, "Member 'BP_PlayerHologram_C_PlayAnimationCommon::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimationCommon, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000098, "Member 'BP_PlayerHologram_C_PlayAnimationCommon::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimationCommon, CallFunc_IsValid_ReturnValue) == 0x000099, "Member 'BP_PlayerHologram_C_PlayAnimationCommon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimationCommon, CallFunc_GetPlayerManager_PlayerManager) == 0x0000A0, "Member 'BP_PlayerHologram_C_PlayAnimationCommon::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimationCommon, CallFunc_GetMainPlayer_Player) == 0x0000A8, "Member 'BP_PlayerHologram_C_PlayAnimationCommon::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_PlayAnimationCommon, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000B0, "Member 'BP_PlayerHologram_C_PlayAnimationCommon::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.UpdateHologram
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerHologram_C_UpdateHologram final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77AD[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LMoveTransform;                                    // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         LHologramUpdateSeconds;                            // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77AE[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentCustomTimeDilation_CustomTimeDilation; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_UpdateHologram) == 0x000010, "Wrong alignment on BP_PlayerHologram_C_UpdateHologram");
static_assert(sizeof(BP_PlayerHologram_C_UpdateHologram) == 0x000060, "Wrong size on BP_PlayerHologram_C_UpdateHologram");
static_assert(offsetof(BP_PlayerHologram_C_UpdateHologram, DeltaSeconds) == 0x000000, "Member 'BP_PlayerHologram_C_UpdateHologram::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_UpdateHologram, LMoveTransform) == 0x000010, "Member 'BP_PlayerHologram_C_UpdateHologram::LMoveTransform' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_UpdateHologram, LHologramUpdateSeconds) == 0x000040, "Member 'BP_PlayerHologram_C_UpdateHologram::LHologramUpdateSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_UpdateHologram, CallFunc_GetGameSystemManager_Manager) == 0x000048, "Member 'BP_PlayerHologram_C_UpdateHologram::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_UpdateHologram, CallFunc_GetCurrentCustomTimeDilation_CustomTimeDilation) == 0x000050, "Member 'BP_PlayerHologram_C_UpdateHologram::CallFunc_GetCurrentCustomTimeDilation_CustomTimeDilation' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_UpdateHologram, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_PlayerHologram_C_UpdateHologram::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.IsUseHologram
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerHologram_C_IsUseHologram final
{
public:
	bool                                          bUse;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActorTickEnabled_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_IsUseHologram) == 0x000001, "Wrong alignment on BP_PlayerHologram_C_IsUseHologram");
static_assert(sizeof(BP_PlayerHologram_C_IsUseHologram) == 0x000002, "Wrong size on BP_PlayerHologram_C_IsUseHologram");
static_assert(offsetof(BP_PlayerHologram_C_IsUseHologram, bUse) == 0x000000, "Member 'BP_PlayerHologram_C_IsUseHologram::bUse' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_IsUseHologram, CallFunc_IsActorTickEnabled_ReturnValue) == 0x000001, "Member 'BP_PlayerHologram_C_IsUseHologram::CallFunc_IsActorTickEnabled_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.NotifyHologramAttackCh0800
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerHologram_C_NotifyHologramAttackCh0800 final
{
public:
	class AActor*                                 CallFunc_GetCurrentTargetActor_TargetActor;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_NotifyHologramAttackCh0800) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_NotifyHologramAttackCh0800");
static_assert(sizeof(BP_PlayerHologram_C_NotifyHologramAttackCh0800) == 0x000018, "Wrong size on BP_PlayerHologram_C_NotifyHologramAttackCh0800");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0800, CallFunc_GetCurrentTargetActor_TargetActor) == 0x000000, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0800::CallFunc_GetCurrentTargetActor_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0800, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000008, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0800::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0800, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0800::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.CopyOn
// 0x0110 (0x0110 - 0x0000)
struct BP_PlayerHologram_C_CopyOn final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77AF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        LLocationList;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LMesh;                                             // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AttachmentManageComponent_C*        CallFunc_GetAttachmentManageComponent_Manager;     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77B0[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x002C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_77B1[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetCopyMesh_CopyMeshList;                 // 0x00E8(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_2;                         // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_Array_Get_Item_3;                         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_CopyOn) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_CopyOn");
static_assert(sizeof(BP_PlayerHologram_C_CopyOn) == 0x000110, "Wrong size on BP_PlayerHologram_C_CopyOn");
static_assert(offsetof(BP_PlayerHologram_C_CopyOn, Param_Index) == 0x000000, "Member 'BP_PlayerHologram_C_CopyOn::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOn, LLocationList) == 0x000008, "Member 'BP_PlayerHologram_C_CopyOn::LLocationList' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOn, LMesh) == 0x000018, "Member 'BP_PlayerHologram_C_CopyOn::LMesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOn, CallFunc_GetAttachmentManageComponent_Manager) == 0x000020, "Member 'BP_PlayerHologram_C_CopyOn::CallFunc_GetAttachmentManageComponent_Manager' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOn, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_PlayerHologram_C_CopyOn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOn, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x00002C, "Member 'BP_PlayerHologram_C_CopyOn::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOn, CallFunc_GetAnimInstance_ReturnValue) == 0x0000B8, "Member 'BP_PlayerHologram_C_CopyOn::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOn, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_PlayerHologram_C_CopyOn::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOn, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_PlayerHologram_C_CopyOn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOn, K2Node_MakeArray_Array) == 0x0000C8, "Member 'BP_PlayerHologram_C_CopyOn::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOn, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'BP_PlayerHologram_C_CopyOn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOn, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'BP_PlayerHologram_C_CopyOn::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOn, CallFunc_GetCopyMesh_CopyMeshList) == 0x0000E8, "Member 'BP_PlayerHologram_C_CopyOn::CallFunc_GetCopyMesh_CopyMeshList' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOn, CallFunc_Array_Get_Item_2) == 0x0000F8, "Member 'BP_PlayerHologram_C_CopyOn::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOn, CallFunc_Array_Get_Item_3) == 0x000100, "Member 'BP_PlayerHologram_C_CopyOn::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOn, CallFunc_Montage_Play_ReturnValue) == 0x000108, "Member 'BP_PlayerHologram_C_CopyOn::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOn, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00010C, "Member 'BP_PlayerHologram_C_CopyOn::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.CopyOff
// 0x0058 (0x0058 - 0x0000)
struct BP_PlayerHologram_C_CopyOff final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77B2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AttachmentManageComponent_C*        CallFunc_GetAttachmentManageComponent_Manager;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77B3[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77B4[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetCopyMesh_CopyMeshList;                 // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77B5[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponBase_C*                       CallFunc_Array_Get_Item_2;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_CopyOff) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_CopyOff");
static_assert(sizeof(BP_PlayerHologram_C_CopyOff) == 0x000058, "Wrong size on BP_PlayerHologram_C_CopyOff");
static_assert(offsetof(BP_PlayerHologram_C_CopyOff, Param_Index) == 0x000000, "Member 'BP_PlayerHologram_C_CopyOff::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOff, CallFunc_GetAttachmentManageComponent_Manager) == 0x000008, "Member 'BP_PlayerHologram_C_CopyOff::CallFunc_GetAttachmentManageComponent_Manager' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOff, CallFunc_Multiply_IntInt_ReturnValue) == 0x000010, "Member 'BP_PlayerHologram_C_CopyOff::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOff, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_PlayerHologram_C_CopyOff::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOff, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_PlayerHologram_C_CopyOff::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOff, CallFunc_GetCopyMesh_CopyMeshList) == 0x000020, "Member 'BP_PlayerHologram_C_CopyOff::CallFunc_GetCopyMesh_CopyMeshList' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOff, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_PlayerHologram_C_CopyOff::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOff, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'BP_PlayerHologram_C_CopyOff::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOff, CallFunc_GetAnimInstance_ReturnValue) == 0x000040, "Member 'BP_PlayerHologram_C_CopyOff::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOff, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000048, "Member 'BP_PlayerHologram_C_CopyOff::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CopyOff, CallFunc_Array_Get_Item_2) == 0x000050, "Member 'BP_PlayerHologram_C_CopyOff::CallFunc_Array_Get_Item_2' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.GetCopyMesh
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerHologram_C_GetCopyMesh final
{
public:
	TArray<class USkeletalMeshComponent*>         CopyMeshList;                                      // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_GetCopyMesh) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_GetCopyMesh");
static_assert(sizeof(BP_PlayerHologram_C_GetCopyMesh) == 0x000020, "Wrong size on BP_PlayerHologram_C_GetCopyMesh");
static_assert(offsetof(BP_PlayerHologram_C_GetCopyMesh, CopyMeshList) == 0x000000, "Member 'BP_PlayerHologram_C_GetCopyMesh::CopyMeshList' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetCopyMesh, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_PlayerHologram_C_GetCopyMesh::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.InitializeCopy
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerHologram_C_InitializeCopy final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77B6[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetCopyMesh_CopyMeshList;                 // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77B7[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRSPlayerHologramAnimInstanceInterface> K2Node_DynamicCast_AsRSPlayer_Hologram_Anim_Instance_Interface; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77B8[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_InitializeCopy) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_InitializeCopy");
static_assert(sizeof(BP_PlayerHologram_C_InitializeCopy) == 0x000050, "Wrong size on BP_PlayerHologram_C_InitializeCopy");
static_assert(offsetof(BP_PlayerHologram_C_InitializeCopy, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_PlayerHologram_C_InitializeCopy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeCopy, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_PlayerHologram_C_InitializeCopy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeCopy, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_PlayerHologram_C_InitializeCopy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeCopy, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_PlayerHologram_C_InitializeCopy::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeCopy, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_PlayerHologram_C_InitializeCopy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeCopy, Temp_int_Variable) == 0x000014, "Member 'BP_PlayerHologram_C_InitializeCopy::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeCopy, CallFunc_GetCopyMesh_CopyMeshList) == 0x000018, "Member 'BP_PlayerHologram_C_InitializeCopy::CallFunc_GetCopyMesh_CopyMeshList' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeCopy, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_PlayerHologram_C_InitializeCopy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeCopy, CallFunc_GetAnimInstance_ReturnValue) == 0x000030, "Member 'BP_PlayerHologram_C_InitializeCopy::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeCopy, K2Node_DynamicCast_AsRSPlayer_Hologram_Anim_Instance_Interface) == 0x000038, "Member 'BP_PlayerHologram_C_InitializeCopy::K2Node_DynamicCast_AsRSPlayer_Hologram_Anim_Instance_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeCopy, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_PlayerHologram_C_InitializeCopy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeCopy, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000049, "Member 'BP_PlayerHologram_C_InitializeCopy::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeCopy, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_PlayerHologram_C_InitializeCopy::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.NotifyBeginCh0900
// 0x00F0 (0x00F0 - 0x0000)
struct BP_PlayerHologram_C_NotifyBeginCh0900 final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77B9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77BA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttackCollisionInfoBP                 K2Node_MakeStruct_AttackCollisionInfoBP;           // 0x0010(0x00C0)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77BB[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentTargetActor_TargetActor;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcArrowRainLocation_Location;           // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Fire_bSuccess;                            // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_NotifyBeginCh0900) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_NotifyBeginCh0900");
static_assert(sizeof(BP_PlayerHologram_C_NotifyBeginCh0900) == 0x0000F0, "Wrong size on BP_PlayerHologram_C_NotifyBeginCh0900");
static_assert(offsetof(BP_PlayerHologram_C_NotifyBeginCh0900, Param) == 0x000000, "Member 'BP_PlayerHologram_C_NotifyBeginCh0900::Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyBeginCh0900, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_PlayerHologram_C_NotifyBeginCh0900::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyBeginCh0900, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_PlayerHologram_C_NotifyBeginCh0900::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyBeginCh0900, K2Node_MakeStruct_AttackCollisionInfoBP) == 0x000010, "Member 'BP_PlayerHologram_C_NotifyBeginCh0900::K2Node_MakeStruct_AttackCollisionInfoBP' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyBeginCh0900, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'BP_PlayerHologram_C_NotifyBeginCh0900::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyBeginCh0900, CallFunc_GetCurrentTargetActor_TargetActor) == 0x0000D8, "Member 'BP_PlayerHologram_C_NotifyBeginCh0900::CallFunc_GetCurrentTargetActor_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyBeginCh0900, CallFunc_CalcArrowRainLocation_Location) == 0x0000E0, "Member 'BP_PlayerHologram_C_NotifyBeginCh0900::CallFunc_CalcArrowRainLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyBeginCh0900, CallFunc_Fire_bSuccess) == 0x0000EC, "Member 'BP_PlayerHologram_C_NotifyBeginCh0900::CallFunc_Fire_bSuccess' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.NotifyEndCh0900
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_NotifyEndCh0900 final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77BC[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_NotifyEndCh0900) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_NotifyEndCh0900");
static_assert(sizeof(BP_PlayerHologram_C_NotifyEndCh0900) == 0x000010, "Wrong size on BP_PlayerHologram_C_NotifyEndCh0900");
static_assert(offsetof(BP_PlayerHologram_C_NotifyEndCh0900, Param) == 0x000000, "Member 'BP_PlayerHologram_C_NotifyEndCh0900::Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyEndCh0900, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_PlayerHologram_C_NotifyEndCh0900::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyEndCh0900, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_PlayerHologram_C_NotifyEndCh0900::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyEndCh0900, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_PlayerHologram_C_NotifyEndCh0900::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.SetAimRotator
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerHologram_C_SetAimRotator final
{
public:
	struct FRotator                               Rotate;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77BD[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77BE[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRSPlayerHologramAnimInstanceInterface> K2Node_DynamicCast_AsRSPlayer_Hologram_Anim_Instance_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_SetAimRotator) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_SetAimRotator");
static_assert(sizeof(BP_PlayerHologram_C_SetAimRotator) == 0x000040, "Wrong size on BP_PlayerHologram_C_SetAimRotator");
static_assert(offsetof(BP_PlayerHologram_C_SetAimRotator, Rotate) == 0x000000, "Member 'BP_PlayerHologram_C_SetAimRotator::Rotate' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAimRotator, CallFunc_getMesh_mesh) == 0x000010, "Member 'BP_PlayerHologram_C_SetAimRotator::CallFunc_getMesh_mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAimRotator, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'BP_PlayerHologram_C_SetAimRotator::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAimRotator, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PlayerHologram_C_SetAimRotator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAimRotator, K2Node_DynamicCast_AsRSPlayer_Hologram_Anim_Instance_Interface) == 0x000028, "Member 'BP_PlayerHologram_C_SetAimRotator::K2Node_DynamicCast_AsRSPlayer_Hologram_Anim_Instance_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetAimRotator, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_PlayerHologram_C_SetAimRotator::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.GetSocketLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerHologram_C_GetSocketLocation final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77BF[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_GetSocketLocation) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_GetSocketLocation");
static_assert(sizeof(BP_PlayerHologram_C_GetSocketLocation) == 0x000030, "Wrong size on BP_PlayerHologram_C_GetSocketLocation");
static_assert(offsetof(BP_PlayerHologram_C_GetSocketLocation, SocketName) == 0x000000, "Member 'BP_PlayerHologram_C_GetSocketLocation::SocketName' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetSocketLocation, Location) == 0x000008, "Member 'BP_PlayerHologram_C_GetSocketLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetSocketLocation, CallFunc_getMesh_mesh) == 0x000018, "Member 'BP_PlayerHologram_C_GetSocketLocation::CallFunc_getMesh_mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetSocketLocation, CallFunc_GetSocketLocation_ReturnValue) == 0x000020, "Member 'BP_PlayerHologram_C_GetSocketLocation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetSocketLocation, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_PlayerHologram_C_GetSocketLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.NotifyBeginCh0500
// 0x0108 (0x0108 - 0x0000)
struct BP_PlayerHologram_C_NotifyBeginCh0500 final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77C0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttackCollisionInfoBP                 LCollisionInfo;                                    // 0x0008(0x00C0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FVector                                LAttackBeginLocation;                              // 0x00C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAttack_bAttack;                         // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77C1[0x2];                                     // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Fire_bSuccess;                            // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77C2[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_NotifyBeginCh0500) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_NotifyBeginCh0500");
static_assert(sizeof(BP_PlayerHologram_C_NotifyBeginCh0500) == 0x000108, "Wrong size on BP_PlayerHologram_C_NotifyBeginCh0500");
static_assert(offsetof(BP_PlayerHologram_C_NotifyBeginCh0500, Param) == 0x000000, "Member 'BP_PlayerHologram_C_NotifyBeginCh0500::Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyBeginCh0500, LCollisionInfo) == 0x000008, "Member 'BP_PlayerHologram_C_NotifyBeginCh0500::LCollisionInfo' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyBeginCh0500, LAttackBeginLocation) == 0x0000C8, "Member 'BP_PlayerHologram_C_NotifyBeginCh0500::LAttackBeginLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyBeginCh0500, Temp_name_Variable) == 0x0000D4, "Member 'BP_PlayerHologram_C_NotifyBeginCh0500::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyBeginCh0500, Temp_name_Variable_1) == 0x0000DC, "Member 'BP_PlayerHologram_C_NotifyBeginCh0500::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyBeginCh0500, CallFunc_IsAttack_bAttack) == 0x0000E4, "Member 'BP_PlayerHologram_C_NotifyBeginCh0500::CallFunc_IsAttack_bAttack' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyBeginCh0500, CallFunc_IsValid_ReturnValue) == 0x0000E5, "Member 'BP_PlayerHologram_C_NotifyBeginCh0500::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyBeginCh0500, Temp_int_Variable) == 0x0000E8, "Member 'BP_PlayerHologram_C_NotifyBeginCh0500::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyBeginCh0500, K2Node_Select_Default) == 0x0000EC, "Member 'BP_PlayerHologram_C_NotifyBeginCh0500::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyBeginCh0500, CallFunc_Fire_bSuccess) == 0x0000F4, "Member 'BP_PlayerHologram_C_NotifyBeginCh0500::CallFunc_Fire_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyBeginCh0500, CallFunc_GetSocketLocation_ReturnValue) == 0x0000F8, "Member 'BP_PlayerHologram_C_NotifyBeginCh0500::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.NotifyEndCh0500
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerHologram_C_NotifyEndCh0500 final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_NotifyEndCh0500) == 0x000001, "Wrong alignment on BP_PlayerHologram_C_NotifyEndCh0500");
static_assert(sizeof(BP_PlayerHologram_C_NotifyEndCh0500) == 0x000001, "Wrong size on BP_PlayerHologram_C_NotifyEndCh0500");
static_assert(offsetof(BP_PlayerHologram_C_NotifyEndCh0500, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerHologram_C_NotifyEndCh0500::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.SetHologramVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerHologram_C_SetHologramVisibility final
{
public:
	bool                                          bVisibility;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_SetHologramVisibility) == 0x000001, "Wrong alignment on BP_PlayerHologram_C_SetHologramVisibility");
static_assert(sizeof(BP_PlayerHologram_C_SetHologramVisibility) == 0x000001, "Wrong size on BP_PlayerHologram_C_SetHologramVisibility");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramVisibility, bVisibility) == 0x000000, "Member 'BP_PlayerHologram_C_SetHologramVisibility::bVisibility' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.OnHitThrowWeapon
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerHologram_C_OnHitThrowWeapon final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77C3[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_OnHitThrowWeapon) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_OnHitThrowWeapon");
static_assert(sizeof(BP_PlayerHologram_C_OnHitThrowWeapon) == 0x000020, "Wrong size on BP_PlayerHologram_C_OnHitThrowWeapon");
static_assert(offsetof(BP_PlayerHologram_C_OnHitThrowWeapon, HitLocation) == 0x000000, "Member 'BP_PlayerHologram_C_OnHitThrowWeapon::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnHitThrowWeapon, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000010, "Member 'BP_PlayerHologram_C_OnHitThrowWeapon::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnHitThrowWeapon, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_PlayerHologram_C_OnHitThrowWeapon::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.InitializeHologramMaterial
// 0x00F8 (0x00F8 - 0x0000)
struct BP_PlayerHologram_C_InitializeHologramMaterial final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77C4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CopyMeshLastIndex;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CopyMaterials;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CopyMesh;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 TargetMesh;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77C5[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77C6[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetMaterialParameterHologramDefaultLineColor_Color; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77C7[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0080(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77C8[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77C9[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77CA[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77CB[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetCopyMesh_CopyMeshList;                 // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_2;                         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_3;                         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue_1;               // 0x00D0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77CC[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_InitializeHologramMaterial) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_InitializeHologramMaterial");
static_assert(sizeof(BP_PlayerHologram_C_InitializeHologramMaterial) == 0x0000F8, "Wrong size on BP_PlayerHologram_C_InitializeHologramMaterial");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, PlayerId) == 0x000000, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CopyMeshLastIndex) == 0x000004, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CopyMeshLastIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CopyMaterials) == 0x000008, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CopyMaterials' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CopyMesh) == 0x000018, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CopyMesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, TargetMesh) == 0x000020, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::TargetMesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, Temp_int_Loop_Num_Variable) == 0x00002C, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, Temp_int_Variable) == 0x000030, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_GetMaterialParameterHologramDefaultLineColor_Color) == 0x000048, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_GetMaterialParameterHologramDefaultLineColor_Color' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_Add_IntInt_ReturnValue_2) == 0x00005C, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, Temp_int_Loop_Num_Variable_1) == 0x000064, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, Temp_int_Variable_1) == 0x00006C, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_GetMaterials_ReturnValue) == 0x000080, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000090, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_Add_IntInt_ReturnValue_3) == 0x000094, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000098, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_Array_LastIndex_ReturnValue) == 0x00009C, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000A4, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, Temp_int_Array_Index_Variable_1) == 0x0000A8, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_IsValid_ReturnValue_1) == 0x0000AC, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_IsValid_ReturnValue_2) == 0x0000AD, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_GetCopyMesh_CopyMeshList) == 0x0000B0, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_GetCopyMesh_CopyMeshList' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_Array_Get_Item_2) == 0x0000C0, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_Array_Get_Item_3) == 0x0000C8, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_GetMaterials_ReturnValue_1) == 0x0000D0, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_GetMaterials_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0000E0, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0000E4, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, CallFunc_getMesh_mesh) == 0x0000E8, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::CallFunc_getMesh_mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterial, K2Node_SwitchEnum_CmpSuccess) == 0x0000F0, "Member 'BP_PlayerHologram_C_InitializeHologramMaterial::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.InitializeHologramMaterialMesh
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerHologram_C_InitializeHologramMaterialMesh final
{
public:
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Weapon;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77CD[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 TargetMesh;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_InitializeHologramMaterialMesh) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_InitializeHologramMaterialMesh");
static_assert(sizeof(BP_PlayerHologram_C_InitializeHologramMaterialMesh) == 0x000018, "Wrong size on BP_PlayerHologram_C_InitializeHologramMaterialMesh");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterialMesh, SkelMeshComp) == 0x000000, "Member 'BP_PlayerHologram_C_InitializeHologramMaterialMesh::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterialMesh, Weapon) == 0x000008, "Member 'BP_PlayerHologram_C_InitializeHologramMaterialMesh::Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_InitializeHologramMaterialMesh, TargetMesh) == 0x000010, "Member 'BP_PlayerHologram_C_InitializeHologramMaterialMesh::TargetMesh' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.NotifyHologramAttackCh0100
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_NotifyHologramAttackCh0100 final
{
public:
	class AActor*                                 CallFunc_GetCurrentTargetActor_TargetActor;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_NotifyHologramAttackCh0100) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_NotifyHologramAttackCh0100");
static_assert(sizeof(BP_PlayerHologram_C_NotifyHologramAttackCh0100) == 0x000010, "Wrong size on BP_PlayerHologram_C_NotifyHologramAttackCh0100");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0100, CallFunc_GetCurrentTargetActor_TargetActor) == 0x000000, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0100::CallFunc_GetCurrentTargetActor_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0100, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0100::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.SetHologramMaterialMeshInternal
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerHologram_C_SetHologramMaterialMeshInternal final
{
public:
	class UMeshComponent*                         MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NoiseRate;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VisibleRate;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveRate;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77CE[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponBase_C*                       LWeapon;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_SetHologramMaterialMeshInternal) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_SetHologramMaterialMeshInternal");
static_assert(sizeof(BP_PlayerHologram_C_SetHologramMaterialMeshInternal) == 0x000020, "Wrong size on BP_PlayerHologram_C_SetHologramMaterialMeshInternal");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterialMeshInternal, MeshComp) == 0x000000, "Member 'BP_PlayerHologram_C_SetHologramMaterialMeshInternal::MeshComp' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterialMeshInternal, NoiseRate) == 0x000008, "Member 'BP_PlayerHologram_C_SetHologramMaterialMeshInternal::NoiseRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterialMeshInternal, VisibleRate) == 0x00000C, "Member 'BP_PlayerHologram_C_SetHologramMaterialMeshInternal::VisibleRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterialMeshInternal, EmissiveRate) == 0x000010, "Member 'BP_PlayerHologram_C_SetHologramMaterialMeshInternal::EmissiveRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetHologramMaterialMeshInternal, LWeapon) == 0x000018, "Member 'BP_PlayerHologram_C_SetHologramMaterialMeshInternal::LWeapon' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.DebugUpdate
// 0x0048 (0x0048 - 0x0000)
struct BP_PlayerHologram_C_DebugUpdate final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeapon_Weapon;                         // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77CF[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77D0[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_DebugUpdate) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_DebugUpdate");
static_assert(sizeof(BP_PlayerHologram_C_DebugUpdate) == 0x000048, "Wrong size on BP_PlayerHologram_C_DebugUpdate");
static_assert(offsetof(BP_PlayerHologram_C_DebugUpdate, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_PlayerHologram_C_DebugUpdate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DebugUpdate, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_PlayerHologram_C_DebugUpdate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DebugUpdate, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_PlayerHologram_C_DebugUpdate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DebugUpdate, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_PlayerHologram_C_DebugUpdate::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DebugUpdate, CallFunc_GetWeapon_Weapon) == 0x000010, "Member 'BP_PlayerHologram_C_DebugUpdate::CallFunc_GetWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DebugUpdate, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_PlayerHologram_C_DebugUpdate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DebugUpdate, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'BP_PlayerHologram_C_DebugUpdate::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DebugUpdate, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_PlayerHologram_C_DebugUpdate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DebugUpdate, CallFunc_GetDebuggingManager_Manager) == 0x000038, "Member 'BP_PlayerHologram_C_DebugUpdate::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DebugUpdate, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_PlayerHologram_C_DebugUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DebugUpdate, K2Node_SwitchEnum_CmpSuccess) == 0x000041, "Member 'BP_PlayerHologram_C_DebugUpdate::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.AddScar
// 0x0120 (0x0120 - 0x0000)
struct BP_PlayerHologram_C_AddScar final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotateAngle;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LRIGHT;                                            // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LUpper;                                            // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LForward;                                          // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LLocation;                                         // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsNearlyZero_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77D1[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77D2[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetCurrentTargetActor_TargetActor;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77D3[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77D4[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddScarMatrix_Handle;                     // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_AddScar) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_AddScar");
static_assert(sizeof(BP_PlayerHologram_C_AddScar) == 0x000120, "Wrong size on BP_PlayerHologram_C_AddScar");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, SocketName) == 0x000000, "Member 'BP_PlayerHologram_C_AddScar::SocketName' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, RotateAngle) == 0x000008, "Member 'BP_PlayerHologram_C_AddScar::RotateAngle' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, LRIGHT) == 0x00000C, "Member 'BP_PlayerHologram_C_AddScar::LRIGHT' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, LUpper) == 0x000018, "Member 'BP_PlayerHologram_C_AddScar::LUpper' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, LForward) == 0x000024, "Member 'BP_PlayerHologram_C_AddScar::LForward' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, LLocation) == 0x000030, "Member 'BP_PlayerHologram_C_AddScar::LLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_MakeVector_ReturnValue) == 0x00003C, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_Vector_IsNearlyZero_ReturnValue) == 0x000048, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_Vector_IsNearlyZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_Cross_VectorVector_ReturnValue) == 0x00004C, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_GetActorForwardVector_ReturnValue) == 0x000058, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_RotateAngleAxis_ReturnValue) == 0x000064, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_getMesh_mesh) == 0x000080, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_getMesh_mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_GetCurrentTargetActor_TargetActor) == 0x000088, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_GetCurrentTargetActor_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_GetSocketLocation_ReturnValue) == 0x000090, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, K2Node_DynamicCast_AsRSBattle_Character) == 0x0000A0, "Member 'BP_PlayerHologram_C_AddScar::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_PlayerHologram_C_AddScar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_BreakVector_X) == 0x0000AC, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_BreakVector_Y) == 0x0000B0, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_BreakVector_Z) == 0x0000B4, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000B8, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000C4, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D0, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_BreakVector_X_1) == 0x0000DC, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_BreakVector_Y_1) == 0x0000E0, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_BreakVector_Z_1) == 0x0000E4, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_BreakVector_X_2) == 0x0000E8, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_BreakVector_Y_2) == 0x0000EC, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_BreakVector_Z_2) == 0x0000F0, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_MakeVector_ReturnValue_1) == 0x0000F4, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_MakeVector_ReturnValue_2) == 0x000100, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_Normal_ReturnValue) == 0x00010C, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AddScar, CallFunc_AddScarMatrix_Handle) == 0x000118, "Member 'BP_PlayerHologram_C_AddScar::CallFunc_AddScarMatrix_Handle' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.TickHologramSASMaterial
// 0x0078 (0x0078 - 0x0000)
struct BP_PlayerHologram_C_TickHologramSASMaterial final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77D5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 AttachmentMeshes;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         WeaponMeshes;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CharacterMeshes;                                   // 0x0028(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	E_SASKindNative                               SasKind;                                           // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKindNative                               CallFunc_GetHologramSASMaterialMeshes_SASKind;     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77D6[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetHologramSASMaterialMeshes_CharacterMeshes; // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetHologramSASMaterialMeshes_WeaponMeshes; // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CallFunc_GetHologramSASMaterialMeshes_AttachmentMeshes; // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetMaterialParameterHologramSASCurve_Finish; // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_TickHologramSASMaterial) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_TickHologramSASMaterial");
static_assert(sizeof(BP_PlayerHologram_C_TickHologramSASMaterial) == 0x000078, "Wrong size on BP_PlayerHologram_C_TickHologramSASMaterial");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramSASMaterial, DeltaSeconds) == 0x000000, "Member 'BP_PlayerHologram_C_TickHologramSASMaterial::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramSASMaterial, AttachmentMeshes) == 0x000008, "Member 'BP_PlayerHologram_C_TickHologramSASMaterial::AttachmentMeshes' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramSASMaterial, WeaponMeshes) == 0x000018, "Member 'BP_PlayerHologram_C_TickHologramSASMaterial::WeaponMeshes' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramSASMaterial, CharacterMeshes) == 0x000028, "Member 'BP_PlayerHologram_C_TickHologramSASMaterial::CharacterMeshes' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramSASMaterial, SasKind) == 0x000038, "Member 'BP_PlayerHologram_C_TickHologramSASMaterial::SasKind' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramSASMaterial, CallFunc_GetHologramSASMaterialMeshes_SASKind) == 0x000039, "Member 'BP_PlayerHologram_C_TickHologramSASMaterial::CallFunc_GetHologramSASMaterialMeshes_SASKind' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramSASMaterial, CallFunc_GetHologramSASMaterialMeshes_CharacterMeshes) == 0x000040, "Member 'BP_PlayerHologram_C_TickHologramSASMaterial::CallFunc_GetHologramSASMaterialMeshes_CharacterMeshes' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramSASMaterial, CallFunc_GetHologramSASMaterialMeshes_WeaponMeshes) == 0x000050, "Member 'BP_PlayerHologram_C_TickHologramSASMaterial::CallFunc_GetHologramSASMaterialMeshes_WeaponMeshes' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramSASMaterial, CallFunc_GetHologramSASMaterialMeshes_AttachmentMeshes) == 0x000060, "Member 'BP_PlayerHologram_C_TickHologramSASMaterial::CallFunc_GetHologramSASMaterialMeshes_AttachmentMeshes' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramSASMaterial, CallFunc_Add_FloatFloat_ReturnValue) == 0x000070, "Member 'BP_PlayerHologram_C_TickHologramSASMaterial::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramSASMaterial, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000074, "Member 'BP_PlayerHologram_C_TickHologramSASMaterial::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_TickHologramSASMaterial, CallFunc_SetMaterialParameterHologramSASCurve_Finish) == 0x000075, "Member 'BP_PlayerHologram_C_TickHologramSASMaterial::CallFunc_SetMaterialParameterHologramSASCurve_Finish' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.StartHologramSASMaterial
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerHologram_C_StartHologramSASMaterial final
{
public:
	class UCurveLinearColor*                      Curve;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_StartHologramSASMaterial) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_StartHologramSASMaterial");
static_assert(sizeof(BP_PlayerHologram_C_StartHologramSASMaterial) == 0x000008, "Wrong size on BP_PlayerHologram_C_StartHologramSASMaterial");
static_assert(offsetof(BP_PlayerHologram_C_StartHologramSASMaterial, Curve) == 0x000000, "Member 'BP_PlayerHologram_C_StartHologramSASMaterial::Curve' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.GetHologramSASMaterialMeshes
// 0x0140 (0x0140 - 0x0000)
struct BP_PlayerHologram_C_GetHologramSASMaterialMeshes final
{
public:
	E_SASKindNative                               SasKind;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77D7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CharacterMeshes;                                   // 0x0008(0x0010)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         WeaponMeshes;                                      // 0x0018(0x0010)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 AttachmentMeshes;                                  // 0x0028(0x0010)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 RefAttachmentMeshes;                               // 0x0038(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class ABP_WeaponBase_C*>               WeaponActors;                                      // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         RetWeaponMeshes;                                   // 0x0058(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         RetCharacterMeshes;                                // 0x0068(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	E_SASKindNative                               RetSASKind;                                        // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77D8[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77D9[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AttachmentManageComponent_C*        CallFunc_GetAttachmentManageComponent_Manager;     // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AttachmentManageComponent_C*        CallFunc_GetAttachmentManageComponent_Manager_1;   // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CallFunc_GetMeshAll_MeshList;                      // 0x00A8(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CallFunc_GetMeshAll_MeshList_1;                    // 0x00B8(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77DA[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77DB[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeapon_Weapon;                         // 0x00E0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetCopyMesh_CopyMeshList;                 // 0x00F0(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77DC[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeapon_Weapon_1;                       // 0x0110(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh_1;                           // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77DD[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_GetHologramSASMaterialMeshes");
static_assert(sizeof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes) == 0x000140, "Wrong size on BP_PlayerHologram_C_GetHologramSASMaterialMeshes");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, SasKind) == 0x000000, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::SasKind' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CharacterMeshes) == 0x000008, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CharacterMeshes' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, WeaponMeshes) == 0x000018, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::WeaponMeshes' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, AttachmentMeshes) == 0x000028, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::AttachmentMeshes' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, RefAttachmentMeshes) == 0x000038, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::RefAttachmentMeshes' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, WeaponActors) == 0x000048, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::WeaponActors' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, RetWeaponMeshes) == 0x000058, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::RetWeaponMeshes' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, RetCharacterMeshes) == 0x000068, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::RetCharacterMeshes' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, RetSASKind) == 0x000078, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::RetSASKind' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, Temp_int_Loop_Num_Variable) == 0x00007C, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, Temp_int_Array_Index_Variable_1) == 0x00008C, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, Temp_int_Loop_Num_Variable_1) == 0x000090, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_GetAttachmentManageComponent_Manager) == 0x000098, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_GetAttachmentManageComponent_Manager' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_GetAttachmentManageComponent_Manager_1) == 0x0000A0, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_GetAttachmentManageComponent_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_GetMeshAll_MeshList) == 0x0000A8, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_GetMeshAll_MeshList' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_GetMeshAll_MeshList_1) == 0x0000B8, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_GetMeshAll_MeshList_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, Temp_int_Loop_Counter_Variable_1) == 0x0000C8, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000CC, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D0, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_Array_Length_ReturnValue_1) == 0x0000DC, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_GetWeapon_Weapon) == 0x0000E0, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_GetWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_GetCopyMesh_CopyMeshList) == 0x0000F0, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_GetCopyMesh_CopyMeshList' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_getMesh_mesh) == 0x000100, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_getMesh_mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_Array_Add_ReturnValue) == 0x000108, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_GetWeapon_Weapon_1) == 0x000110, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_GetWeapon_Weapon_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_getMesh_mesh_1) == 0x000120, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_getMesh_mesh_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_Array_Add_ReturnValue_1) == 0x000128, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_IsValid_ReturnValue_1) == 0x00012C, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_Array_Length_ReturnValue_2) == 0x000130, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, CallFunc_Array_Length_ReturnValue_3) == 0x000134, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramSASMaterialMeshes, K2Node_SwitchEnum_CmpSuccess) == 0x000138, "Member 'BP_PlayerHologram_C_GetHologramSASMaterialMeshes::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.ResetHologramSASMaterial
// 0x0070 (0x0070 - 0x0000)
struct BP_PlayerHologram_C_ResetHologramSASMaterial final
{
public:
	TArray<class UMeshComponent*>                 AttachmentMeshes;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         WeaponMeshes;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CharacterMeshes;                                   // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	E_SASKindNative                               SasKind;                                           // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKindNative                               CallFunc_GetHologramSASMaterialMeshes_SASKind;     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77DE[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetHologramSASMaterialMeshes_CharacterMeshes; // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetHologramSASMaterialMeshes_WeaponMeshes; // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CallFunc_GetHologramSASMaterialMeshes_AttachmentMeshes; // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_ResetHologramSASMaterial) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_ResetHologramSASMaterial");
static_assert(sizeof(BP_PlayerHologram_C_ResetHologramSASMaterial) == 0x000070, "Wrong size on BP_PlayerHologram_C_ResetHologramSASMaterial");
static_assert(offsetof(BP_PlayerHologram_C_ResetHologramSASMaterial, AttachmentMeshes) == 0x000000, "Member 'BP_PlayerHologram_C_ResetHologramSASMaterial::AttachmentMeshes' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ResetHologramSASMaterial, WeaponMeshes) == 0x000010, "Member 'BP_PlayerHologram_C_ResetHologramSASMaterial::WeaponMeshes' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ResetHologramSASMaterial, CharacterMeshes) == 0x000020, "Member 'BP_PlayerHologram_C_ResetHologramSASMaterial::CharacterMeshes' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ResetHologramSASMaterial, SasKind) == 0x000030, "Member 'BP_PlayerHologram_C_ResetHologramSASMaterial::SasKind' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ResetHologramSASMaterial, CallFunc_GetHologramSASMaterialMeshes_SASKind) == 0x000031, "Member 'BP_PlayerHologram_C_ResetHologramSASMaterial::CallFunc_GetHologramSASMaterialMeshes_SASKind' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ResetHologramSASMaterial, CallFunc_GetHologramSASMaterialMeshes_CharacterMeshes) == 0x000038, "Member 'BP_PlayerHologram_C_ResetHologramSASMaterial::CallFunc_GetHologramSASMaterialMeshes_CharacterMeshes' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ResetHologramSASMaterial, CallFunc_GetHologramSASMaterialMeshes_WeaponMeshes) == 0x000048, "Member 'BP_PlayerHologram_C_ResetHologramSASMaterial::CallFunc_GetHologramSASMaterialMeshes_WeaponMeshes' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ResetHologramSASMaterial, CallFunc_GetHologramSASMaterialMeshes_AttachmentMeshes) == 0x000058, "Member 'BP_PlayerHologram_C_ResetHologramSASMaterial::CallFunc_GetHologramSASMaterialMeshes_AttachmentMeshes' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ResetHologramSASMaterial, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000068, "Member 'BP_PlayerHologram_C_ResetHologramSASMaterial::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.NotifyHologramAttackCh0600
// 0x0098 (0x0098 - 0x0000)
struct BP_PlayerHologram_C_NotifyHologramAttackCh0600 final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77DF[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77E0[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAtLocation_ReturnValue_2;     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77E1[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAtLocation_ReturnValue_3;     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh_1;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_2;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_3;          // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAtLocation_ReturnValue_4;     // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAtLocation_ReturnValue_5;     // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_NotifyHologramAttackCh0600) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_NotifyHologramAttackCh0600");
static_assert(sizeof(BP_PlayerHologram_C_NotifyHologramAttackCh0600) == 0x000098, "Wrong size on BP_PlayerHologram_C_NotifyHologramAttackCh0600");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0600, Param) == 0x000000, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0600::Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0600, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0600::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0600, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0600::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0600, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000018, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0600::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0600, CallFunc_getMesh_mesh) == 0x000020, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0600::CallFunc_getMesh_mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0600, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000028, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0600::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0600, CallFunc_GetSocketLocation_ReturnValue) == 0x000034, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0600::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0600, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x000040, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0600::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0600, CallFunc_SpawnEmitterAtLocation_ReturnValue_2) == 0x000048, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0600::CallFunc_SpawnEmitterAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0600, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000050, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0600::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0600, CallFunc_SpawnEmitterAtLocation_ReturnValue_3) == 0x000060, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0600::CallFunc_SpawnEmitterAtLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0600, CallFunc_getMesh_mesh_1) == 0x000068, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0600::CallFunc_getMesh_mesh_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0600, CallFunc_GetSocketLocation_ReturnValue_2) == 0x000070, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0600::CallFunc_GetSocketLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0600, CallFunc_GetSocketLocation_ReturnValue_3) == 0x00007C, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0600::CallFunc_GetSocketLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0600, CallFunc_SpawnEmitterAtLocation_ReturnValue_4) == 0x000088, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0600::CallFunc_SpawnEmitterAtLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyHologramAttackCh0600, CallFunc_SpawnEmitterAtLocation_ReturnValue_5) == 0x000090, "Member 'BP_PlayerHologram_C_NotifyHologramAttackCh0600::CallFunc_SpawnEmitterAtLocation_ReturnValue_5' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.ChangeWeaponScale
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerHologram_C_ChangeWeaponScale final
{
public:
	struct FVector                                InScale;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InTime;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeapon_Weapon;                         // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRelativeScale3D_ReturnValue;      // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_ChangeWeaponScale) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_ChangeWeaponScale");
static_assert(sizeof(BP_PlayerHologram_C_ChangeWeaponScale) == 0x000038, "Wrong size on BP_PlayerHologram_C_ChangeWeaponScale");
static_assert(offsetof(BP_PlayerHologram_C_ChangeWeaponScale, InScale) == 0x000000, "Member 'BP_PlayerHologram_C_ChangeWeaponScale::InScale' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeWeaponScale, InTime) == 0x00000C, "Member 'BP_PlayerHologram_C_ChangeWeaponScale::InTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeWeaponScale, CallFunc_GetWeapon_Weapon) == 0x000010, "Member 'BP_PlayerHologram_C_ChangeWeaponScale::CallFunc_GetWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeWeaponScale, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_PlayerHologram_C_ChangeWeaponScale::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeWeaponScale, CallFunc_GetActorRelativeScale3D_ReturnValue) == 0x000028, "Member 'BP_PlayerHologram_C_ChangeWeaponScale::CallFunc_GetActorRelativeScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeWeaponScale, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000034, "Member 'BP_PlayerHologram_C_ChangeWeaponScale::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.ResetWeaponScale
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerHologram_C_ResetWeaponScale final
{
public:
	float                                         InTime;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77E2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeapon_Weapon;                         // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77E3[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponBase_C*                       CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRelativeScale3D_ReturnValue;      // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_ResetWeaponScale) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_ResetWeaponScale");
static_assert(sizeof(BP_PlayerHologram_C_ResetWeaponScale) == 0x000038, "Wrong size on BP_PlayerHologram_C_ResetWeaponScale");
static_assert(offsetof(BP_PlayerHologram_C_ResetWeaponScale, InTime) == 0x000000, "Member 'BP_PlayerHologram_C_ResetWeaponScale::InTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ResetWeaponScale, CallFunc_GetWeapon_Weapon) == 0x000008, "Member 'BP_PlayerHologram_C_ResetWeaponScale::CallFunc_GetWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ResetWeaponScale, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'BP_PlayerHologram_C_ResetWeaponScale::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ResetWeaponScale, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_PlayerHologram_C_ResetWeaponScale::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ResetWeaponScale, CallFunc_GetActorRelativeScale3D_ReturnValue) == 0x000028, "Member 'BP_PlayerHologram_C_ResetWeaponScale::CallFunc_GetActorRelativeScale3D_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.UpdateWeaponScale
// 0x001C (0x001C - 0x0000)
struct BP_PlayerHologram_C_UpdateWeaponScale final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77E4[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_UpdateWeaponScale) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_UpdateWeaponScale");
static_assert(sizeof(BP_PlayerHologram_C_UpdateWeaponScale) == 0x00001C, "Wrong size on BP_PlayerHologram_C_UpdateWeaponScale");
static_assert(offsetof(BP_PlayerHologram_C_UpdateWeaponScale, DeltaSeconds) == 0x000000, "Member 'BP_PlayerHologram_C_UpdateWeaponScale::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_UpdateWeaponScale, CallFunc_IsOver_ReturnValue) == 0x000004, "Member 'BP_PlayerHologram_C_UpdateWeaponScale::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_UpdateWeaponScale, CallFunc_GetRate_ReturnValue) == 0x000008, "Member 'BP_PlayerHologram_C_UpdateWeaponScale::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_UpdateWeaponScale, CallFunc_VLerp_ReturnValue) == 0x00000C, "Member 'BP_PlayerHologram_C_UpdateWeaponScale::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_UpdateWeaponScale, CallFunc_IsEnable_ReturnValue) == 0x000018, "Member 'BP_PlayerHologram_C_UpdateWeaponScale::CallFunc_IsEnable_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.SetWeaponScale
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerHologram_C_SetWeaponScale final
{
public:
	struct FVector                                InScale;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeapon_Weapon;                         // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77E5[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_SetWeaponScale) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_SetWeaponScale");
static_assert(sizeof(BP_PlayerHologram_C_SetWeaponScale) == 0x000038, "Wrong size on BP_PlayerHologram_C_SetWeaponScale");
static_assert(offsetof(BP_PlayerHologram_C_SetWeaponScale, InScale) == 0x000000, "Member 'BP_PlayerHologram_C_SetWeaponScale::InScale' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetWeaponScale, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_PlayerHologram_C_SetWeaponScale::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetWeaponScale, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_PlayerHologram_C_SetWeaponScale::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetWeaponScale, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_PlayerHologram_C_SetWeaponScale::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetWeaponScale, CallFunc_GetWeapon_Weapon) == 0x000018, "Member 'BP_PlayerHologram_C_SetWeaponScale::CallFunc_GetWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetWeaponScale, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_PlayerHologram_C_SetWeaponScale::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetWeaponScale, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_PlayerHologram_C_SetWeaponScale::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetWeaponScale, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_PlayerHologram_C_SetWeaponScale::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.NotifyCombinationAttackCh0500
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerHologram_C_NotifyCombinationAttackCh0500 final
{
public:
	int32                                         InParam;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_NotifyCombinationAttackCh0500) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_NotifyCombinationAttackCh0500");
static_assert(sizeof(BP_PlayerHologram_C_NotifyCombinationAttackCh0500) == 0x000008, "Wrong size on BP_PlayerHologram_C_NotifyCombinationAttackCh0500");
static_assert(offsetof(BP_PlayerHologram_C_NotifyCombinationAttackCh0500, InParam) == 0x000000, "Member 'BP_PlayerHologram_C_NotifyCombinationAttackCh0500::InParam' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyCombinationAttackCh0500, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'BP_PlayerHologram_C_NotifyCombinationAttackCh0500::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.CombinationBulletFireCh0500
// 0x0188 (0x0188 - 0x0000)
struct BP_PlayerHologram_C_CombinationBulletFireCh0500 final
{
public:
	int32                                         LCollisionInfoIndex;                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LTargetPitch;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LMuzzleOffsetZ;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77E6[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       Param_LTargetCharacter;                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LFirePitch;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77E7[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttackCollisionInfoBP                 LCollisionInfo;                                    // 0x0020(0x00C0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	EBulletType                                   LBulletType;                                       // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77E8[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LBulletDir;                                        // 0x00E4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LFireBasePitchAngle;                               // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77E9[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LAttackPlayer;                                     // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LBaseFireRotate;                                   // 0x0100(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                LBaseFireLocation;                                 // 0x010C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CombinationCh0500CalcTargetPitch_TargetPitch; // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CombinationCh0500CalcTargetPitch_bExistsTarget; // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77EA[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77EB[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CombinationVisionBullet_ch0500_C*   CallFunc_Array_Get_Item;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Fire_bSuccess;                            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77EC[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_CombinationBulletFireCh0500) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_CombinationBulletFireCh0500");
static_assert(sizeof(BP_PlayerHologram_C_CombinationBulletFireCh0500) == 0x000188, "Wrong size on BP_PlayerHologram_C_CombinationBulletFireCh0500");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, LCollisionInfoIndex) == 0x000000, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::LCollisionInfoIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, LTargetPitch) == 0x000004, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::LTargetPitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, LMuzzleOffsetZ) == 0x000008, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::LMuzzleOffsetZ' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, Param_LTargetCharacter) == 0x000010, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::Param_LTargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, LFirePitch) == 0x000018, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::LFirePitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, LCollisionInfo) == 0x000020, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::LCollisionInfo' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, LBulletType) == 0x0000E0, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::LBulletType' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, LBulletDir) == 0x0000E4, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::LBulletDir' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, LFireBasePitchAngle) == 0x0000F0, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::LFireBasePitchAngle' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, LAttackPlayer) == 0x0000F8, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::LAttackPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, LBaseFireRotate) == 0x000100, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::LBaseFireRotate' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, LBaseFireLocation) == 0x00010C, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::LBaseFireLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, CallFunc_Add_IntInt_ReturnValue) == 0x000118, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, CallFunc_Array_LastIndex_ReturnValue) == 0x00011C, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, Temp_int_Variable) == 0x000120, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, CallFunc_Min_ReturnValue) == 0x000124, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, Temp_int_Variable_1) == 0x000128, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, CallFunc_CombinationCh0500CalcTargetPitch_TargetPitch) == 0x00012C, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::CallFunc_CombinationCh0500CalcTargetPitch_TargetPitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, CallFunc_CombinationCh0500CalcTargetPitch_bExistsTarget) == 0x000130, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::CallFunc_CombinationCh0500CalcTargetPitch_bExistsTarget' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, CallFunc_Percent_IntInt_ReturnValue) == 0x000134, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, CallFunc_Add_IntInt_ReturnValue_1) == 0x000138, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, CallFunc_Array_Get_Item) == 0x000140, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, CallFunc_Fire_bSuccess) == 0x000148, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::CallFunc_Fire_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00014C, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, CallFunc_BreakRotator_Roll) == 0x000158, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, CallFunc_BreakRotator_Pitch) == 0x00015C, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, CallFunc_BreakRotator_Yaw) == 0x000160, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, CallFunc_GetSocketLocation_ReturnValue) == 0x000164, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, CallFunc_MakeRotator_ReturnValue) == 0x000170, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0500, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x00017C, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0500::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.CombinationCh0500RotatePitchUpdate
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate final
{
public:
	float                                         LTargetPitch;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LPitch;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActorDeltaSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77ED[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CombinationCh0500CalcTargetPitch_TargetPitch; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CombinationCh0500CalcTargetPitch_bExistsTarget; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77EE[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate");
static_assert(sizeof(BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate) == 0x000030, "Wrong size on BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate, LTargetPitch) == 0x000000, "Member 'BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate::LTargetPitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate, LPitch) == 0x000004, "Member 'BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate::LPitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate, CallFunc_GetActorDeltaSeconds_ReturnValue) == 0x000008, "Member 'BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate::CallFunc_GetActorDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate, CallFunc_FMax_ReturnValue) == 0x000014, "Member 'BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate, CallFunc_FMin_ReturnValue) == 0x00001C, "Member 'BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate, CallFunc_Less_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000021, "Member 'BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate, CallFunc_CombinationCh0500CalcTargetPitch_TargetPitch) == 0x000024, "Member 'BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate::CallFunc_CombinationCh0500CalcTargetPitch_TargetPitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate, CallFunc_CombinationCh0500CalcTargetPitch_bExistsTarget) == 0x000028, "Member 'BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate::CallFunc_CombinationCh0500CalcTargetPitch_bExistsTarget' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'BP_PlayerHologram_C_CombinationCh0500RotatePitchUpdate::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.CombinationCh0500CalcTargetPitch
// 0x0088 (0x0088 - 0x0000)
struct BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch final
{
public:
	float                                         TargetPitch;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bExistsTarget;                                     // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77EF[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       Param_LTargetCharacter;                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77F0[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77F1[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetCurrentTargetActor_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77F2[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77F3[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetWeakTargetPoint_Point;                 // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch");
static_assert(sizeof(BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch) == 0x000088, "Wrong size on BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch, TargetPitch) == 0x000000, "Member 'BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch::TargetPitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch, bExistsTarget) == 0x000004, "Member 'BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch::bExistsTarget' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch, Param_LTargetCharacter) == 0x000008, "Member 'BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch::Param_LTargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch, CallFunc_GetSocketLocation_ReturnValue) == 0x000014, "Member 'BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch, CallFunc_GetCurrentTargetActor_ReturnValue) == 0x000030, "Member 'BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch::CallFunc_GetCurrentTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch, K2Node_DynamicCast_AsBPI_Battle_Character_Interface) == 0x000040, "Member 'BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch::K2Node_DynamicCast_AsBPI_Battle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch, CallFunc_GetWeakTargetPoint_Point) == 0x000054, "Member 'BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch::CallFunc_GetWeakTargetPoint_Point' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000060, "Member 'BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x00006C, "Member 'BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch, CallFunc_BreakRotator_Roll) == 0x000078, "Member 'BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch, CallFunc_BreakRotator_Pitch) == 0x00007C, "Member 'BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch, CallFunc_BreakRotator_Yaw) == 0x000080, "Member 'BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch, CallFunc_FClamp_ReturnValue) == 0x000084, "Member 'BP_PlayerHologram_C_CombinationCh0500CalcTargetPitch::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.CombinationCh0500ApplyRotateTragetPitchOffset
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerHologram_C_CombinationCh0500ApplyRotateTragetPitchOffset final
{
public:
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77F4[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRSPlayerHologramAnimInstanceInterface> K2Node_DynamicCast_AsRSPlayer_Hologram_Anim_Instance_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77F5[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_CombinationCh0500ApplyRotateTragetPitchOffset) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_CombinationCh0500ApplyRotateTragetPitchOffset");
static_assert(sizeof(BP_PlayerHologram_C_CombinationCh0500ApplyRotateTragetPitchOffset) == 0x000030, "Wrong size on BP_PlayerHologram_C_CombinationCh0500ApplyRotateTragetPitchOffset");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500ApplyRotateTragetPitchOffset, CallFunc_GetAnimInstance_ReturnValue) == 0x000000, "Member 'BP_PlayerHologram_C_CombinationCh0500ApplyRotateTragetPitchOffset::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500ApplyRotateTragetPitchOffset, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_PlayerHologram_C_CombinationCh0500ApplyRotateTragetPitchOffset::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500ApplyRotateTragetPitchOffset, K2Node_DynamicCast_AsRSPlayer_Hologram_Anim_Instance_Interface) == 0x000010, "Member 'BP_PlayerHologram_C_CombinationCh0500ApplyRotateTragetPitchOffset::K2Node_DynamicCast_AsRSPlayer_Hologram_Anim_Instance_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500ApplyRotateTragetPitchOffset, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PlayerHologram_C_CombinationCh0500ApplyRotateTragetPitchOffset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0500ApplyRotateTragetPitchOffset, CallFunc_MakeRotator_ReturnValue) == 0x000024, "Member 'BP_PlayerHologram_C_CombinationCh0500ApplyRotateTragetPitchOffset::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.NotifyCombinationAttackCh0700
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerHologram_C_NotifyCombinationAttackCh0700 final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_NotifyCombinationAttackCh0700) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_NotifyCombinationAttackCh0700");
static_assert(sizeof(BP_PlayerHologram_C_NotifyCombinationAttackCh0700) == 0x000004, "Wrong size on BP_PlayerHologram_C_NotifyCombinationAttackCh0700");
static_assert(offsetof(BP_PlayerHologram_C_NotifyCombinationAttackCh0700, Param) == 0x000000, "Member 'BP_PlayerHologram_C_NotifyCombinationAttackCh0700::Param' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.CombinationBulletFireCh0700
// 0x01E0 (0x01E0 - 0x0000)
struct BP_PlayerHologram_C_CombinationBulletFireCh0700 final
{
public:
	class ARSCharacterBase*                       LTargetActor;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LMuzzleOffsetZ;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77F6[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       Param_LTargetCharacter;                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LFirePitch;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77F7[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttackCollisionInfoBP                 LCollisionInfo;                                    // 0x0020(0x00C0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	EBulletType                                   LBulletType;                                       // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77F8[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LBulletDir;                                        // 0x00E4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LFireBasePitchAngle;                               // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77F9[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LAttackPlayer;                                     // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LBaseFireRotate;                                   // 0x0100(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                LBaseFireLocation;                                 // 0x010C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77FA[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBattleCharacterInterface> CallFunc_GetAutoAimTargetLocation_self_CastInput;  // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetAutoAimTargetLocation_ReturnValue;     // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77FB[0x3];                                     // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77FC[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetCurrentTargetActor_ReturnValue;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CombinationCh0700CalcTargetPitch_TargetPitch; // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CombinationCh0700CalcTargetPitch_bExistsTarget; // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77FD[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Fire_bSuccess;                            // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77FE[0x3];                                     // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_1;       // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_CombinationBulletFireCh0700) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_CombinationBulletFireCh0700");
static_assert(sizeof(BP_PlayerHologram_C_CombinationBulletFireCh0700) == 0x0001E0, "Wrong size on BP_PlayerHologram_C_CombinationBulletFireCh0700");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, LTargetActor) == 0x000000, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::LTargetActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, LMuzzleOffsetZ) == 0x000008, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::LMuzzleOffsetZ' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, Param_LTargetCharacter) == 0x000010, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::Param_LTargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, LFirePitch) == 0x000018, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::LFirePitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, LCollisionInfo) == 0x000020, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::LCollisionInfo' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, LBulletType) == 0x0000E0, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::LBulletType' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, LBulletDir) == 0x0000E4, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::LBulletDir' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, LFireBasePitchAngle) == 0x0000F0, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::LFireBasePitchAngle' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, LAttackPlayer) == 0x0000F8, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::LAttackPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, LBaseFireRotate) == 0x000100, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::LBaseFireRotate' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, LBaseFireLocation) == 0x00010C, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::LBaseFireLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_DoesImplementInterface_ReturnValue) == 0x000118, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_GetAutoAimTargetLocation_self_CastInput) == 0x000120, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_GetAutoAimTargetLocation_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_GetAutoAimTargetLocation_ReturnValue) == 0x000130, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_GetAutoAimTargetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_IsValid_ReturnValue) == 0x00013C, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000140, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00014C, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000158, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_GetCurrentTargetActor_ReturnValue) == 0x000168, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_GetCurrentTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_BreakRotator_Roll) == 0x000170, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_BreakRotator_Pitch) == 0x000174, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_BreakRotator_Yaw) == 0x000178, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_CombinationCh0700CalcTargetPitch_TargetPitch) == 0x00017C, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_CombinationCh0700CalcTargetPitch_TargetPitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_CombinationCh0700CalcTargetPitch_bExistsTarget) == 0x000180, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_CombinationCh0700CalcTargetPitch_bExistsTarget' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_MakeRotator_ReturnValue) == 0x000184, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000190, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_GetSocketLocation_ReturnValue) == 0x00019C, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_Fire_bSuccess) == 0x0001A8, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_Fire_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0001AC, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_BreakRotator_Roll_1) == 0x0001B8, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_BreakRotator_Pitch_1) == 0x0001BC, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_BreakRotator_Yaw_1) == 0x0001C0, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_MakeRotator_ReturnValue_1) == 0x0001C4, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationBulletFireCh0700, CallFunc_Conv_RotatorToVector_ReturnValue_1) == 0x0001D0, "Member 'BP_PlayerHologram_C_CombinationBulletFireCh0700::CallFunc_Conv_RotatorToVector_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.CombinationCh0700CalcTargetPitch
// 0x0088 (0x0088 - 0x0000)
struct BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch final
{
public:
	float                                         TargetPitch;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bExistsTarget;                                     // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77FF[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       Param_LTargetCharacter;                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7800[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7801[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetCurrentTargetActor_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7802[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetWeakTargetPoint_Point;                 // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7803[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch");
static_assert(sizeof(BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch) == 0x000088, "Wrong size on BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch, TargetPitch) == 0x000000, "Member 'BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch::TargetPitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch, bExistsTarget) == 0x000004, "Member 'BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch::bExistsTarget' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch, Param_LTargetCharacter) == 0x000008, "Member 'BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch::Param_LTargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch, CallFunc_GetSocketLocation_ReturnValue) == 0x000010, "Member 'BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch, CallFunc_GetCurrentTargetActor_ReturnValue) == 0x000030, "Member 'BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch::CallFunc_GetCurrentTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch, K2Node_DynamicCast_AsBPI_Battle_Character_Interface) == 0x000038, "Member 'BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch::K2Node_DynamicCast_AsBPI_Battle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch, CallFunc_GetWeakTargetPoint_Point) == 0x00004C, "Member 'BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch::CallFunc_GetWeakTargetPoint_Point' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00005C, "Member 'BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000068, "Member 'BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch, CallFunc_BreakRotator_Roll) == 0x000074, "Member 'BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch, CallFunc_BreakRotator_Pitch) == 0x000078, "Member 'BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch, CallFunc_BreakRotator_Yaw) == 0x00007C, "Member 'BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch, CallFunc_FClamp_ReturnValue) == 0x000080, "Member 'BP_PlayerHologram_C_CombinationCh0700CalcTargetPitch::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.NotifyCombinationVisionBeginCH0900
// 0x00D8 (0x00D8 - 0x0000)
struct BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900 final
{
public:
	class USkeletalMeshComponent*                 LMesh;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AttachmentManageComponent_C*        CallFunc_GetAttachmentManageComponent_Manager;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7804[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0014(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_7805[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7806[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetCopyMesh_CopyMeshList;                 // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900");
static_assert(sizeof(BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900) == 0x0000D8, "Wrong size on BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900");
static_assert(offsetof(BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900, LMesh) == 0x000000, "Member 'BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900::LMesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900, CallFunc_GetAttachmentManageComponent_Manager) == 0x000008, "Member 'BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900::CallFunc_GetAttachmentManageComponent_Manager' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000014, "Member 'BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900, CallFunc_GetAnimInstance_ReturnValue) == 0x0000A0, "Member 'BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900, CallFunc_Montage_Play_ReturnValue) == 0x0000A8, "Member 'BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900, CallFunc_GetCopyMesh_CopyMeshList) == 0x0000B0, "Member 'BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900::CallFunc_GetCopyMesh_CopyMeshList' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000D0, "Member 'BP_PlayerHologram_C_NotifyCombinationVisionBeginCH0900::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.EndAttackBullet
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerHologram_C_EndAttackBullet final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7807[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7808[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7809[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_780A[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_EndAttackBullet) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_EndAttackBullet");
static_assert(sizeof(BP_PlayerHologram_C_EndAttackBullet) == 0x000028, "Wrong size on BP_PlayerHologram_C_EndAttackBullet");
static_assert(offsetof(BP_PlayerHologram_C_EndAttackBullet, PlayerId) == 0x000000, "Member 'BP_PlayerHologram_C_EndAttackBullet::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EndAttackBullet, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_PlayerHologram_C_EndAttackBullet::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EndAttackBullet, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'BP_PlayerHologram_C_EndAttackBullet::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EndAttackBullet, K2Node_SwitchEnum_CmpSuccess_1) == 0x000009, "Member 'BP_PlayerHologram_C_EndAttackBullet::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EndAttackBullet, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_PlayerHologram_C_EndAttackBullet::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EndAttackBullet, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_PlayerHologram_C_EndAttackBullet::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EndAttackBullet, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_PlayerHologram_C_EndAttackBullet::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EndAttackBullet, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_PlayerHologram_C_EndAttackBullet::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EndAttackBullet, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_PlayerHologram_C_EndAttackBullet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EndAttackBullet, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_PlayerHologram_C_EndAttackBullet::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EndAttackBullet, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PlayerHologram_C_EndAttackBullet::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EndAttackBullet, CallFunc_IsValid_ReturnValue_1) == 0x000024, "Member 'BP_PlayerHologram_C_EndAttackBullet::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.NotifyCombinationVisionCh0900
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerHologram_C_NotifyCombinationVisionCh0900 final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_780B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         LMesh;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbCopy;                                            // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_NotifyCombinationVisionCh0900) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_NotifyCombinationVisionCh0900");
static_assert(sizeof(BP_PlayerHologram_C_NotifyCombinationVisionCh0900) == 0x000018, "Wrong size on BP_PlayerHologram_C_NotifyCombinationVisionCh0900");
static_assert(offsetof(BP_PlayerHologram_C_NotifyCombinationVisionCh0900, Param) == 0x000000, "Member 'BP_PlayerHologram_C_NotifyCombinationVisionCh0900::Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyCombinationVisionCh0900, LMesh) == 0x000008, "Member 'BP_PlayerHologram_C_NotifyCombinationVisionCh0900::LMesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyCombinationVisionCh0900, LbCopy) == 0x000010, "Member 'BP_PlayerHologram_C_NotifyCombinationVisionCh0900::LbCopy' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_NotifyCombinationVisionCh0900, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000011, "Member 'BP_PlayerHologram_C_NotifyCombinationVisionCh0900::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.CombinationVisionCh0900_BulletFire
// 0x01B0 (0x01B0 - 0x0000)
struct BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire final
{
public:
	class UMeshComponent*                         InMesh;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInCopy;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_780C[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LIndex;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttackCollisionInfoBP                 LAttackCollisionInfo;                              // 0x0010(0x00C0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class ABP_CombinationVisionBullet_ch0900_C*   LBullet;                                           // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LFireDir;                                          // 0x00D8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LFireNum;                                          // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LBulletIndexLast;                                  // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LBulletIndexFirst;                                 // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LFireLocation;                                     // 0x00F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_780D[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_780E[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerFixParamater_C*               CallFunc_GetPlayerFixParam_Param;                  // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Fire_bSuccess;                            // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_780F[0x2];                                     // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7810[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CombinationVisionBullet_ch0900_C*   CallFunc_Array_Get_Item;                           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire");
static_assert(sizeof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire) == 0x0001B0, "Wrong size on BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, InMesh) == 0x000000, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::InMesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, bInCopy) == 0x000008, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::bInCopy' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, LIndex) == 0x00000C, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::LIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, LAttackCollisionInfo) == 0x000010, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::LAttackCollisionInfo' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, LBullet) == 0x0000D0, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::LBullet' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, LFireDir) == 0x0000D8, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::LFireDir' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, LFireNum) == 0x0000E4, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::LFireNum' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, LBulletIndexLast) == 0x0000E8, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::LBulletIndexLast' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, LBulletIndexFirst) == 0x0000EC, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::LBulletIndexFirst' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, LFireLocation) == 0x0000F0, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::LFireLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, Temp_name_Variable) == 0x0000FC, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, Temp_name_Variable_1) == 0x000104, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, Temp_bool_Variable) == 0x00010C, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, Temp_int_Variable) == 0x000110, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, Temp_int_Variable_1) == 0x000114, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, Temp_int_Variable_2) == 0x000118, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, CallFunc_Add_IntInt_ReturnValue) == 0x00011C, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, CallFunc_MakeRotFromX_ReturnValue) == 0x000120, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, CallFunc_GetPlayerFixParam_Param) == 0x000130, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::CallFunc_GetPlayerFixParam_Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, CallFunc_RandomFloatInRange_ReturnValue) == 0x000138, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, CallFunc_Add_IntInt_ReturnValue_1) == 0x00013C, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x000140, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, CallFunc_ComposeRotators_ReturnValue) == 0x00014C, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, CallFunc_GetForwardVector_ReturnValue) == 0x000158, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, Temp_bool_Variable_1) == 0x000164, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, CallFunc_Fire_bSuccess) == 0x000165, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::CallFunc_Fire_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, CallFunc_GetActorForwardVector_ReturnValue) == 0x000168, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, CallFunc_Subtract_IntInt_ReturnValue) == 0x000174, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, CallFunc_Add_IntInt_ReturnValue_2) == 0x000178, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, CallFunc_Array_Length_ReturnValue) == 0x00017C, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, CallFunc_Divide_IntInt_ReturnValue) == 0x000180, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, K2Node_Select_Default) == 0x000184, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000188, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, CallFunc_Array_Get_Item) == 0x000190, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, K2Node_Select_Default_1) == 0x000198, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire, CallFunc_GetSocketLocation_ReturnValue) == 0x0001A0, "Member 'BP_PlayerHologram_C_CombinationVisionCh0900_BulletFire::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.OnBeforeFirstPlayAnimation
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerHologram_C_OnBeforeFirstPlayAnimation final
{
public:
	bool                                          bIsCombinationVision;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_OnBeforeFirstPlayAnimation) == 0x000001, "Wrong alignment on BP_PlayerHologram_C_OnBeforeFirstPlayAnimation");
static_assert(sizeof(BP_PlayerHologram_C_OnBeforeFirstPlayAnimation) == 0x000002, "Wrong size on BP_PlayerHologram_C_OnBeforeFirstPlayAnimation");
static_assert(offsetof(BP_PlayerHologram_C_OnBeforeFirstPlayAnimation, bIsCombinationVision) == 0x000000, "Member 'BP_PlayerHologram_C_OnBeforeFirstPlayAnimation::bIsCombinationVision' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnBeforeFirstPlayAnimation, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_PlayerHologram_C_OnBeforeFirstPlayAnimation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.OnMoveRootMotion
// 0x0150 (0x0150 - 0x0000)
struct BP_PlayerHologram_C_OnMoveRootMotion final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7811[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LMoveTransform;                                    // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7812[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7813[0xC];                                     // 0x00A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00B0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7814[0x8];                                     // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcRootMotionTransform_ReturnValue;      // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_OnMoveRootMotion) == 0x000010, "Wrong alignment on BP_PlayerHologram_C_OnMoveRootMotion");
static_assert(sizeof(BP_PlayerHologram_C_OnMoveRootMotion) == 0x000150, "Wrong size on BP_PlayerHologram_C_OnMoveRootMotion");
static_assert(offsetof(BP_PlayerHologram_C_OnMoveRootMotion, DeltaSeconds) == 0x000000, "Member 'BP_PlayerHologram_C_OnMoveRootMotion::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMoveRootMotion, LMoveTransform) == 0x000010, "Member 'BP_PlayerHologram_C_OnMoveRootMotion::LMoveTransform' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMoveRootMotion, CallFunc_BreakTransform_Location) == 0x000040, "Member 'BP_PlayerHologram_C_OnMoveRootMotion::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMoveRootMotion, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'BP_PlayerHologram_C_OnMoveRootMotion::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMoveRootMotion, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'BP_PlayerHologram_C_OnMoveRootMotion::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMoveRootMotion, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000064, "Member 'BP_PlayerHologram_C_OnMoveRootMotion::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMoveRootMotion, CallFunc_BreakTransform_Location_1) == 0x000068, "Member 'BP_PlayerHologram_C_OnMoveRootMotion::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMoveRootMotion, CallFunc_BreakTransform_Rotation_1) == 0x000074, "Member 'BP_PlayerHologram_C_OnMoveRootMotion::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMoveRootMotion, CallFunc_BreakTransform_Scale_1) == 0x000080, "Member 'BP_PlayerHologram_C_OnMoveRootMotion::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMoveRootMotion, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00008C, "Member 'BP_PlayerHologram_C_OnMoveRootMotion::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMoveRootMotion, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000098, "Member 'BP_PlayerHologram_C_OnMoveRootMotion::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMoveRootMotion, CallFunc_GetTransform_ReturnValue) == 0x0000B0, "Member 'BP_PlayerHologram_C_OnMoveRootMotion::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMoveRootMotion, CallFunc_getMesh_mesh) == 0x0000E0, "Member 'BP_PlayerHologram_C_OnMoveRootMotion::CallFunc_getMesh_mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMoveRootMotion, CallFunc_CalcRootMotionTransform_ReturnValue) == 0x0000F0, "Member 'BP_PlayerHologram_C_OnMoveRootMotion::CallFunc_CalcRootMotionTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_OnMoveRootMotion, CallFunc_ComposeTransforms_ReturnValue) == 0x000120, "Member 'BP_PlayerHologram_C_OnMoveRootMotion::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.GetHologramPlayerID
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerHologram_C_GetHologramPlayerID final
{
public:
	EPlayerID                                     Param_HologramPlayerID;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_GetHologramPlayerID) == 0x000001, "Wrong alignment on BP_PlayerHologram_C_GetHologramPlayerID");
static_assert(sizeof(BP_PlayerHologram_C_GetHologramPlayerID) == 0x000001, "Wrong size on BP_PlayerHologram_C_GetHologramPlayerID");
static_assert(offsetof(BP_PlayerHologram_C_GetHologramPlayerID, Param_HologramPlayerID) == 0x000000, "Member 'BP_PlayerHologram_C_GetHologramPlayerID::Param_HologramPlayerID' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.Equip Costume
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerHologram_C_Equip_Costume final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7815[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CostumeId;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFirst;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ChangeCostume;                                     // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7816[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7817[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResourceManager_C*                  CallFunc_GetResourceManager_ResourceManager;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_Equip_Costume) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_Equip_Costume");
static_assert(sizeof(BP_PlayerHologram_C_Equip_Costume) == 0x000028, "Wrong size on BP_PlayerHologram_C_Equip_Costume");
static_assert(offsetof(BP_PlayerHologram_C_Equip_Costume, PlayerId) == 0x000000, "Member 'BP_PlayerHologram_C_Equip_Costume::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Equip_Costume, CostumeId) == 0x000004, "Member 'BP_PlayerHologram_C_Equip_Costume::CostumeId' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Equip_Costume, bFirst) == 0x000008, "Member 'BP_PlayerHologram_C_Equip_Costume::bFirst' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Equip_Costume, ChangeCostume) == 0x000009, "Member 'BP_PlayerHologram_C_Equip_Costume::ChangeCostume' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Equip_Costume, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00000C, "Member 'BP_PlayerHologram_C_Equip_Costume::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Equip_Costume, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_PlayerHologram_C_Equip_Costume::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Equip_Costume, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_PlayerHologram_C_Equip_Costume::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Equip_Costume, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000015, "Member 'BP_PlayerHologram_C_Equip_Costume::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Equip_Costume, CallFunc_GetResourceManager_ResourceManager) == 0x000018, "Member 'BP_PlayerHologram_C_Equip_Costume::CallFunc_GetResourceManager_ResourceManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_Equip_Costume, CallFunc_getMesh_mesh) == 0x000020, "Member 'BP_PlayerHologram_C_Equip_Costume::CallFunc_getMesh_mesh' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.ChangeEquip
// 0x01D8 (0x01D8 - 0x0000)
struct BP_PlayerHologram_C_ChangeEquip final
{
public:
	struct FPlayerInfo                            LPlayerInfo;                                       // 0x0000(0x00D0)(Edit, BlueprintVisible, NoDestructor)
	EPlayerID                                     LPlayerID;                                         // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7818[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7819[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_781A[0x1];                                     // 0x00E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_781B[0x2];                                     // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EquipWeapon_ChangeWeapon;                 // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Equip_Costume_ChangeCostume;              // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_781C[0x1];                                     // 0x00F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerInfo                            CallFunc_GetPartyMemberInfo_ReturnValue;           // 0x0100(0x00D0)(NoDestructor)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_ChangeEquip) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_ChangeEquip");
static_assert(sizeof(BP_PlayerHologram_C_ChangeEquip) == 0x0001D8, "Wrong size on BP_PlayerHologram_C_ChangeEquip");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, LPlayerInfo) == 0x000000, "Member 'BP_PlayerHologram_C_ChangeEquip::LPlayerInfo' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, LPlayerID) == 0x0000D0, "Member 'BP_PlayerHologram_C_ChangeEquip::LPlayerID' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, Temp_int_Variable) == 0x0000D4, "Member 'BP_PlayerHologram_C_ChangeEquip::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, Temp_int_Variable_1) == 0x0000D8, "Member 'BP_PlayerHologram_C_ChangeEquip::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000DC, "Member 'BP_PlayerHologram_C_ChangeEquip::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, CallFunc_Add_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_PlayerHologram_C_ChangeEquip::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, CallFunc_GetValidValue_ReturnValue) == 0x0000E4, "Member 'BP_PlayerHologram_C_ChangeEquip::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x0000E5, "Member 'BP_PlayerHologram_C_ChangeEquip::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x0000E6, "Member 'BP_PlayerHologram_C_ChangeEquip::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000E8, "Member 'BP_PlayerHologram_C_ChangeEquip::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, K2Node_SwitchEnum_CmpSuccess) == 0x0000EC, "Member 'BP_PlayerHologram_C_ChangeEquip::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000ED, "Member 'BP_PlayerHologram_C_ChangeEquip::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, CallFunc_SelectInt_ReturnValue) == 0x0000F0, "Member 'BP_PlayerHologram_C_ChangeEquip::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, CallFunc_EquipWeapon_ChangeWeapon) == 0x0000F4, "Member 'BP_PlayerHologram_C_ChangeEquip::CallFunc_EquipWeapon_ChangeWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, CallFunc_Equip_Costume_ChangeCostume) == 0x0000F5, "Member 'BP_PlayerHologram_C_ChangeEquip::CallFunc_Equip_Costume_ChangeCostume' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, CallFunc_BooleanOR_ReturnValue) == 0x0000F6, "Member 'BP_PlayerHologram_C_ChangeEquip::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, CallFunc_GetPlayerManager_PlayerManager) == 0x0000F8, "Member 'BP_PlayerHologram_C_ChangeEquip::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, CallFunc_GetPartyMemberInfo_ReturnValue) == 0x000100, "Member 'BP_PlayerHologram_C_ChangeEquip::CallFunc_GetPartyMemberInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, CallFunc_MakeLiteralInt_ReturnValue) == 0x0001D0, "Member 'BP_PlayerHologram_C_ChangeEquip::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ChangeEquip, CallFunc_Less_IntInt_ReturnValue) == 0x0001D4, "Member 'BP_PlayerHologram_C_ChangeEquip::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.EquipWeapon
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerHologram_C_EquipWeapon final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_781D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WeaponId;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangeWeapon;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbVisibility;                                      // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbSuccess;                                         // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_781E[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_781F[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7820[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7821[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7822[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeapon_Weapon;                         // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_EquipWeapon) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_EquipWeapon");
static_assert(sizeof(BP_PlayerHologram_C_EquipWeapon) == 0x000060, "Wrong size on BP_PlayerHologram_C_EquipWeapon");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, PlayerId) == 0x000000, "Member 'BP_PlayerHologram_C_EquipWeapon::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, WeaponId) == 0x000004, "Member 'BP_PlayerHologram_C_EquipWeapon::WeaponId' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, ChangeWeapon) == 0x000008, "Member 'BP_PlayerHologram_C_EquipWeapon::ChangeWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, LbVisibility) == 0x000009, "Member 'BP_PlayerHologram_C_EquipWeapon::LbVisibility' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, LbSuccess) == 0x00000A, "Member 'BP_PlayerHologram_C_EquipWeapon::LbSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_PlayerHologram_C_EquipWeapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_PlayerHologram_C_EquipWeapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_PlayerHologram_C_EquipWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_PlayerHologram_C_EquipWeapon::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_PlayerHologram_C_EquipWeapon::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_PlayerHologram_C_EquipWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, Temp_int_Loop_Num_Variable_1) == 0x000024, "Member 'BP_PlayerHologram_C_EquipWeapon::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'BP_PlayerHologram_C_EquipWeapon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'BP_PlayerHologram_C_EquipWeapon::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, CallFunc_Less_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_PlayerHologram_C_EquipWeapon::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_PlayerHologram_C_EquipWeapon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_PlayerHologram_C_EquipWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00003C, "Member 'BP_PlayerHologram_C_EquipWeapon::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, CallFunc_GetWeapon_Weapon) == 0x000040, "Member 'BP_PlayerHologram_C_EquipWeapon::CallFunc_GetWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000050, "Member 'BP_PlayerHologram_C_EquipWeapon::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'BP_PlayerHologram_C_EquipWeapon::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_PlayerHologram_C_EquipWeapon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipWeapon, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00005C, "Member 'BP_PlayerHologram_C_EquipWeapon::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.SetupWeaponHologramMaterial
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerHologram_C_SetupWeaponHologramMaterial final
{
public:
	class ABP_WeaponBase_C*                       WeaponBase;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetExtraMesh_ExtraMesh;                   // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7823[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7824[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_SetupWeaponHologramMaterial) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_SetupWeaponHologramMaterial");
static_assert(sizeof(BP_PlayerHologram_C_SetupWeaponHologramMaterial) == 0x000038, "Wrong size on BP_PlayerHologram_C_SetupWeaponHologramMaterial");
static_assert(offsetof(BP_PlayerHologram_C_SetupWeaponHologramMaterial, WeaponBase) == 0x000000, "Member 'BP_PlayerHologram_C_SetupWeaponHologramMaterial::WeaponBase' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetupWeaponHologramMaterial, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_PlayerHologram_C_SetupWeaponHologramMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetupWeaponHologramMaterial, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_PlayerHologram_C_SetupWeaponHologramMaterial::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetupWeaponHologramMaterial, CallFunc_GetExtraMesh_ExtraMesh) == 0x000010, "Member 'BP_PlayerHologram_C_SetupWeaponHologramMaterial::CallFunc_GetExtraMesh_ExtraMesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetupWeaponHologramMaterial, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_PlayerHologram_C_SetupWeaponHologramMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetupWeaponHologramMaterial, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_PlayerHologram_C_SetupWeaponHologramMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetupWeaponHologramMaterial, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_PlayerHologram_C_SetupWeaponHologramMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetupWeaponHologramMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PlayerHologram_C_SetupWeaponHologramMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetupWeaponHologramMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_PlayerHologram_C_SetupWeaponHologramMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.EquipAttachment
// 0x01F0 (0x01F0 - 0x0000)
struct BP_PlayerHologram_C_EquipAttachment final
{
public:
	struct FPlayerInfo                            LInfo;                                             // 0x0000(0x00D0)(Edit, BlueprintVisible, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7825[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7826[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AttachmentManageComponent_C*        CallFunc_GetAttachmentManageComponent_Manager;     // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7827[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7828[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7829[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AttachmentManageComponent_C*        CallFunc_GetAttachmentManageComponent_Manager_1;   // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_782A[0x2];                                     // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerInfo                            CallFunc_GetPartyMemberInfo_ReturnValue;           // 0x0120(0x00D0)(NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_EquipAttachment) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_EquipAttachment");
static_assert(sizeof(BP_PlayerHologram_C_EquipAttachment) == 0x0001F0, "Wrong size on BP_PlayerHologram_C_EquipAttachment");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, LInfo) == 0x000000, "Member 'BP_PlayerHologram_C_EquipAttachment::LInfo' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, Temp_int_Variable) == 0x0000D0, "Member 'BP_PlayerHologram_C_EquipAttachment::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, Temp_int_Variable_1) == 0x0000D4, "Member 'BP_PlayerHologram_C_EquipAttachment::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000D8, "Member 'BP_PlayerHologram_C_EquipAttachment::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, CallFunc_Add_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_PlayerHologram_C_EquipAttachment::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, CallFunc_GetValidValue_ReturnValue) == 0x0000E0, "Member 'BP_PlayerHologram_C_EquipAttachment::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x0000E1, "Member 'BP_PlayerHologram_C_EquipAttachment::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, K2Node_SwitchEnum_CmpSuccess) == 0x0000E2, "Member 'BP_PlayerHologram_C_EquipAttachment::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x0000E3, "Member 'BP_PlayerHologram_C_EquipAttachment::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, CallFunc_GetAttachmentManageComponent_Manager) == 0x0000E8, "Member 'BP_PlayerHologram_C_EquipAttachment::CallFunc_GetAttachmentManageComponent_Manager' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000F0, "Member 'BP_PlayerHologram_C_EquipAttachment::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, CallFunc_IsValid_ReturnValue) == 0x0000F4, "Member 'BP_PlayerHologram_C_EquipAttachment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000F8, "Member 'BP_PlayerHologram_C_EquipAttachment::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, CallFunc_Less_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_PlayerHologram_C_EquipAttachment::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, Temp_int_Variable_2) == 0x000100, "Member 'BP_PlayerHologram_C_EquipAttachment::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, CallFunc_GetAttachmentManageComponent_Manager_1) == 0x000108, "Member 'BP_PlayerHologram_C_EquipAttachment::CallFunc_GetAttachmentManageComponent_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, CallFunc_IsValid_ReturnValue_1) == 0x000110, "Member 'BP_PlayerHologram_C_EquipAttachment::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000111, "Member 'BP_PlayerHologram_C_EquipAttachment::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, CallFunc_Add_IntInt_ReturnValue_1) == 0x000114, "Member 'BP_PlayerHologram_C_EquipAttachment::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, CallFunc_GetPlayerManager_PlayerManager) == 0x000118, "Member 'BP_PlayerHologram_C_EquipAttachment::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachment, CallFunc_GetPartyMemberInfo_ReturnValue) == 0x000120, "Member 'BP_PlayerHologram_C_EquipAttachment::CallFunc_GetPartyMemberInfo_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.GetAttachmentManageComponent
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerHologram_C_GetAttachmentManageComponent final
{
public:
	EPlayerID                                     EquipPlayerID;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_782B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EquipMeshIndex;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AttachmentManageComponent_C*        Manager;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AttachmentManageComponent_C*        LManageComponent;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_GetAttachmentManageComponent) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_GetAttachmentManageComponent");
static_assert(sizeof(BP_PlayerHologram_C_GetAttachmentManageComponent) == 0x000020, "Wrong size on BP_PlayerHologram_C_GetAttachmentManageComponent");
static_assert(offsetof(BP_PlayerHologram_C_GetAttachmentManageComponent, EquipPlayerID) == 0x000000, "Member 'BP_PlayerHologram_C_GetAttachmentManageComponent::EquipPlayerID' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetAttachmentManageComponent, EquipMeshIndex) == 0x000004, "Member 'BP_PlayerHologram_C_GetAttachmentManageComponent::EquipMeshIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetAttachmentManageComponent, Manager) == 0x000008, "Member 'BP_PlayerHologram_C_GetAttachmentManageComponent::Manager' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetAttachmentManageComponent, LManageComponent) == 0x000010, "Member 'BP_PlayerHologram_C_GetAttachmentManageComponent::LManageComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetAttachmentManageComponent, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'BP_PlayerHologram_C_GetAttachmentManageComponent::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetAttachmentManageComponent, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BP_PlayerHologram_C_GetAttachmentManageComponent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.HologramOnInitMaterial
// 0x0058 (0x0058 - 0x0000)
struct BP_PlayerHologram_C_HologramOnInitMaterial final
{
public:
	float                                         Temp_float_Variable;                               // 0x0000(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHologramKind                                 Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_782C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeapon_Weapon;                         // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_782D[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0038(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_782E[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_782F[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x004C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_HologramOnInitMaterial) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_HologramOnInitMaterial");
static_assert(sizeof(BP_PlayerHologram_C_HologramOnInitMaterial) == 0x000058, "Wrong size on BP_PlayerHologram_C_HologramOnInitMaterial");
static_assert(offsetof(BP_PlayerHologram_C_HologramOnInitMaterial, Temp_float_Variable) == 0x000000, "Member 'BP_PlayerHologram_C_HologramOnInitMaterial::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOnInitMaterial, Temp_float_Variable_1) == 0x000004, "Member 'BP_PlayerHologram_C_HologramOnInitMaterial::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOnInitMaterial, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_PlayerHologram_C_HologramOnInitMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOnInitMaterial, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_PlayerHologram_C_HologramOnInitMaterial::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOnInitMaterial, Temp_byte_Variable) == 0x000010, "Member 'BP_PlayerHologram_C_HologramOnInitMaterial::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOnInitMaterial, CallFunc_GetWeapon_Weapon) == 0x000018, "Member 'BP_PlayerHologram_C_HologramOnInitMaterial::CallFunc_GetWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOnInitMaterial, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_PlayerHologram_C_HologramOnInitMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOnInitMaterial, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_PlayerHologram_C_HologramOnInitMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOnInitMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'BP_PlayerHologram_C_HologramOnInitMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOnInitMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_PlayerHologram_C_HologramOnInitMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOnInitMaterial, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_PlayerHologram_C_HologramOnInitMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOnInitMaterial, Temp_float_Variable_2) == 0x000038, "Member 'BP_PlayerHologram_C_HologramOnInitMaterial::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOnInitMaterial, CallFunc_getMesh_mesh) == 0x000040, "Member 'BP_PlayerHologram_C_HologramOnInitMaterial::CallFunc_getMesh_mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOnInitMaterial, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_PlayerHologram_C_HologramOnInitMaterial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOnInitMaterial, K2Node_Select_Default) == 0x00004C, "Member 'BP_PlayerHologram_C_HologramOnInitMaterial::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramOnInitMaterial, K2Node_SwitchEnum_CmpSuccess) == 0x000050, "Member 'BP_PlayerHologram_C_HologramOnInitMaterial::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.AnimNotifyHologramAttack
// 0x0014 (0x0014 - 0x0000)
struct BP_PlayerHologram_C_AnimNotifyHologramAttack final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7830[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_AnimNotifyHologramAttack) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_AnimNotifyHologramAttack");
static_assert(sizeof(BP_PlayerHologram_C_AnimNotifyHologramAttack) == 0x000014, "Wrong size on BP_PlayerHologram_C_AnimNotifyHologramAttack");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyHologramAttack, Param) == 0x000000, "Member 'BP_PlayerHologram_C_AnimNotifyHologramAttack::Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyHologramAttack, bDummy) == 0x000004, "Member 'BP_PlayerHologram_C_AnimNotifyHologramAttack::bDummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyHologramAttack, Temp_int_Variable) == 0x000008, "Member 'BP_PlayerHologram_C_AnimNotifyHologramAttack::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyHologramAttack, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_PlayerHologram_C_AnimNotifyHologramAttack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyHologramAttack, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerHologram_C_AnimNotifyHologramAttack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyHologramAttack, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'BP_PlayerHologram_C_AnimNotifyHologramAttack::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.AnimNotifyHologramAttackBegin
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerHologram_C_AnimNotifyHologramAttackBegin final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_AnimNotifyHologramAttackBegin) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_AnimNotifyHologramAttackBegin");
static_assert(sizeof(BP_PlayerHologram_C_AnimNotifyHologramAttackBegin) == 0x000008, "Wrong size on BP_PlayerHologram_C_AnimNotifyHologramAttackBegin");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyHologramAttackBegin, Param) == 0x000000, "Member 'BP_PlayerHologram_C_AnimNotifyHologramAttackBegin::Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyHologramAttackBegin, bDummy) == 0x000004, "Member 'BP_PlayerHologram_C_AnimNotifyHologramAttackBegin::bDummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyHologramAttackBegin, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_PlayerHologram_C_AnimNotifyHologramAttackBegin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyHologramAttackBegin, K2Node_SwitchEnum_CmpSuccess) == 0x000006, "Member 'BP_PlayerHologram_C_AnimNotifyHologramAttackBegin::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.AnimNotifyHologramAttackEnd
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerHologram_C_AnimNotifyHologramAttackEnd final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_AnimNotifyHologramAttackEnd) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_AnimNotifyHologramAttackEnd");
static_assert(sizeof(BP_PlayerHologram_C_AnimNotifyHologramAttackEnd) == 0x000008, "Wrong size on BP_PlayerHologram_C_AnimNotifyHologramAttackEnd");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyHologramAttackEnd, Param) == 0x000000, "Member 'BP_PlayerHologram_C_AnimNotifyHologramAttackEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyHologramAttackEnd, bDummy) == 0x000004, "Member 'BP_PlayerHologram_C_AnimNotifyHologramAttackEnd::bDummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyHologramAttackEnd, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'BP_PlayerHologram_C_AnimNotifyHologramAttackEnd::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.HologramWeaponEmissive
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerHologram_C_HologramWeaponEmissive final
{
public:
	float                                         Emissive;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     PlayerId;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7831[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeapon_Weapon;                         // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7832[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7833[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_HologramWeaponEmissive) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_HologramWeaponEmissive");
static_assert(sizeof(BP_PlayerHologram_C_HologramWeaponEmissive) == 0x000038, "Wrong size on BP_PlayerHologram_C_HologramWeaponEmissive");
static_assert(offsetof(BP_PlayerHologram_C_HologramWeaponEmissive, Emissive) == 0x000000, "Member 'BP_PlayerHologram_C_HologramWeaponEmissive::Emissive' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramWeaponEmissive, PlayerId) == 0x000004, "Member 'BP_PlayerHologram_C_HologramWeaponEmissive::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramWeaponEmissive, bDummy) == 0x000005, "Member 'BP_PlayerHologram_C_HologramWeaponEmissive::bDummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramWeaponEmissive, CallFunc_GetWeapon_Weapon) == 0x000008, "Member 'BP_PlayerHologram_C_HologramWeaponEmissive::CallFunc_GetWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramWeaponEmissive, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PlayerHologram_C_HologramWeaponEmissive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramWeaponEmissive, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_PlayerHologram_C_HologramWeaponEmissive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramWeaponEmissive, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PlayerHologram_C_HologramWeaponEmissive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramWeaponEmissive, Temp_int_Loop_Num_Variable) == 0x000024, "Member 'BP_PlayerHologram_C_HologramWeaponEmissive::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramWeaponEmissive, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_PlayerHologram_C_HologramWeaponEmissive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramWeaponEmissive, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PlayerHologram_C_HologramWeaponEmissive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramWeaponEmissive, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_PlayerHologram_C_HologramWeaponEmissive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.HologramAttackScar
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_HologramAttackScar final
{
public:
	class FName                                   HightTargetSocket;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_HologramAttackScar) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_HologramAttackScar");
static_assert(sizeof(BP_PlayerHologram_C_HologramAttackScar) == 0x000010, "Wrong size on BP_PlayerHologram_C_HologramAttackScar");
static_assert(offsetof(BP_PlayerHologram_C_HologramAttackScar, HightTargetSocket) == 0x000000, "Member 'BP_PlayerHologram_C_HologramAttackScar::HightTargetSocket' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramAttackScar, Angle) == 0x000008, "Member 'BP_PlayerHologram_C_HologramAttackScar::Angle' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_HologramAttackScar, bDummy) == 0x00000C, "Member 'BP_PlayerHologram_C_HologramAttackScar::bDummy' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.AnimNotifyCombinationAttack
// 0x0014 (0x0014 - 0x0000)
struct BP_PlayerHologram_C_AnimNotifyCombinationAttack final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7834[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_AnimNotifyCombinationAttack) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_AnimNotifyCombinationAttack");
static_assert(sizeof(BP_PlayerHologram_C_AnimNotifyCombinationAttack) == 0x000014, "Wrong size on BP_PlayerHologram_C_AnimNotifyCombinationAttack");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyCombinationAttack, Param) == 0x000000, "Member 'BP_PlayerHologram_C_AnimNotifyCombinationAttack::Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyCombinationAttack, bDummy) == 0x000004, "Member 'BP_PlayerHologram_C_AnimNotifyCombinationAttack::bDummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyCombinationAttack, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_PlayerHologram_C_AnimNotifyCombinationAttack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyCombinationAttack, Temp_int_Variable) == 0x00000C, "Member 'BP_PlayerHologram_C_AnimNotifyCombinationAttack::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyCombinationAttack, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_PlayerHologram_C_AnimNotifyCombinationAttack::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyCombinationAttack, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_PlayerHologram_C_AnimNotifyCombinationAttack::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.AnimNotifyCombinationAttackBegin
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerHologram_C_AnimNotifyCombinationAttackBegin final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_AnimNotifyCombinationAttackBegin) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_AnimNotifyCombinationAttackBegin");
static_assert(sizeof(BP_PlayerHologram_C_AnimNotifyCombinationAttackBegin) == 0x000008, "Wrong size on BP_PlayerHologram_C_AnimNotifyCombinationAttackBegin");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyCombinationAttackBegin, Param) == 0x000000, "Member 'BP_PlayerHologram_C_AnimNotifyCombinationAttackBegin::Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyCombinationAttackBegin, bDummy) == 0x000004, "Member 'BP_PlayerHologram_C_AnimNotifyCombinationAttackBegin::bDummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyCombinationAttackBegin, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_PlayerHologram_C_AnimNotifyCombinationAttackBegin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyCombinationAttackBegin, K2Node_SwitchEnum_CmpSuccess) == 0x000006, "Member 'BP_PlayerHologram_C_AnimNotifyCombinationAttackBegin::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.AnimNotifyCombinationAttackEnd
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerHologram_C_AnimNotifyCombinationAttackEnd final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_AnimNotifyCombinationAttackEnd) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_AnimNotifyCombinationAttackEnd");
static_assert(sizeof(BP_PlayerHologram_C_AnimNotifyCombinationAttackEnd) == 0x000008, "Wrong size on BP_PlayerHologram_C_AnimNotifyCombinationAttackEnd");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyCombinationAttackEnd, Param) == 0x000000, "Member 'BP_PlayerHologram_C_AnimNotifyCombinationAttackEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyCombinationAttackEnd, bDummy) == 0x000004, "Member 'BP_PlayerHologram_C_AnimNotifyCombinationAttackEnd::bDummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AnimNotifyCombinationAttackEnd, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'BP_PlayerHologram_C_AnimNotifyCombinationAttackEnd::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.EndAim
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerHologram_C_EndAim final
{
public:
	bool                                          bDummy;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_EndAim) == 0x000001, "Wrong alignment on BP_PlayerHologram_C_EndAim");
static_assert(sizeof(BP_PlayerHologram_C_EndAim) == 0x000001, "Wrong size on BP_PlayerHologram_C_EndAim");
static_assert(offsetof(BP_PlayerHologram_C_EndAim, bDummy) == 0x000000, "Member 'BP_PlayerHologram_C_EndAim::bDummy' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.StartAim
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerHologram_C_StartAim final
{
public:
	float                                         LimitAngle;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_StartAim) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_StartAim");
static_assert(sizeof(BP_PlayerHologram_C_StartAim) == 0x000008, "Wrong size on BP_PlayerHologram_C_StartAim");
static_assert(offsetof(BP_PlayerHologram_C_StartAim, LimitAngle) == 0x000000, "Member 'BP_PlayerHologram_C_StartAim::LimitAngle' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_StartAim, bDummy) == 0x000004, "Member 'BP_PlayerHologram_C_StartAim::bDummy' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.SetFlyingInterface
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerHologram_C_SetFlyingInterface final
{
public:
	class FName                                   Param_ClaimantName;                                // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7835[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMovementPropertyInterface> CallFunc_SetFlyingInterface_self_CastInput;        // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFlyingInterface_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_SetFlyingInterface) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_SetFlyingInterface");
static_assert(sizeof(BP_PlayerHologram_C_SetFlyingInterface) == 0x000028, "Wrong size on BP_PlayerHologram_C_SetFlyingInterface");
static_assert(offsetof(BP_PlayerHologram_C_SetFlyingInterface, Param_ClaimantName) == 0x000000, "Member 'BP_PlayerHologram_C_SetFlyingInterface::Param_ClaimantName' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetFlyingInterface, ReturnValue) == 0x000008, "Member 'BP_PlayerHologram_C_SetFlyingInterface::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetFlyingInterface, CallFunc_SetFlyingInterface_self_CastInput) == 0x000010, "Member 'BP_PlayerHologram_C_SetFlyingInterface::CallFunc_SetFlyingInterface_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetFlyingInterface, CallFunc_SetFlyingInterface_ReturnValue) == 0x000020, "Member 'BP_PlayerHologram_C_SetFlyingInterface::CallFunc_SetFlyingInterface_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.ClearFlyingInterface
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerHologram_C_ClearFlyingInterface final
{
public:
	class FName                                   Param_ClaimantName;                                // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7836[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMovementPropertyInterface> CallFunc_ClearFlyingInterface_self_CastInput;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClearFlyingInterface_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_ClearFlyingInterface) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_ClearFlyingInterface");
static_assert(sizeof(BP_PlayerHologram_C_ClearFlyingInterface) == 0x000028, "Wrong size on BP_PlayerHologram_C_ClearFlyingInterface");
static_assert(offsetof(BP_PlayerHologram_C_ClearFlyingInterface, Param_ClaimantName) == 0x000000, "Member 'BP_PlayerHologram_C_ClearFlyingInterface::Param_ClaimantName' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ClearFlyingInterface, ReturnValue) == 0x000008, "Member 'BP_PlayerHologram_C_ClearFlyingInterface::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ClearFlyingInterface, CallFunc_ClearFlyingInterface_self_CastInput) == 0x000010, "Member 'BP_PlayerHologram_C_ClearFlyingInterface::CallFunc_ClearFlyingInterface_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ClearFlyingInterface, CallFunc_ClearFlyingInterface_ReturnValue) == 0x000020, "Member 'BP_PlayerHologram_C_ClearFlyingInterface::CallFunc_ClearFlyingInterface_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.ClearFlyingForceInterface
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerHologram_C_ClearFlyingForceInterface final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7837[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMovementPropertyInterface> CallFunc_ClearFlyingForceInterface_self_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClearFlyingForceInterface_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_ClearFlyingForceInterface) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_ClearFlyingForceInterface");
static_assert(sizeof(BP_PlayerHologram_C_ClearFlyingForceInterface) == 0x000020, "Wrong size on BP_PlayerHologram_C_ClearFlyingForceInterface");
static_assert(offsetof(BP_PlayerHologram_C_ClearFlyingForceInterface, ReturnValue) == 0x000000, "Member 'BP_PlayerHologram_C_ClearFlyingForceInterface::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ClearFlyingForceInterface, CallFunc_ClearFlyingForceInterface_self_CastInput) == 0x000008, "Member 'BP_PlayerHologram_C_ClearFlyingForceInterface::CallFunc_ClearFlyingForceInterface_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_ClearFlyingForceInterface, CallFunc_ClearFlyingForceInterface_ReturnValue) == 0x000018, "Member 'BP_PlayerHologram_C_ClearFlyingForceInterface::CallFunc_ClearFlyingForceInterface_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.GetProxyMesh
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_GetProxyMesh final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_GetProxyMesh) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_GetProxyMesh");
static_assert(sizeof(BP_PlayerHologram_C_GetProxyMesh) == 0x000010, "Wrong size on BP_PlayerHologram_C_GetProxyMesh");
static_assert(offsetof(BP_PlayerHologram_C_GetProxyMesh, Mesh) == 0x000000, "Member 'BP_PlayerHologram_C_GetProxyMesh::Mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetProxyMesh, CallFunc_getMesh_mesh) == 0x000008, "Member 'BP_PlayerHologram_C_GetProxyMesh::CallFunc_getMesh_mesh' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.GetProxyRequestedPlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerHologram_C_GetProxyRequestedPlayer final
{
public:
	class ARSBattlePlayer_C*                      Player;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_GetProxyRequestedPlayer) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_GetProxyRequestedPlayer");
static_assert(sizeof(BP_PlayerHologram_C_GetProxyRequestedPlayer) == 0x000008, "Wrong size on BP_PlayerHologram_C_GetProxyRequestedPlayer");
static_assert(offsetof(BP_PlayerHologram_C_GetProxyRequestedPlayer, Player) == 0x000000, "Member 'BP_PlayerHologram_C_GetProxyRequestedPlayer::Player' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.GetHitEffectPriorityInterface
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerHologram_C_GetHitEffectPriorityInterface final
{
public:
	EFHitEffectPriority                           ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_GetHitEffectPriorityInterface) == 0x000001, "Wrong alignment on BP_PlayerHologram_C_GetHitEffectPriorityInterface");
static_assert(sizeof(BP_PlayerHologram_C_GetHitEffectPriorityInterface) == 0x000001, "Wrong size on BP_PlayerHologram_C_GetHitEffectPriorityInterface");
static_assert(offsetof(BP_PlayerHologram_C_GetHitEffectPriorityInterface, ReturnValue) == 0x000000, "Member 'BP_PlayerHologram_C_GetHitEffectPriorityInterface::ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.CheckExecuteAnimNotifyCharacterKind
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerHologram_C_CheckExecuteAnimNotifyCharacterKind final
{
public:
	ECharaExecuteNotifyKind                       Kind;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bExecute;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_CheckExecuteAnimNotifyCharacterKind) == 0x000001, "Wrong alignment on BP_PlayerHologram_C_CheckExecuteAnimNotifyCharacterKind");
static_assert(sizeof(BP_PlayerHologram_C_CheckExecuteAnimNotifyCharacterKind) == 0x000002, "Wrong size on BP_PlayerHologram_C_CheckExecuteAnimNotifyCharacterKind");
static_assert(offsetof(BP_PlayerHologram_C_CheckExecuteAnimNotifyCharacterKind, Kind) == 0x000000, "Member 'BP_PlayerHologram_C_CheckExecuteAnimNotifyCharacterKind::Kind' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_CheckExecuteAnimNotifyCharacterKind, bExecute) == 0x000001, "Member 'BP_PlayerHologram_C_CheckExecuteAnimNotifyCharacterKind::bExecute' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.AttachmentVisibilityOffOnHead
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerHologram_C_AttachmentVisibilityOffOnHead final
{
public:
	bool                                          bOff;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_AttachmentVisibilityOffOnHead) == 0x000001, "Wrong alignment on BP_PlayerHologram_C_AttachmentVisibilityOffOnHead");
static_assert(sizeof(BP_PlayerHologram_C_AttachmentVisibilityOffOnHead) == 0x000002, "Wrong size on BP_PlayerHologram_C_AttachmentVisibilityOffOnHead");
static_assert(offsetof(BP_PlayerHologram_C_AttachmentVisibilityOffOnHead, bOff) == 0x000000, "Member 'BP_PlayerHologram_C_AttachmentVisibilityOffOnHead::bOff' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AttachmentVisibilityOffOnHead, bDummy) == 0x000001, "Member 'BP_PlayerHologram_C_AttachmentVisibilityOffOnHead::bDummy' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.DestroyAttachmentMeshComponent
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_DestroyAttachmentMeshComponent final
{
public:
	class USceneComponent*                        DestroyMeshComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_DestroyAttachmentMeshComponent) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_DestroyAttachmentMeshComponent");
static_assert(sizeof(BP_PlayerHologram_C_DestroyAttachmentMeshComponent) == 0x000010, "Wrong size on BP_PlayerHologram_C_DestroyAttachmentMeshComponent");
static_assert(offsetof(BP_PlayerHologram_C_DestroyAttachmentMeshComponent, DestroyMeshComponent) == 0x000000, "Member 'BP_PlayerHologram_C_DestroyAttachmentMeshComponent::DestroyMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyAttachmentMeshComponent, bDummy) == 0x000008, "Member 'BP_PlayerHologram_C_DestroyAttachmentMeshComponent::bDummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_DestroyAttachmentMeshComponent, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_PlayerHologram_C_DestroyAttachmentMeshComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.EquipAttachmentInterface
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerHologram_C_EquipAttachmentInterface final
{
public:
	EPlayerAttachment                             Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7838[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AttachmentItemID;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     EquipPlayerID;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7839[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EquipMeshIndex;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_783A[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AttachmentManageComponent_C*        LManageComponent;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AttachmentManageComponent_C*        CallFunc_GetAttachmentManageComponent_Manager;     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_EquipAttachmentInterface) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_EquipAttachmentInterface");
static_assert(sizeof(BP_PlayerHologram_C_EquipAttachmentInterface) == 0x000030, "Wrong size on BP_PlayerHologram_C_EquipAttachmentInterface");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachmentInterface, Param_Index) == 0x000000, "Member 'BP_PlayerHologram_C_EquipAttachmentInterface::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachmentInterface, AttachmentItemID) == 0x000004, "Member 'BP_PlayerHologram_C_EquipAttachmentInterface::AttachmentItemID' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachmentInterface, EquipPlayerID) == 0x000008, "Member 'BP_PlayerHologram_C_EquipAttachmentInterface::EquipPlayerID' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachmentInterface, EquipMeshIndex) == 0x00000C, "Member 'BP_PlayerHologram_C_EquipAttachmentInterface::EquipMeshIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachmentInterface, bDummy) == 0x000010, "Member 'BP_PlayerHologram_C_EquipAttachmentInterface::bDummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachmentInterface, LManageComponent) == 0x000018, "Member 'BP_PlayerHologram_C_EquipAttachmentInterface::LManageComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachmentInterface, CallFunc_GetAttachmentManageComponent_Manager) == 0x000020, "Member 'BP_PlayerHologram_C_EquipAttachmentInterface::CallFunc_GetAttachmentManageComponent_Manager' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EquipAttachmentInterface, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_PlayerHologram_C_EquipAttachmentInterface::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.GetAttachedCharacterMesh
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerHologram_C_GetAttachedCharacterMesh final
{
public:
	EPlayerID                                     EquipPlayerID;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_783B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EquipMeshIndex;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_GetAttachedCharacterMesh) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_GetAttachedCharacterMesh");
static_assert(sizeof(BP_PlayerHologram_C_GetAttachedCharacterMesh) == 0x000018, "Wrong size on BP_PlayerHologram_C_GetAttachedCharacterMesh");
static_assert(offsetof(BP_PlayerHologram_C_GetAttachedCharacterMesh, EquipPlayerID) == 0x000000, "Member 'BP_PlayerHologram_C_GetAttachedCharacterMesh::EquipPlayerID' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetAttachedCharacterMesh, EquipMeshIndex) == 0x000004, "Member 'BP_PlayerHologram_C_GetAttachedCharacterMesh::EquipMeshIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetAttachedCharacterMesh, Mesh) == 0x000008, "Member 'BP_PlayerHologram_C_GetAttachedCharacterMesh::Mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetAttachedCharacterMesh, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'BP_PlayerHologram_C_GetAttachedCharacterMesh::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetAttachedCharacterMesh, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'BP_PlayerHologram_C_GetAttachedCharacterMesh::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.AttachmentVisibilityOffOnBackBody
// 0x000C (0x000C - 0x0000)
struct BP_PlayerHologram_C_AttachmentVisibilityOffOnBackBody final
{
public:
	bool                                          bVisibility;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_783C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FadeTime;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_AttachmentVisibilityOffOnBackBody) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_AttachmentVisibilityOffOnBackBody");
static_assert(sizeof(BP_PlayerHologram_C_AttachmentVisibilityOffOnBackBody) == 0x00000C, "Wrong size on BP_PlayerHologram_C_AttachmentVisibilityOffOnBackBody");
static_assert(offsetof(BP_PlayerHologram_C_AttachmentVisibilityOffOnBackBody, bVisibility) == 0x000000, "Member 'BP_PlayerHologram_C_AttachmentVisibilityOffOnBackBody::bVisibility' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AttachmentVisibilityOffOnBackBody, FadeTime) == 0x000004, "Member 'BP_PlayerHologram_C_AttachmentVisibilityOffOnBackBody::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_AttachmentVisibilityOffOnBackBody, bDummy) == 0x000008, "Member 'BP_PlayerHologram_C_AttachmentVisibilityOffOnBackBody::bDummy' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.SetPhotoModeDither
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerHologram_C_SetPhotoModeDither final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_783D[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_783E[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_SetPhotoModeDither) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_SetPhotoModeDither");
static_assert(sizeof(BP_PlayerHologram_C_SetPhotoModeDither) == 0x000020, "Wrong size on BP_PlayerHologram_C_SetPhotoModeDither");
static_assert(offsetof(BP_PlayerHologram_C_SetPhotoModeDither, Value) == 0x000000, "Member 'BP_PlayerHologram_C_SetPhotoModeDither::Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetPhotoModeDither, ReturnValue) == 0x000004, "Member 'BP_PlayerHologram_C_SetPhotoModeDither::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetPhotoModeDither, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_PlayerHologram_C_SetPhotoModeDither::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetPhotoModeDither, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_PlayerHologram_C_SetPhotoModeDither::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetPhotoModeDither, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_PlayerHologram_C_SetPhotoModeDither::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetPhotoModeDither, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_PlayerHologram_C_SetPhotoModeDither::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetPhotoModeDither, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_PlayerHologram_C_SetPhotoModeDither::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_SetPhotoModeDither, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_PlayerHologram_C_SetPhotoModeDither::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.EndPhotoMode
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerHologram_C_EndPhotoMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_783F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7840[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetPhotoModeDither_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUseHologram_bUse;                       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7841[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_EndPhotoMode) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_EndPhotoMode");
static_assert(sizeof(BP_PlayerHologram_C_EndPhotoMode) == 0x000020, "Wrong size on BP_PlayerHologram_C_EndPhotoMode");
static_assert(offsetof(BP_PlayerHologram_C_EndPhotoMode, ReturnValue) == 0x000000, "Member 'BP_PlayerHologram_C_EndPhotoMode::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EndPhotoMode, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_PlayerHologram_C_EndPhotoMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EndPhotoMode, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_PlayerHologram_C_EndPhotoMode::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EndPhotoMode, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_PlayerHologram_C_EndPhotoMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EndPhotoMode, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_PlayerHologram_C_EndPhotoMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EndPhotoMode, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_PlayerHologram_C_EndPhotoMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EndPhotoMode, CallFunc_SetPhotoModeDither_ReturnValue) == 0x000018, "Member 'BP_PlayerHologram_C_EndPhotoMode::CallFunc_SetPhotoModeDither_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EndPhotoMode, CallFunc_IsUseHologram_bUse) == 0x000019, "Member 'BP_PlayerHologram_C_EndPhotoMode::CallFunc_IsUseHologram_bUse' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_EndPhotoMode, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_PlayerHologram_C_EndPhotoMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.BeginPhotoMode
// 0x0160 (0x0160 - 0x0000)
struct BP_PlayerHologram_C_BeginPhotoMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7842[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponBase_C*                       LWeapon;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7843[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7844[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_4;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7845[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_5;                      // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7846[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7847[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AttachmentManageComponent_C*        CallFunc_GetAttachmentManageComponent_Manager;     // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CallFunc_GetMeshAll_MeshList;                      // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7848[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7849[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_784A[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AttachmentManageComponent_C*        CallFunc_GetAttachmentManageComponent_Manager_1;   // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CallFunc_GetMeshAll_MeshList_1;                    // 0x00C8(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_784B[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetExtraMesh_ExtraMesh;                   // 0x00F0(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeapon_Weapon;                         // 0x0108(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_784C[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_6;                      // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_784D[0x3];                                     // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetCopyMesh_CopyMeshList;                 // 0x0128(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_784E[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_784F[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUseHologram_bUse;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7850[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetForcedLOD_ReturnValue;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_BeginPhotoMode) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_BeginPhotoMode");
static_assert(sizeof(BP_PlayerHologram_C_BeginPhotoMode) == 0x000160, "Wrong size on BP_PlayerHologram_C_BeginPhotoMode");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, ReturnValue) == 0x000000, "Member 'BP_PlayerHologram_C_BeginPhotoMode::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, LWeapon) == 0x000008, "Member 'BP_PlayerHologram_C_BeginPhotoMode::LWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Array_Index_Variable_2) == 0x000024, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Array_Index_Variable_3) == 0x000030, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Loop_Num_Variable_1) == 0x000034, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Loop_Num_Variable_2) == 0x00003C, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Loop_Counter_Variable_2) == 0x000040, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Add_IntInt_ReturnValue_2) == 0x000044, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Array_Index_Variable_4) == 0x000048, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Loop_Num_Variable_3) == 0x00004C, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Less_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Array_Index_Variable_5) == 0x000054, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Loop_Num_Variable_4) == 0x000058, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Loop_Num_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Less_IntInt_ReturnValue_2) == 0x00005C, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Loop_Counter_Variable_3) == 0x000060, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Add_IntInt_ReturnValue_3) == 0x000064, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Array_Index_Variable_6) == 0x000068, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Loop_Num_Variable_5) == 0x00006C, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Loop_Num_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Less_IntInt_ReturnValue_3) == 0x000070, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Loop_Counter_Variable_4) == 0x000078, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_GetAttachmentManageComponent_Manager) == 0x000080, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_GetAttachmentManageComponent_Manager' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_GetMeshAll_MeshList) == 0x000088, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_GetMeshAll_MeshList' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Less_IntInt_ReturnValue_4) == 0x000098, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_IsValid_ReturnValue) == 0x000099, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Array_Add_ReturnValue) == 0x00009C, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000A4, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Loop_Counter_Variable_5) == 0x0000A8, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Loop_Counter_Variable_6) == 0x0000AC, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000B0, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Less_IntInt_ReturnValue_5) == 0x0000B4, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Add_IntInt_ReturnValue_6) == 0x0000B8, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_GetAttachmentManageComponent_Manager_1) == 0x0000C0, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_GetAttachmentManageComponent_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_GetMeshAll_MeshList_1) == 0x0000C8, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_GetMeshAll_MeshList_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_IsValid_ReturnValue_1) == 0x0000D8, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Array_Add_ReturnValue_1) == 0x0000DC, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Array_Add_ReturnValue_2) == 0x0000E0, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Array_Length_ReturnValue_2) == 0x0000E4, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Array_Length_ReturnValue_3) == 0x0000E8, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Array_Add_ReturnValue_3) == 0x0000EC, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_GetExtraMesh_ExtraMesh) == 0x0000F0, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_GetExtraMesh_ExtraMesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Array_Length_ReturnValue_4) == 0x000100, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Array_Add_ReturnValue_4) == 0x000104, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_GetWeapon_Weapon) == 0x000108, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_GetWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_IsValid_ReturnValue_2) == 0x000118, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Array_Length_ReturnValue_5) == 0x00011C, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, Temp_int_Loop_Num_Variable_6) == 0x000120, "Member 'BP_PlayerHologram_C_BeginPhotoMode::Temp_int_Loop_Num_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Less_IntInt_ReturnValue_6) == 0x000124, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_GetCopyMesh_CopyMeshList) == 0x000128, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_GetCopyMesh_CopyMeshList' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000138, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Array_Add_ReturnValue_5) == 0x00013C, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Array_Length_ReturnValue_6) == 0x000140, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_getMesh_mesh) == 0x000148, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_getMesh_mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_IsUseHologram_bUse) == 0x000150, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_IsUseHologram_bUse' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_GetForcedLOD_ReturnValue) == 0x000154, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_GetForcedLOD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_BeginPhotoMode, CallFunc_Array_Add_ReturnValue_6) == 0x000158, "Member 'BP_PlayerHologram_C_BeginPhotoMode::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.GetPhotoModeSkeletalMesh
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerHologram_C_GetPhotoModeSkeletalMesh final
{
public:
	class USkeletalMeshComponent*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_getMesh_mesh;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_GetPhotoModeSkeletalMesh) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_GetPhotoModeSkeletalMesh");
static_assert(sizeof(BP_PlayerHologram_C_GetPhotoModeSkeletalMesh) == 0x000010, "Wrong size on BP_PlayerHologram_C_GetPhotoModeSkeletalMesh");
static_assert(offsetof(BP_PlayerHologram_C_GetPhotoModeSkeletalMesh, ReturnValue) == 0x000000, "Member 'BP_PlayerHologram_C_GetPhotoModeSkeletalMesh::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetPhotoModeSkeletalMesh, CallFunc_getMesh_mesh) == 0x000008, "Member 'BP_PlayerHologram_C_GetPhotoModeSkeletalMesh::CallFunc_getMesh_mesh' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.GetPhotoModeDitherDataName
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerHologram_C_GetPhotoModeDitherDataName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_GetPhotoModeDitherDataName) == 0x000004, "Wrong alignment on BP_PlayerHologram_C_GetPhotoModeDitherDataName");
static_assert(sizeof(BP_PlayerHologram_C_GetPhotoModeDitherDataName) == 0x000008, "Wrong size on BP_PlayerHologram_C_GetPhotoModeDitherDataName");
static_assert(offsetof(BP_PlayerHologram_C_GetPhotoModeDitherDataName, ReturnValue) == 0x000000, "Member 'BP_PlayerHologram_C_GetPhotoModeDitherDataName::ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.IsPhotoModeManualOverlap
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerHologram_C_IsPhotoModeManualOverlap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_IsPhotoModeManualOverlap) == 0x000001, "Wrong alignment on BP_PlayerHologram_C_IsPhotoModeManualOverlap");
static_assert(sizeof(BP_PlayerHologram_C_IsPhotoModeManualOverlap) == 0x000001, "Wrong size on BP_PlayerHologram_C_IsPhotoModeManualOverlap");
static_assert(offsetof(BP_PlayerHologram_C_IsPhotoModeManualOverlap, ReturnValue) == 0x000000, "Member 'BP_PlayerHologram_C_IsPhotoModeManualOverlap::ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.GetPhotoModeManualOverlapCapsule
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerHologram_C_GetPhotoModeManualOverlapCapsule final
{
public:
	class UCapsuleComponent*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_GetPhotoModeManualOverlapCapsule) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_GetPhotoModeManualOverlapCapsule");
static_assert(sizeof(BP_PlayerHologram_C_GetPhotoModeManualOverlapCapsule) == 0x000008, "Wrong size on BP_PlayerHologram_C_GetPhotoModeManualOverlapCapsule");
static_assert(offsetof(BP_PlayerHologram_C_GetPhotoModeManualOverlapCapsule, ReturnValue) == 0x000000, "Member 'BP_PlayerHologram_C_GetPhotoModeManualOverlapCapsule::ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.PhotoModeTick
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerHologram_C_PhotoModeTick final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_PhotoModeTick) == 0x000001, "Wrong alignment on BP_PlayerHologram_C_PhotoModeTick");
static_assert(sizeof(BP_PlayerHologram_C_PhotoModeTick) == 0x000001, "Wrong size on BP_PlayerHologram_C_PhotoModeTick");
static_assert(offsetof(BP_PlayerHologram_C_PhotoModeTick, ReturnValue) == 0x000000, "Member 'BP_PlayerHologram_C_PhotoModeTick::ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.IsPlayAnimation
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerHologram_C_IsPlayAnimation final
{
public:
	bool                                          bPlay;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerHologram_C_IsPlayAnimation) == 0x000001, "Wrong alignment on BP_PlayerHologram_C_IsPlayAnimation");
static_assert(sizeof(BP_PlayerHologram_C_IsPlayAnimation) == 0x000002, "Wrong size on BP_PlayerHologram_C_IsPlayAnimation");
static_assert(offsetof(BP_PlayerHologram_C_IsPlayAnimation, bPlay) == 0x000000, "Member 'BP_PlayerHologram_C_IsPlayAnimation::bPlay' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_IsPlayAnimation, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_PlayerHologram_C_IsPlayAnimation::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.GetWeaponClass
// 0x00F8 (0x00F8 - 0x0000)
struct BP_PlayerHologram_C_GetWeaponClass final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7851[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 WeaponClass;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7852[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_3;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_4;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_5;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_6;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_7;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_8;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_9;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_10;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_11;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_12;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_13;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_14;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_15;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_16;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_17;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_18;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_19;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_20;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_21;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_22;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_23;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_24;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_25;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_26;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_GetWeaponClass) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_GetWeaponClass");
static_assert(sizeof(BP_PlayerHologram_C_GetWeaponClass) == 0x0000F8, "Wrong size on BP_PlayerHologram_C_GetWeaponClass");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, PlayerId) == 0x000000, "Member 'BP_PlayerHologram_C_GetWeaponClass::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, WeaponClass) == 0x000008, "Member 'BP_PlayerHologram_C_GetWeaponClass::WeaponClass' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_byte_Variable) == 0x000010, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable) == 0x000018, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_1) == 0x000020, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_2) == 0x000028, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_3) == 0x000030, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_4) == 0x000038, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_5) == 0x000040, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_6) == 0x000048, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_7) == 0x000050, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_8) == 0x000058, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_9) == 0x000060, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_10) == 0x000068, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_11) == 0x000070, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_12) == 0x000078, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_13) == 0x000080, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_14) == 0x000088, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_15) == 0x000090, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_16) == 0x000098, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_17) == 0x0000A0, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_18) == 0x0000A8, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_19) == 0x0000B0, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_20) == 0x0000B8, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_21) == 0x0000C0, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_22) == 0x0000C8, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_23) == 0x0000D0, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_24) == 0x0000D8, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_25) == 0x0000E0, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, Temp_class_Variable_26) == 0x0000E8, "Member 'BP_PlayerHologram_C_GetWeaponClass::Temp_class_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeaponClass, K2Node_Select_Default) == 0x0000F0, "Member 'BP_PlayerHologram_C_GetWeaponClass::K2Node_Select_Default' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.GetWeapon
// 0x0058 (0x0058 - 0x0000)
struct BP_PlayerHologram_C_GetWeapon final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7853[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WeaponBase_C*>               Weapon;                                            // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class ABP_WeaponBase_C*>               LWeaponList;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7854[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_10;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_GetWeapon) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_GetWeapon");
static_assert(sizeof(BP_PlayerHologram_C_GetWeapon) == 0x000058, "Wrong size on BP_PlayerHologram_C_GetWeapon");
static_assert(offsetof(BP_PlayerHologram_C_GetWeapon, PlayerId) == 0x000000, "Member 'BP_PlayerHologram_C_GetWeapon::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeapon, Weapon) == 0x000008, "Member 'BP_PlayerHologram_C_GetWeapon::Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeapon, LWeaponList) == 0x000018, "Member 'BP_PlayerHologram_C_GetWeapon::LWeaponList' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeapon, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'BP_PlayerHologram_C_GetWeapon::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeapon, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'BP_PlayerHologram_C_GetWeapon::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeapon, CallFunc_Array_Add_ReturnValue_1) == 0x000030, "Member 'BP_PlayerHologram_C_GetWeapon::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeapon, CallFunc_Array_Add_ReturnValue_2) == 0x000034, "Member 'BP_PlayerHologram_C_GetWeapon::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeapon, CallFunc_Array_Add_ReturnValue_3) == 0x000038, "Member 'BP_PlayerHologram_C_GetWeapon::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeapon, CallFunc_Array_Add_ReturnValue_4) == 0x00003C, "Member 'BP_PlayerHologram_C_GetWeapon::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeapon, CallFunc_Array_Add_ReturnValue_5) == 0x000040, "Member 'BP_PlayerHologram_C_GetWeapon::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeapon, CallFunc_Array_Add_ReturnValue_6) == 0x000044, "Member 'BP_PlayerHologram_C_GetWeapon::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeapon, CallFunc_Array_Add_ReturnValue_7) == 0x000048, "Member 'BP_PlayerHologram_C_GetWeapon::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeapon, CallFunc_Array_Add_ReturnValue_8) == 0x00004C, "Member 'BP_PlayerHologram_C_GetWeapon::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeapon, CallFunc_Array_Add_ReturnValue_9) == 0x000050, "Member 'BP_PlayerHologram_C_GetWeapon::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetWeapon, CallFunc_Array_Add_ReturnValue_10) == 0x000054, "Member 'BP_PlayerHologram_C_GetWeapon::CallFunc_Array_Add_ReturnValue_10' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.GetCurveStart
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerHologram_C_GetCurveStart final
{
public:
	class UCurveVector*                           Curve;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHologramKind                                 Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7855[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_GetCurveStart) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_GetCurveStart");
static_assert(sizeof(BP_PlayerHologram_C_GetCurveStart) == 0x000018, "Wrong size on BP_PlayerHologram_C_GetCurveStart");
static_assert(offsetof(BP_PlayerHologram_C_GetCurveStart, Curve) == 0x000000, "Member 'BP_PlayerHologram_C_GetCurveStart::Curve' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetCurveStart, Temp_byte_Variable) == 0x000008, "Member 'BP_PlayerHologram_C_GetCurveStart::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetCurveStart, K2Node_Select_Default) == 0x000010, "Member 'BP_PlayerHologram_C_GetCurveStart::K2Node_Select_Default' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.GetCurveLoop
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerHologram_C_GetCurveLoop final
{
public:
	class UCurveVector*                           Curve;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHologramKind                                 Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7856[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_GetCurveLoop) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_GetCurveLoop");
static_assert(sizeof(BP_PlayerHologram_C_GetCurveLoop) == 0x000018, "Wrong size on BP_PlayerHologram_C_GetCurveLoop");
static_assert(offsetof(BP_PlayerHologram_C_GetCurveLoop, Curve) == 0x000000, "Member 'BP_PlayerHologram_C_GetCurveLoop::Curve' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetCurveLoop, Temp_byte_Variable) == 0x000008, "Member 'BP_PlayerHologram_C_GetCurveLoop::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetCurveLoop, K2Node_Select_Default) == 0x000010, "Member 'BP_PlayerHologram_C_GetCurveLoop::K2Node_Select_Default' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.GetCurveEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerHologram_C_GetCurveEnd final
{
public:
	class UCurveVector*                           Curve;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHologramKind                                 Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7857[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_GetCurveEnd) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_GetCurveEnd");
static_assert(sizeof(BP_PlayerHologram_C_GetCurveEnd) == 0x000018, "Wrong size on BP_PlayerHologram_C_GetCurveEnd");
static_assert(offsetof(BP_PlayerHologram_C_GetCurveEnd, Curve) == 0x000000, "Member 'BP_PlayerHologram_C_GetCurveEnd::Curve' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetCurveEnd, Temp_byte_Variable) == 0x000008, "Member 'BP_PlayerHologram_C_GetCurveEnd::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetCurveEnd, K2Node_Select_Default) == 0x000010, "Member 'BP_PlayerHologram_C_GetCurveEnd::K2Node_Select_Default' has a wrong offset!");

// Function BP_PlayerHologram.BP_PlayerHologram_C.GetCurveColorStart
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerHologram_C_GetCurveColorStart final
{
public:
	class UCurveVector*                           Curve;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHologramKind                                 Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7858[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerHologram_C_GetCurveColorStart) == 0x000008, "Wrong alignment on BP_PlayerHologram_C_GetCurveColorStart");
static_assert(sizeof(BP_PlayerHologram_C_GetCurveColorStart) == 0x000018, "Wrong size on BP_PlayerHologram_C_GetCurveColorStart");
static_assert(offsetof(BP_PlayerHologram_C_GetCurveColorStart, Curve) == 0x000000, "Member 'BP_PlayerHologram_C_GetCurveColorStart::Curve' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetCurveColorStart, Temp_byte_Variable) == 0x000008, "Member 'BP_PlayerHologram_C_GetCurveColorStart::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerHologram_C_GetCurveColorStart, K2Node_Select_Default) == 0x000010, "Member 'BP_PlayerHologram_C_GetCurveColorStart::K2Node_Select_Default' has a wrong offset!");

}

