#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIAttackedInfoComponent

#include "Basic.hpp"

#include "AIAttackedInfoComponent_classes.hpp"
#include "AIAttackedInfoComponent_parameters.hpp"


namespace SDK
{

// Function AIAttackedInfoComponent.AIAttackedInfoComponent_C.SetAttackedActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAIAttackedInfoComponent_C::SetAttackedActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIAttackedInfoComponent_C", "SetAttackedActor");

	Params::AIAttackedInfoComponent_C_SetAttackedActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIAttackedInfoComponent.AIAttackedInfoComponent_C.GetAttackedActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAIAttackedInfoComponent_C::GetAttackedActor(class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIAttackedInfoComponent_C", "GetAttackedActor");

	Params::AIAttackedInfoComponent_C_GetAttackedActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function AIAttackedInfoComponent.AIAttackedInfoComponent_C.ClearAttackedActor
// (Public, BlueprintCallable, BlueprintEvent)

void UAIAttackedInfoComponent_C::ClearAttackedActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIAttackedInfoComponent_C", "ClearAttackedActor");

	UObject::ProcessEvent(Func, nullptr);
}

}

