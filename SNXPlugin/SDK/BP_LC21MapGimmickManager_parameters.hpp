#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LC21MapGimmickManager

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BP_LC21MapGimmickManager.BP_LC21MapGimmickManager_C.ExecuteUbergraph_BP_LC21MapGimmickManager
// 0x0018 (0x0018 - 0x0000)
struct BP_LC21MapGimmickManager_C_ExecuteUbergraph_BP_LC21MapGimmickManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3281[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           K2Node_CustomEvent_Actor;                          // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindAllObjectsAndInitialize_ReturnValue;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartEventLaser_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3282[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LC21MapGimmickManager_C_ExecuteUbergraph_BP_LC21MapGimmickManager) == 0x000008, "Wrong alignment on BP_LC21MapGimmickManager_C_ExecuteUbergraph_BP_LC21MapGimmickManager");
static_assert(sizeof(BP_LC21MapGimmickManager_C_ExecuteUbergraph_BP_LC21MapGimmickManager) == 0x000018, "Wrong size on BP_LC21MapGimmickManager_C_ExecuteUbergraph_BP_LC21MapGimmickManager");
static_assert(offsetof(BP_LC21MapGimmickManager_C_ExecuteUbergraph_BP_LC21MapGimmickManager, EntryPoint) == 0x000000, "Member 'BP_LC21MapGimmickManager_C_ExecuteUbergraph_BP_LC21MapGimmickManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_ExecuteUbergraph_BP_LC21MapGimmickManager, K2Node_CustomEvent_Actor) == 0x000008, "Member 'BP_LC21MapGimmickManager_C_ExecuteUbergraph_BP_LC21MapGimmickManager::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_ExecuteUbergraph_BP_LC21MapGimmickManager, CallFunc_FindAllObjectsAndInitialize_ReturnValue) == 0x000010, "Member 'BP_LC21MapGimmickManager_C_ExecuteUbergraph_BP_LC21MapGimmickManager::CallFunc_FindAllObjectsAndInitialize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_ExecuteUbergraph_BP_LC21MapGimmickManager, CallFunc_StartEventLaser_ReturnValue) == 0x000011, "Member 'BP_LC21MapGimmickManager_C_ExecuteUbergraph_BP_LC21MapGimmickManager::CallFunc_StartEventLaser_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_ExecuteUbergraph_BP_LC21MapGimmickManager, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'BP_LC21MapGimmickManager_C_ExecuteUbergraph_BP_LC21MapGimmickManager::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_LC21MapGimmickManager.BP_LC21MapGimmickManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_LC21MapGimmickManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LC21MapGimmickManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_LC21MapGimmickManager_C_ReceiveTick");
static_assert(sizeof(BP_LC21MapGimmickManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_LC21MapGimmickManager_C_ReceiveTick");
static_assert(offsetof(BP_LC21MapGimmickManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_LC21MapGimmickManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_LC21MapGimmickManager.BP_LC21MapGimmickManager_C.OnStartAllBlockFall_Event
// 0x0008 (0x0008 - 0x0000)
struct BP_LC21MapGimmickManager_C_OnStartAllBlockFall_Event final
{
public:
	const class AActor*                           Actor;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LC21MapGimmickManager_C_OnStartAllBlockFall_Event) == 0x000008, "Wrong alignment on BP_LC21MapGimmickManager_C_OnStartAllBlockFall_Event");
static_assert(sizeof(BP_LC21MapGimmickManager_C_OnStartAllBlockFall_Event) == 0x000008, "Wrong size on BP_LC21MapGimmickManager_C_OnStartAllBlockFall_Event");
static_assert(offsetof(BP_LC21MapGimmickManager_C_OnStartAllBlockFall_Event, Actor) == 0x000000, "Member 'BP_LC21MapGimmickManager_C_OnStartAllBlockFall_Event::Actor' has a wrong offset!");

// Function BP_LC21MapGimmickManager.BP_LC21MapGimmickManager_C.FindAllObjectsAndInitialize
// 0x0018 (0x0018 - 0x0000)
struct BP_LC21MapGimmickManager_C_FindAllObjectsAndInitialize final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3283[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClassActor_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LC21MapGimmickManager_C_FindAllObjectsAndInitialize) == 0x000008, "Wrong alignment on BP_LC21MapGimmickManager_C_FindAllObjectsAndInitialize");
static_assert(sizeof(BP_LC21MapGimmickManager_C_FindAllObjectsAndInitialize) == 0x000018, "Wrong size on BP_LC21MapGimmickManager_C_FindAllObjectsAndInitialize");
static_assert(offsetof(BP_LC21MapGimmickManager_C_FindAllObjectsAndInitialize, ReturnValue) == 0x000000, "Member 'BP_LC21MapGimmickManager_C_FindAllObjectsAndInitialize::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_FindAllObjectsAndInitialize, CallFunc_LoadSoftClassActor_ReturnValue) == 0x000008, "Member 'BP_LC21MapGimmickManager_C_FindAllObjectsAndInitialize::CallFunc_LoadSoftClassActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_FindAllObjectsAndInitialize, CallFunc_IsValidClass_ReturnValue) == 0x000010, "Member 'BP_LC21MapGimmickManager_C_FindAllObjectsAndInitialize::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BP_LC21MapGimmickManager.BP_LC21MapGimmickManager_C.StartEarthQuake
// 0x0008 (0x0008 - 0x0000)
struct BP_LC21MapGimmickManager_C_StartEarthQuake final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LC21MapGimmickManager_C_StartEarthQuake) == 0x000008, "Wrong alignment on BP_LC21MapGimmickManager_C_StartEarthQuake");
static_assert(sizeof(BP_LC21MapGimmickManager_C_StartEarthQuake) == 0x000008, "Wrong size on BP_LC21MapGimmickManager_C_StartEarthQuake");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEarthQuake, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_LC21MapGimmickManager_C_StartEarthQuake::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_LC21MapGimmickManager.BP_LC21MapGimmickManager_C.EndEarthQuake
// 0x0008 (0x0008 - 0x0000)
struct BP_LC21MapGimmickManager_C_EndEarthQuake final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LC21MapGimmickManager_C_EndEarthQuake) == 0x000008, "Wrong alignment on BP_LC21MapGimmickManager_C_EndEarthQuake");
static_assert(sizeof(BP_LC21MapGimmickManager_C_EndEarthQuake) == 0x000008, "Wrong size on BP_LC21MapGimmickManager_C_EndEarthQuake");
static_assert(offsetof(BP_LC21MapGimmickManager_C_EndEarthQuake, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_LC21MapGimmickManager_C_EndEarthQuake::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_LC21MapGimmickManager.BP_LC21MapGimmickManager_C.ChangePhase
// 0x0030 (0x0030 - 0x0000)
struct BP_LC21MapGimmickManager_C_ChangePhase final
{
public:
	int32                                         PhaseNo;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3284[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapGimmickFallFloor_C> K2Node_DynamicCast_AsBPI_Map_Gimmick_Fall_Floor;   // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3285[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LC21MapGimmickManager_C_ChangePhase) == 0x000008, "Wrong alignment on BP_LC21MapGimmickManager_C_ChangePhase");
static_assert(sizeof(BP_LC21MapGimmickManager_C_ChangePhase) == 0x000030, "Wrong size on BP_LC21MapGimmickManager_C_ChangePhase");
static_assert(offsetof(BP_LC21MapGimmickManager_C_ChangePhase, PhaseNo) == 0x000000, "Member 'BP_LC21MapGimmickManager_C_ChangePhase::PhaseNo' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_ChangePhase, ReturnValue) == 0x000004, "Member 'BP_LC21MapGimmickManager_C_ChangePhase::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_ChangePhase, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_LC21MapGimmickManager_C_ChangePhase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_ChangePhase, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_LC21MapGimmickManager_C_ChangePhase::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_ChangePhase, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_LC21MapGimmickManager_C_ChangePhase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_ChangePhase, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_LC21MapGimmickManager_C_ChangePhase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_ChangePhase, K2Node_DynamicCast_AsBPI_Map_Gimmick_Fall_Floor) == 0x000018, "Member 'BP_LC21MapGimmickManager_C_ChangePhase::K2Node_DynamicCast_AsBPI_Map_Gimmick_Fall_Floor' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_ChangePhase, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_LC21MapGimmickManager_C_ChangePhase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_ChangePhase, CallFunc_Less_IntInt_ReturnValue) == 0x000029, "Member 'BP_LC21MapGimmickManager_C_ChangePhase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_ChangePhase, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_LC21MapGimmickManager_C_ChangePhase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LC21MapGimmickManager.BP_LC21MapGimmickManager_C.StartFallLeftAllFromActor
// 0x0068 (0x0068 - 0x0000)
struct BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActorId;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3286[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3287[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3288[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3289[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328A[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_328B[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapGimmickFallFloor_C> K2Node_DynamicCast_AsBPI_Map_Gimmick_Fall_Floor;   // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328C[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor) == 0x000008, "Wrong alignment on BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor");
static_assert(sizeof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor) == 0x000068, "Wrong size on BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, Actor) == 0x000000, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::Actor' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, ActorId) == 0x000008, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::ActorId' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, Temp_int_Loop_Num_Variable_1) == 0x000020, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, CallFunc_Less_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, CallFunc_BooleanAND_ReturnValue) == 0x00003C, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, K2Node_DynamicCast_AsBPI_Map_Gimmick_Fall_Floor) == 0x000048, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::K2Node_DynamicCast_AsBPI_Map_Gimmick_Fall_Floor' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000060, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromActor::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_LC21MapGimmickManager.BP_LC21MapGimmickManager_C.GetFloorInfoFromActor
// 0x0040 (0x0040 - 0x0000)
struct BP_LC21MapGimmickManager_C_GetFloorInfoFromActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBossFloorInfo                         FloorInfo;                                         // 0x0008(0x0018)(Parm, OutParm)
	int32                                         No;                                                // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328D[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LC21MapGimmickManager_C_GetFloorInfoFromActor) == 0x000008, "Wrong alignment on BP_LC21MapGimmickManager_C_GetFloorInfoFromActor");
static_assert(sizeof(BP_LC21MapGimmickManager_C_GetFloorInfoFromActor) == 0x000040, "Wrong size on BP_LC21MapGimmickManager_C_GetFloorInfoFromActor");
static_assert(offsetof(BP_LC21MapGimmickManager_C_GetFloorInfoFromActor, Actor) == 0x000000, "Member 'BP_LC21MapGimmickManager_C_GetFloorInfoFromActor::Actor' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_GetFloorInfoFromActor, FloorInfo) == 0x000008, "Member 'BP_LC21MapGimmickManager_C_GetFloorInfoFromActor::FloorInfo' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_GetFloorInfoFromActor, No) == 0x000020, "Member 'BP_LC21MapGimmickManager_C_GetFloorInfoFromActor::No' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_GetFloorInfoFromActor, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_LC21MapGimmickManager_C_GetFloorInfoFromActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_GetFloorInfoFromActor, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_LC21MapGimmickManager_C_GetFloorInfoFromActor::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_GetFloorInfoFromActor, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_LC21MapGimmickManager_C_GetFloorInfoFromActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_GetFloorInfoFromActor, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_LC21MapGimmickManager_C_GetFloorInfoFromActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_GetFloorInfoFromActor, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_LC21MapGimmickManager_C_GetFloorInfoFromActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_GetFloorInfoFromActor, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000035, "Member 'BP_LC21MapGimmickManager_C_GetFloorInfoFromActor::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_GetFloorInfoFromActor, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_LC21MapGimmickManager_C_GetFloorInfoFromActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LC21MapGimmickManager.BP_LC21MapGimmickManager_C.SetIsFallToInfoFromActor
// 0x0030 (0x0030 - 0x0000)
struct BP_LC21MapGimmickManager_C_SetIsFallToInfoFromActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBossFloorInfo                         CallFunc_GetFloorInfoFromActor_FloorInfo;          // 0x0008(0x0018)()
	int32                                         CallFunc_GetFloorInfoFromActor_no;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LC21MapGimmickManager_C_SetIsFallToInfoFromActor) == 0x000008, "Wrong alignment on BP_LC21MapGimmickManager_C_SetIsFallToInfoFromActor");
static_assert(sizeof(BP_LC21MapGimmickManager_C_SetIsFallToInfoFromActor) == 0x000030, "Wrong size on BP_LC21MapGimmickManager_C_SetIsFallToInfoFromActor");
static_assert(offsetof(BP_LC21MapGimmickManager_C_SetIsFallToInfoFromActor, Actor) == 0x000000, "Member 'BP_LC21MapGimmickManager_C_SetIsFallToInfoFromActor::Actor' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_SetIsFallToInfoFromActor, CallFunc_GetFloorInfoFromActor_FloorInfo) == 0x000008, "Member 'BP_LC21MapGimmickManager_C_SetIsFallToInfoFromActor::CallFunc_GetFloorInfoFromActor_FloorInfo' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_SetIsFallToInfoFromActor, CallFunc_GetFloorInfoFromActor_no) == 0x000020, "Member 'BP_LC21MapGimmickManager_C_SetIsFallToInfoFromActor::CallFunc_GetFloorInfoFromActor_no' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_SetIsFallToInfoFromActor, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_LC21MapGimmickManager_C_SetIsFallToInfoFromActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_SetIsFallToInfoFromActor, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_LC21MapGimmickManager_C_SetIsFallToInfoFromActor::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LC21MapGimmickManager.BP_LC21MapGimmickManager_C.StartEventLaser
// 0x0038 (0x0038 - 0x0000)
struct BP_LC21MapGimmickManager_C_StartEventLaser final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328F[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3290[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapGimmickFallFloor_C> K2Node_DynamicCast_AsBPI_Map_Gimmick_Fall_Floor;   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LC21MapGimmickManager_C_StartEventLaser) == 0x000008, "Wrong alignment on BP_LC21MapGimmickManager_C_StartEventLaser");
static_assert(sizeof(BP_LC21MapGimmickManager_C_StartEventLaser) == 0x000038, "Wrong size on BP_LC21MapGimmickManager_C_StartEventLaser");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaser, ReturnValue) == 0x000000, "Member 'BP_LC21MapGimmickManager_C_StartEventLaser::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaser, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_LC21MapGimmickManager_C_StartEventLaser::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaser, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_LC21MapGimmickManager_C_StartEventLaser::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaser, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_LC21MapGimmickManager_C_StartEventLaser::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaser, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_LC21MapGimmickManager_C_StartEventLaser::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaser, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_LC21MapGimmickManager_C_StartEventLaser::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaser, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_LC21MapGimmickManager_C_StartEventLaser::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaser, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_LC21MapGimmickManager_C_StartEventLaser::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaser, K2Node_DynamicCast_AsBPI_Map_Gimmick_Fall_Floor) == 0x000020, "Member 'BP_LC21MapGimmickManager_C_StartEventLaser::K2Node_DynamicCast_AsBPI_Map_Gimmick_Fall_Floor' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaser, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_LC21MapGimmickManager_C_StartEventLaser::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_LC21MapGimmickManager.BP_LC21MapGimmickManager_C.InitializeWall
// 0x0090 (0x0090 - 0x0000)
struct BP_LC21MapGimmickManager_C_InitializeWall final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3291[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3292[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3293[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABlockingVolume*                        K2Node_DynamicCast_As___________;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3294[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors_1;          // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors_2;          // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABlockingVolume*                        K2Node_DynamicCast_As____________1;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3295[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABlockingVolume*                        K2Node_DynamicCast_As____________2;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LC21MapGimmickManager_C_InitializeWall) == 0x000008, "Wrong alignment on BP_LC21MapGimmickManager_C_InitializeWall");
static_assert(sizeof(BP_LC21MapGimmickManager_C_InitializeWall) == 0x000090, "Wrong size on BP_LC21MapGimmickManager_C_InitializeWall");
static_assert(offsetof(BP_LC21MapGimmickManager_C_InitializeWall, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_LC21MapGimmickManager_C_InitializeWall::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_InitializeWall, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_LC21MapGimmickManager_C_InitializeWall::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_InitializeWall, CallFunc_GetAllActorsWithTag_OutActors) == 0x000008, "Member 'BP_LC21MapGimmickManager_C_InitializeWall::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_InitializeWall, CallFunc_IsValid_ReturnValue_2) == 0x000018, "Member 'BP_LC21MapGimmickManager_C_InitializeWall::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_InitializeWall, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_LC21MapGimmickManager_C_InitializeWall::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_InitializeWall, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'BP_LC21MapGimmickManager_C_InitializeWall::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_InitializeWall, K2Node_DynamicCast_As___________) == 0x000030, "Member 'BP_LC21MapGimmickManager_C_InitializeWall::K2Node_DynamicCast_As___________' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_InitializeWall, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_LC21MapGimmickManager_C_InitializeWall::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_InitializeWall, CallFunc_BooleanAND_ReturnValue_1) == 0x000039, "Member 'BP_LC21MapGimmickManager_C_InitializeWall::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_InitializeWall, CallFunc_GetAllActorsWithTag_OutActors_1) == 0x000040, "Member 'BP_LC21MapGimmickManager_C_InitializeWall::CallFunc_GetAllActorsWithTag_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_InitializeWall, CallFunc_GetAllActorsWithTag_OutActors_2) == 0x000050, "Member 'BP_LC21MapGimmickManager_C_InitializeWall::CallFunc_GetAllActorsWithTag_OutActors_2' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_InitializeWall, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'BP_LC21MapGimmickManager_C_InitializeWall::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_InitializeWall, CallFunc_Array_Get_Item_2) == 0x000068, "Member 'BP_LC21MapGimmickManager_C_InitializeWall::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_InitializeWall, K2Node_DynamicCast_As____________1) == 0x000070, "Member 'BP_LC21MapGimmickManager_C_InitializeWall::K2Node_DynamicCast_As____________1' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_InitializeWall, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BP_LC21MapGimmickManager_C_InitializeWall::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_InitializeWall, K2Node_DynamicCast_As____________2) == 0x000080, "Member 'BP_LC21MapGimmickManager_C_InitializeWall::K2Node_DynamicCast_As____________2' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_InitializeWall, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'BP_LC21MapGimmickManager_C_InitializeWall::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_LC21MapGimmickManager.BP_LC21MapGimmickManager_C.SetWallCollision
// 0x0004 (0x0004 - 0x0000)
struct BP_LC21MapGimmickManager_C_SetWallCollision final
{
public:
	bool                                          IsAfterLaser;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LC21MapGimmickManager_C_SetWallCollision) == 0x000001, "Wrong alignment on BP_LC21MapGimmickManager_C_SetWallCollision");
static_assert(sizeof(BP_LC21MapGimmickManager_C_SetWallCollision) == 0x000004, "Wrong size on BP_LC21MapGimmickManager_C_SetWallCollision");
static_assert(offsetof(BP_LC21MapGimmickManager_C_SetWallCollision, IsAfterLaser) == 0x000000, "Member 'BP_LC21MapGimmickManager_C_SetWallCollision::IsAfterLaser' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_SetWallCollision, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_LC21MapGimmickManager_C_SetWallCollision::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_SetWallCollision, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_LC21MapGimmickManager_C_SetWallCollision::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_SetWallCollision, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'BP_LC21MapGimmickManager_C_SetWallCollision::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_LC21MapGimmickManager.BP_LC21MapGimmickManager_C.StartFallLeftAllFromNo
// 0x0030 (0x0030 - 0x0000)
struct BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo final
{
public:
	int32                                         No;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActorId;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3296[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3297[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapGimmickFallFloor_C> K2Node_DynamicCast_AsBPI_Map_Gimmick_Fall_Floor;   // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo) == 0x000008, "Wrong alignment on BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo");
static_assert(sizeof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo) == 0x000030, "Wrong size on BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo, No) == 0x000000, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo::No' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo, ActorId) == 0x000004, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo::ActorId' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo, Temp_int_Variable) == 0x000008, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo, K2Node_DynamicCast_AsBPI_Map_Gimmick_Fall_Floor) == 0x000018, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo::K2Node_DynamicCast_AsBPI_Map_Gimmick_Fall_Floor' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_LC21MapGimmickManager_C_StartFallLeftAllFromNo::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_LC21MapGimmickManager.BP_LC21MapGimmickManager_C.FallLeftFloor
// 0x0010 (0x0010 - 0x0000)
struct BP_LC21MapGimmickManager_C_FallLeftFloor final
{
public:
	float                                         OffsetY;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3298[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMostRightSideFloorNo_ReturnValue;      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LC21MapGimmickManager_C_FallLeftFloor) == 0x000004, "Wrong alignment on BP_LC21MapGimmickManager_C_FallLeftFloor");
static_assert(sizeof(BP_LC21MapGimmickManager_C_FallLeftFloor) == 0x000010, "Wrong size on BP_LC21MapGimmickManager_C_FallLeftFloor");
static_assert(offsetof(BP_LC21MapGimmickManager_C_FallLeftFloor, OffsetY) == 0x000000, "Member 'BP_LC21MapGimmickManager_C_FallLeftFloor::OffsetY' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_FallLeftFloor, ReturnValue) == 0x000004, "Member 'BP_LC21MapGimmickManager_C_FallLeftFloor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_FallLeftFloor, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_LC21MapGimmickManager_C_FallLeftFloor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_FallLeftFloor, CallFunc_GetMostRightSideFloorNo_ReturnValue) == 0x00000C, "Member 'BP_LC21MapGimmickManager_C_FallLeftFloor::CallFunc_GetMostRightSideFloorNo_ReturnValue' has a wrong offset!");

// Function BP_LC21MapGimmickManager.BP_LC21MapGimmickManager_C.SetLaserWallCollision
// 0x0010 (0x0010 - 0x0000)
struct BP_LC21MapGimmickManager_C_SetLaserWallCollision final
{
public:
	class ABlockingVolume*                        BlockActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAfterLaser;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LC21MapGimmickManager_C_SetLaserWallCollision) == 0x000008, "Wrong alignment on BP_LC21MapGimmickManager_C_SetLaserWallCollision");
static_assert(sizeof(BP_LC21MapGimmickManager_C_SetLaserWallCollision) == 0x000010, "Wrong size on BP_LC21MapGimmickManager_C_SetLaserWallCollision");
static_assert(offsetof(BP_LC21MapGimmickManager_C_SetLaserWallCollision, BlockActor) == 0x000000, "Member 'BP_LC21MapGimmickManager_C_SetLaserWallCollision::BlockActor' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_SetLaserWallCollision, IsAfterLaser) == 0x000008, "Member 'BP_LC21MapGimmickManager_C_SetLaserWallCollision::IsAfterLaser' has a wrong offset!");

// Function BP_LC21MapGimmickManager.BP_LC21MapGimmickManager_C.StartEventLaserFar
// 0x0038 (0x0038 - 0x0000)
struct BP_LC21MapGimmickManager_C_StartEventLaserFar final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3299[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329A[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329B[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapGimmickFallFloor_C> K2Node_DynamicCast_AsBPI_Map_Gimmick_Fall_Floor;   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LC21MapGimmickManager_C_StartEventLaserFar) == 0x000008, "Wrong alignment on BP_LC21MapGimmickManager_C_StartEventLaserFar");
static_assert(sizeof(BP_LC21MapGimmickManager_C_StartEventLaserFar) == 0x000038, "Wrong size on BP_LC21MapGimmickManager_C_StartEventLaserFar");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserFar, ReturnValue) == 0x000000, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserFar::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserFar, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserFar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserFar, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserFar::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserFar, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserFar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserFar, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserFar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserFar, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserFar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserFar, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserFar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserFar, K2Node_DynamicCast_AsBPI_Map_Gimmick_Fall_Floor) == 0x000020, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserFar::K2Node_DynamicCast_AsBPI_Map_Gimmick_Fall_Floor' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserFar, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserFar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserFar, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserFar::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_LC21MapGimmickManager.BP_LC21MapGimmickManager_C.StartEventLaserCenter
// 0x0038 (0x0038 - 0x0000)
struct BP_LC21MapGimmickManager_C_StartEventLaserCenter final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329D[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329E[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapGimmickFallFloor_C> K2Node_DynamicCast_AsBPI_Map_Gimmick_Fall_Floor;   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LC21MapGimmickManager_C_StartEventLaserCenter) == 0x000008, "Wrong alignment on BP_LC21MapGimmickManager_C_StartEventLaserCenter");
static_assert(sizeof(BP_LC21MapGimmickManager_C_StartEventLaserCenter) == 0x000038, "Wrong size on BP_LC21MapGimmickManager_C_StartEventLaserCenter");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserCenter, ReturnValue) == 0x000000, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserCenter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserCenter, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserCenter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserCenter, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserCenter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserCenter, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserCenter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserCenter, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserCenter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserCenter, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserCenter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserCenter, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserCenter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserCenter, K2Node_DynamicCast_AsBPI_Map_Gimmick_Fall_Floor) == 0x000020, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserCenter::K2Node_DynamicCast_AsBPI_Map_Gimmick_Fall_Floor' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserCenter, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserCenter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserCenter, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserCenter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_LC21MapGimmickManager.BP_LC21MapGimmickManager_C.StartEventLaserSetWall
// 0x0001 (0x0001 - 0x0000)
struct BP_LC21MapGimmickManager_C_StartEventLaserSetWall final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LC21MapGimmickManager_C_StartEventLaserSetWall) == 0x000001, "Wrong alignment on BP_LC21MapGimmickManager_C_StartEventLaserSetWall");
static_assert(sizeof(BP_LC21MapGimmickManager_C_StartEventLaserSetWall) == 0x000001, "Wrong size on BP_LC21MapGimmickManager_C_StartEventLaserSetWall");
static_assert(offsetof(BP_LC21MapGimmickManager_C_StartEventLaserSetWall, ReturnValue) == 0x000000, "Member 'BP_LC21MapGimmickManager_C_StartEventLaserSetWall::ReturnValue' has a wrong offset!");

}

