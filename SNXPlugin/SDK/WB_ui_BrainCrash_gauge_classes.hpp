#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_BrainCrash_gauge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ui_BrainCrash_gauge.WB_ui_BrainCrash_gauge_C
// 0x0068 (0x0488 - 0x0420)
class UWB_ui_BrainCrash_gauge_C final : public UUIBrainCrashGauge
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Decision_2;                                        // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Decision;                                          // 0x0430(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Full;                                              // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x0440(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0448(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_none;                                      // 0x0450(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default;                                           // 0x0458(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Gauge_add;                                         // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Gauge_eff1;                                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Gauge_eff2;                                        // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Gauge_eff3;                                        // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Gauge_normal;                                      // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_ui_BrainCrash_gauge(int32 EntryPoint);
	void OnInitialized();
	void WidgetAnimationEvt_full_K2Node_WidgetAnimationEvent_1();
	void WidgetAnimationEvt_decision_2_K2Node_WidgetAnimationEvent_0();
	void UpdateState(int32 State, int32 SubState, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ui_BrainCrash_gauge_C">();
	}
	static class UWB_ui_BrainCrash_gauge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ui_BrainCrash_gauge_C>();
	}
};
static_assert(alignof(UWB_ui_BrainCrash_gauge_C) == 0x000008, "Wrong alignment on UWB_ui_BrainCrash_gauge_C");
static_assert(sizeof(UWB_ui_BrainCrash_gauge_C) == 0x000488, "Wrong size on UWB_ui_BrainCrash_gauge_C");
static_assert(offsetof(UWB_ui_BrainCrash_gauge_C, UberGraphFrame) == 0x000420, "Member 'UWB_ui_BrainCrash_gauge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainCrash_gauge_C, Decision_2) == 0x000428, "Member 'UWB_ui_BrainCrash_gauge_C::Decision_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainCrash_gauge_C, Decision) == 0x000430, "Member 'UWB_ui_BrainCrash_gauge_C::Decision' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainCrash_gauge_C, Full) == 0x000438, "Member 'UWB_ui_BrainCrash_gauge_C::Full' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainCrash_gauge_C, Out) == 0x000440, "Member 'UWB_ui_BrainCrash_gauge_C::Out' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainCrash_gauge_C, In) == 0x000448, "Member 'UWB_ui_BrainCrash_gauge_C::In' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainCrash_gauge_C, Default_none) == 0x000450, "Member 'UWB_ui_BrainCrash_gauge_C::Default_none' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainCrash_gauge_C, Default) == 0x000458, "Member 'UWB_ui_BrainCrash_gauge_C::Default' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainCrash_gauge_C, Gauge_add) == 0x000460, "Member 'UWB_ui_BrainCrash_gauge_C::Gauge_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainCrash_gauge_C, Gauge_eff1) == 0x000468, "Member 'UWB_ui_BrainCrash_gauge_C::Gauge_eff1' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainCrash_gauge_C, Gauge_eff2) == 0x000470, "Member 'UWB_ui_BrainCrash_gauge_C::Gauge_eff2' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainCrash_gauge_C, Gauge_eff3) == 0x000478, "Member 'UWB_ui_BrainCrash_gauge_C::Gauge_eff3' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainCrash_gauge_C, Gauge_normal) == 0x000480, "Member 'UWB_ui_BrainCrash_gauge_C::Gauge_normal' has a wrong offset!");

}

