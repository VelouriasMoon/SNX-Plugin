#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ENPCBrainFieldGauge

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.ExecuteUbergraph_BP_ENPCBrainFieldGauge
// 0x00C8 (0x00C8 - 0x0000)
struct BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D35[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBrainFieldUser_User;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D36[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsBrainField;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D37[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D38[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EBrainFieldEndType EndType)>   K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrainFieldEndType                            K2Node_CustomEvent_EndType;                        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D39[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_1;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         K2Node_DynamicCast_AsHUDMain_Game;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D3A[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         K2Node_DynamicCast_AsHUDMain_Game_1;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D3B[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D3C[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool IsBrainField)>            K2Node_CreateDelegate_OutputDelegate_2;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge) == 0x000008, "Wrong alignment on BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge");
static_assert(sizeof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge) == 0x0000C8, "Wrong size on BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, EntryPoint) == 0x000000, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, CallFunc_GetBrainFieldManager_Manager) == 0x000008, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, CallFunc_GetBrainFieldUser_User) == 0x000010, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::CallFunc_GetBrainFieldUser_User' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, Temp_bool_Has_Been_Initd_Variable) == 0x000018, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, Temp_bool_IsClosed_Variable) == 0x000019, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, K2Node_Event_DeltaSeconds) == 0x00001C, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, K2Node_CustomEvent_IsBrainField) == 0x000020, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::K2Node_CustomEvent_IsBrainField' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, CallFunc_FClamp_ReturnValue) == 0x00002C, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000044, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, K2Node_CustomEvent_EndType) == 0x000049, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::K2Node_CustomEvent_EndType' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, CallFunc_GetBrainFieldManager_Manager_1) == 0x000050, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::CallFunc_GetBrainFieldManager_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, CallFunc_GetPlayerController_ReturnValue) == 0x000058, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, CallFunc_GetHUD_ReturnValue) == 0x000060, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, CallFunc_GetPlayerController_ReturnValue_1) == 0x000068, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, K2Node_DynamicCast_AsHUDMain_Game) == 0x000070, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::K2Node_DynamicCast_AsHUDMain_Game' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, CallFunc_GetHUD_ReturnValue_1) == 0x000080, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, K2Node_DynamicCast_AsHUDMain_Game_1) == 0x000088, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::K2Node_DynamicCast_AsHUDMain_Game_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000094, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, K2Node_CreateDelegate_OutputDelegate_1) == 0x000098, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, CallFunc_FClamp_ReturnValue_1) == 0x0000A8, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0000AC, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0000AD, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000B0, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000C0, "Member 'BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.OnChangedBrainFieldEnd
// 0x0001 (0x0001 - 0x0000)
struct BP_ENPCBrainFieldGauge_C_OnChangedBrainFieldEnd final
{
public:
	EBrainFieldEndType                            EndType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPCBrainFieldGauge_C_OnChangedBrainFieldEnd) == 0x000001, "Wrong alignment on BP_ENPCBrainFieldGauge_C_OnChangedBrainFieldEnd");
static_assert(sizeof(BP_ENPCBrainFieldGauge_C_OnChangedBrainFieldEnd) == 0x000001, "Wrong size on BP_ENPCBrainFieldGauge_C_OnChangedBrainFieldEnd");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_OnChangedBrainFieldEnd, EndType) == 0x000000, "Member 'BP_ENPCBrainFieldGauge_C_OnChangedBrainFieldEnd::EndType' has a wrong offset!");

// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.OnChangedBrainFieldBG
// 0x0001 (0x0001 - 0x0000)
struct BP_ENPCBrainFieldGauge_C_OnChangedBrainFieldBG final
{
public:
	bool                                          IsBrainField;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPCBrainFieldGauge_C_OnChangedBrainFieldBG) == 0x000001, "Wrong alignment on BP_ENPCBrainFieldGauge_C_OnChangedBrainFieldBG");
static_assert(sizeof(BP_ENPCBrainFieldGauge_C_OnChangedBrainFieldBG) == 0x000001, "Wrong size on BP_ENPCBrainFieldGauge_C_OnChangedBrainFieldBG");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_OnChangedBrainFieldBG, IsBrainField) == 0x000000, "Member 'BP_ENPCBrainFieldGauge_C_OnChangedBrainFieldBG::IsBrainField' has a wrong offset!");

// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ENPCBrainFieldGauge_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPCBrainFieldGauge_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ENPCBrainFieldGauge_C_ReceiveTick");
static_assert(sizeof(BP_ENPCBrainFieldGauge_C_ReceiveTick) == 0x000004, "Wrong size on BP_ENPCBrainFieldGauge_C_ReceiveTick");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ENPCBrainFieldGauge_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.AddGaugeByAttack
// 0x0010 (0x0010 - 0x0000)
struct BP_ENPCBrainFieldGauge_C_AddGaugeByAttack final
{
public:
	class AActor*                                 Attacker;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LAddValue;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPCBrainFieldGauge_C_AddGaugeByAttack) == 0x000008, "Wrong alignment on BP_ENPCBrainFieldGauge_C_AddGaugeByAttack");
static_assert(sizeof(BP_ENPCBrainFieldGauge_C_AddGaugeByAttack) == 0x000010, "Wrong size on BP_ENPCBrainFieldGauge_C_AddGaugeByAttack");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_AddGaugeByAttack, Attacker) == 0x000000, "Member 'BP_ENPCBrainFieldGauge_C_AddGaugeByAttack::Attacker' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_AddGaugeByAttack, LAddValue) == 0x000008, "Member 'BP_ENPCBrainFieldGauge_C_AddGaugeByAttack::LAddValue' has a wrong offset!");

// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.Set Enable Gauge
// 0x0098 (0x0098 - 0x0000)
struct BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bForce;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D3D[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 BrainFieldUser;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LSuccess;                                          // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D3E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         LBattleEnemyList;                                  // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D3F[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D40[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D41[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D42[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D43[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0070(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUserIsPlayer_IsPlayer;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D44[0x1];                                     // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge) == 0x000008, "Wrong alignment on BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge");
static_assert(sizeof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge) == 0x000098, "Wrong size on BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, bEnable) == 0x000000, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::bEnable' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, bForce) == 0x000001, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::bForce' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, BrainFieldUser) == 0x000008, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::BrainFieldUser' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, LSuccess) == 0x000010, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::LSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, LBattleEnemyList) == 0x000018, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::LBattleEnemyList' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, Temp_bool_True_if_break_was_hit_Variable) == 0x000028, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000048, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x000059, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, CallFunc_GetEnemyManager_Manager) == 0x000060, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, CallFunc_GetEnemyList_ReturnValue) == 0x000070, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, CallFunc_GetBrainFieldManager_Manager) == 0x000080, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, CallFunc_IsUserIsPlayer_IsPlayer) == 0x00008C, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::CallFunc_IsUserIsPlayer_IsPlayer' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, CallFunc_Not_PreBool_ReturnValue_1) == 0x00008D, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, CallFunc_Less_IntInt_ReturnValue) == 0x00008E, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, CallFunc_BooleanAND_ReturnValue) == 0x000094, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, CallFunc_InBranField_InBrainDield) == 0x000095, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, CallFunc_BooleanAND_ReturnValue_1) == 0x000096, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge, CallFunc_BooleanOR_ReturnValue) == 0x000097, "Member 'BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.setMode
// 0x0068 (0x0068 - 0x0000)
struct BP_ENPCBrainFieldGauge_C_SetMode final
{
public:
	bool                                          bInBrainField;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D45[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 BFUser;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D46[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_1;       // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D47[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ENpcComponent_C*                    CallFunc_GetEnpcComp_ReturnComp;                   // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D48[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetENPCBrainFieldTime_ENPCBrainFieldTime; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBrainFieldUser_User;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPCBrainFieldGauge_C_SetMode) == 0x000008, "Wrong alignment on BP_ENPCBrainFieldGauge_C_SetMode");
static_assert(sizeof(BP_ENPCBrainFieldGauge_C_SetMode) == 0x000068, "Wrong size on BP_ENPCBrainFieldGauge_C_SetMode");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetMode, bInBrainField) == 0x000000, "Member 'BP_ENPCBrainFieldGauge_C_SetMode::bInBrainField' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetMode, BFUser) == 0x000008, "Member 'BP_ENPCBrainFieldGauge_C_SetMode::BFUser' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetMode, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000010, "Member 'BP_ENPCBrainFieldGauge_C_SetMode::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetMode, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_ENPCBrainFieldGauge_C_SetMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetMode, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x000021, "Member 'BP_ENPCBrainFieldGauge_C_SetMode::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetMode, K2Node_DynamicCast_AsBPI_Player_Interface_1) == 0x000028, "Member 'BP_ENPCBrainFieldGauge_C_SetMode::K2Node_DynamicCast_AsBPI_Player_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetMode, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_ENPCBrainFieldGauge_C_SetMode::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetMode, CallFunc_GetEnpcComp_ReturnComp) == 0x000040, "Member 'BP_ENPCBrainFieldGauge_C_SetMode::CallFunc_GetEnpcComp_ReturnComp' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetMode, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_ENPCBrainFieldGauge_C_SetMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetMode, CallFunc_GetENPCBrainFieldTime_ENPCBrainFieldTime) == 0x00004C, "Member 'BP_ENPCBrainFieldGauge_C_SetMode::CallFunc_GetENPCBrainFieldTime_ENPCBrainFieldTime' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetMode, CallFunc_GetBrainFieldManager_Manager) == 0x000050, "Member 'BP_ENPCBrainFieldGauge_C_SetMode::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetMode, CallFunc_GetBrainFieldUser_User) == 0x000058, "Member 'BP_ENPCBrainFieldGauge_C_SetMode::CallFunc_GetBrainFieldUser_User' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetMode, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000060, "Member 'BP_ENPCBrainFieldGauge_C_SetMode::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetMode, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000061, "Member 'BP_ENPCBrainFieldGauge_C_SetMode::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.TickBrainField
// 0x0038 (0x0038 - 0x0000)
struct BP_ENPCBrainFieldGauge_C_TickBrainField final
{
public:
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D49[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBrainFieldUser_User;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D4A[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPCBrainFieldGauge_C_TickBrainField) == 0x000008, "Wrong alignment on BP_ENPCBrainFieldGauge_C_TickBrainField");
static_assert(sizeof(BP_ENPCBrainFieldGauge_C_TickBrainField) == 0x000038, "Wrong size on BP_ENPCBrainFieldGauge_C_TickBrainField");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickBrainField, CallFunc_GetBrainFieldManager_Manager) == 0x000000, "Member 'BP_ENPCBrainFieldGauge_C_TickBrainField::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickBrainField, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_ENPCBrainFieldGauge_C_TickBrainField::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickBrainField, CallFunc_GetBrainFieldUser_User) == 0x000010, "Member 'BP_ENPCBrainFieldGauge_C_TickBrainField::CallFunc_GetBrainFieldUser_User' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickBrainField, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000018, "Member 'BP_ENPCBrainFieldGauge_C_TickBrainField::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickBrainField, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_ENPCBrainFieldGauge_C_TickBrainField::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickBrainField, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_ENPCBrainFieldGauge_C_TickBrainField::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickBrainField, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x00002A, "Member 'BP_ENPCBrainFieldGauge_C_TickBrainField::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickBrainField, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'BP_ENPCBrainFieldGauge_C_TickBrainField::CallFunc_GetOwner_ReturnValue' has a wrong offset!");

// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.TickNormalField
// 0x0078 (0x0078 - 0x0000)
struct BP_ENPCBrainFieldGauge_C_TickNormalField final
{
public:
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEventStartup_IsEvent;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D4B[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_1;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D4C[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBrainFieldUser_User;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_2;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEventStartup_IsEvent_1;                 // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D4D[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D4E[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPCBrainFieldGauge_C_TickNormalField) == 0x000008, "Wrong alignment on BP_ENPCBrainFieldGauge_C_TickNormalField");
static_assert(sizeof(BP_ENPCBrainFieldGauge_C_TickNormalField) == 0x000078, "Wrong size on BP_ENPCBrainFieldGauge_C_TickNormalField");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, CallFunc_GetBrainFieldManager_Manager) == 0x000000, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, CallFunc_IsEventStartup_IsEvent) == 0x000008, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::CallFunc_IsEventStartup_IsEvent' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, CallFunc_GetBrainFieldManager_Manager_1) == 0x000018, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::CallFunc_GetBrainFieldManager_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, CallFunc_GetBrainFieldUser_User) == 0x000028, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::CallFunc_GetBrainFieldUser_User' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, CallFunc_GetBrainFieldManager_Manager_2) == 0x000030, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::CallFunc_GetBrainFieldManager_Manager_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000038, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, CallFunc_IsEventStartup_IsEvent_1) == 0x000049, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::CallFunc_IsEventStartup_IsEvent_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x00004A, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, CallFunc_IsValid_ReturnValue_1) == 0x00004B, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, CallFunc_GetDebuggingManager_Manager) == 0x000050, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, CallFunc_IsValid_ReturnValue_2) == 0x000058, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, CallFunc_Add_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, CallFunc_FClamp_ReturnValue) == 0x000064, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000068, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, CallFunc_FClamp_ReturnValue_1) == 0x00006C, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_TickNormalField, CallFunc_IsOver_ReturnValue) == 0x000070, "Member 'BP_ENPCBrainFieldGauge_C_TickNormalField::CallFunc_IsOver_ReturnValue' has a wrong offset!");

// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.AddGaugeByDefense
// 0x0010 (0x0010 - 0x0000)
struct BP_ENPCBrainFieldGauge_C_AddGaugeByDefense final
{
public:
	class AActor*                                 Attacker;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LAddGauge;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPCBrainFieldGauge_C_AddGaugeByDefense) == 0x000008, "Wrong alignment on BP_ENPCBrainFieldGauge_C_AddGaugeByDefense");
static_assert(sizeof(BP_ENPCBrainFieldGauge_C_AddGaugeByDefense) == 0x000010, "Wrong size on BP_ENPCBrainFieldGauge_C_AddGaugeByDefense");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_AddGaugeByDefense, Attacker) == 0x000000, "Member 'BP_ENPCBrainFieldGauge_C_AddGaugeByDefense::Attacker' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_AddGaugeByDefense, LAddGauge) == 0x000008, "Member 'BP_ENPCBrainFieldGauge_C_AddGaugeByDefense::LAddGauge' has a wrong offset!");

// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.SetVisibleGauge
// 0x00A0 (0x00A0 - 0x0000)
struct BP_ENPCBrainFieldGauge_C_SetVisibleGauge final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFromEnpc;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D4F[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         LBattleEnemyList;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          LSuccess;                                          // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D50[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D51[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D52[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D53[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D54[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D55[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D56[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         K2Node_DynamicCast_AsHUDMain_Game;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge) == 0x000008, "Wrong alignment on BP_ENPCBrainFieldGauge_C_SetVisibleGauge");
static_assert(sizeof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge) == 0x0000A0, "Wrong size on BP_ENPCBrainFieldGauge_C_SetVisibleGauge");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, bVisible) == 0x000000, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::bVisible' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, bFromEnpc) == 0x000001, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::bFromEnpc' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, LBattleEnemyList) == 0x000008, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::LBattleEnemyList' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, LSuccess) == 0x000018, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::LSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, Temp_bool_True_if_break_was_hit_Variable) == 0x000019, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, CallFunc_GetEnemyManager_Manager) == 0x000030, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000048, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x000059, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, CallFunc_GetEnemyList_ReturnValue) == 0x000060, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, CallFunc_GetPlayerController_ReturnValue) == 0x000078, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, CallFunc_BooleanAND_ReturnValue) == 0x000080, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, CallFunc_GetHUD_ReturnValue) == 0x000088, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, K2Node_DynamicCast_AsHUDMain_Game) == 0x000090, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::K2Node_DynamicCast_AsHUDMain_Game' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetVisibleGauge, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BP_ENPCBrainFieldGauge_C_SetVisibleGauge::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.SetUpdateGauge
// 0x0018 (0x0018 - 0x0000)
struct BP_ENPCBrainFieldGauge_C_SetUpdateGauge final
{
public:
	bool                                          bUpdate;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D57[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ClaimantName;                                      // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPCBrainFieldGauge_C_SetUpdateGauge) == 0x000004, "Wrong alignment on BP_ENPCBrainFieldGauge_C_SetUpdateGauge");
static_assert(sizeof(BP_ENPCBrainFieldGauge_C_SetUpdateGauge) == 0x000018, "Wrong size on BP_ENPCBrainFieldGauge_C_SetUpdateGauge");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetUpdateGauge, bUpdate) == 0x000000, "Member 'BP_ENPCBrainFieldGauge_C_SetUpdateGauge::bUpdate' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetUpdateGauge, ClaimantName) == 0x000004, "Member 'BP_ENPCBrainFieldGauge_C_SetUpdateGauge::ClaimantName' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetUpdateGauge, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'BP_ENPCBrainFieldGauge_C_SetUpdateGauge::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetUpdateGauge, CallFunc_Array_Find_ReturnValue) == 0x000010, "Member 'BP_ENPCBrainFieldGauge_C_SetUpdateGauge::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetUpdateGauge, CallFunc_Array_RemoveItem_ReturnValue) == 0x000014, "Member 'BP_ENPCBrainFieldGauge_C_SetUpdateGauge::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetUpdateGauge, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000015, "Member 'BP_ENPCBrainFieldGauge_C_SetUpdateGauge::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.SetFullGauge
// 0x0018 (0x0018 - 0x0000)
struct BP_ENPCBrainFieldGauge_C_SetFullGauge final
{
public:
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEventStartup_IsEvent;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D58[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPCBrainFieldGauge_C_SetFullGauge) == 0x000008, "Wrong alignment on BP_ENPCBrainFieldGauge_C_SetFullGauge");
static_assert(sizeof(BP_ENPCBrainFieldGauge_C_SetFullGauge) == 0x000018, "Wrong size on BP_ENPCBrainFieldGauge_C_SetFullGauge");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetFullGauge, CallFunc_GetBrainFieldManager_Manager) == 0x000000, "Member 'BP_ENPCBrainFieldGauge_C_SetFullGauge::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetFullGauge, CallFunc_IsEventStartup_IsEvent) == 0x000008, "Member 'BP_ENPCBrainFieldGauge_C_SetFullGauge::CallFunc_IsEventStartup_IsEvent' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetFullGauge, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_ENPCBrainFieldGauge_C_SetFullGauge::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_SetFullGauge, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'BP_ENPCBrainFieldGauge_C_SetFullGauge::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.GetGaugeRate
// 0x0010 (0x0010 - 0x0000)
struct BP_ENPCBrainFieldGauge_C_GetGaugeRate final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPCBrainFieldGauge_C_GetGaugeRate) == 0x000004, "Wrong alignment on BP_ENPCBrainFieldGauge_C_GetGaugeRate");
static_assert(sizeof(BP_ENPCBrainFieldGauge_C_GetGaugeRate) == 0x000010, "Wrong size on BP_ENPCBrainFieldGauge_C_GetGaugeRate");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_GetGaugeRate, Rate) == 0x000000, "Member 'BP_ENPCBrainFieldGauge_C_GetGaugeRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_GetGaugeRate, CallFunc_GetRate_ReturnValue) == 0x000004, "Member 'BP_ENPCBrainFieldGauge_C_GetGaugeRate::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_GetGaugeRate, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_ENPCBrainFieldGauge_C_GetGaugeRate::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_GetGaugeRate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_ENPCBrainFieldGauge_C_GetGaugeRate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.IsEnableGauge
// 0x0001 (0x0001 - 0x0000)
struct BP_ENPCBrainFieldGauge_C_IsEnableGauge final
{
public:
	bool                                          Param_bEnableGauge;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPCBrainFieldGauge_C_IsEnableGauge) == 0x000001, "Wrong alignment on BP_ENPCBrainFieldGauge_C_IsEnableGauge");
static_assert(sizeof(BP_ENPCBrainFieldGauge_C_IsEnableGauge) == 0x000001, "Wrong size on BP_ENPCBrainFieldGauge_C_IsEnableGauge");
static_assert(offsetof(BP_ENPCBrainFieldGauge_C_IsEnableGauge, Param_bEnableGauge) == 0x000000, "Member 'BP_ENPCBrainFieldGauge_C_IsEnableGauge::Param_bEnableGauge' has a wrong offset!");

}

